{"ast":null,"code":"var _jsxFileName = \"/Users/parthzanwar/Desktop/Space Apps/public/src/components/PathVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisualizationContainer = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 15px;\n  padding: 25px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n_c = VisualizationContainer;\nconst VisualizationHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n_c2 = VisualizationHeader;\nconst VisualizationTitle = styled.h3`\n  font-size: 18px;\n  font-weight: 600;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n_c3 = VisualizationTitle;\nconst ViewControls = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n_c4 = ViewControls;\nconst ViewButton = styled.button`\n  background: ${props => props.active ? 'rgba(0, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)'};\n  border: 1px solid ${props => props.active ? '#00ffff' : 'rgba(255, 255, 255, 0.3)'};\n  padding: 6px 12px;\n  border-radius: 15px;\n  color: #ffffff;\n  font-size: 11px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background: rgba(0, 255, 255, 0.2);\n    border-color: #00ffff;\n  }\n`;\n_c5 = ViewButton;\nconst CanvasContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 400px;\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 10px;\n  overflow: hidden;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n_c6 = CanvasContainer;\nconst Canvas = styled.canvas`\n  width: 100%;\n  height: 100%;\n  cursor: grab;\n  \n  &:active {\n    cursor: grabbing;\n  }\n`;\n_c7 = Canvas;\nconst PathInfo = styled.div`\n  margin-top: 20px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 15px;\n`;\n_c8 = PathInfo;\nconst InfoCard = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  padding: 12px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n_c9 = InfoCard;\nconst InfoLabel = styled.div`\n  font-size: 11px;\n  color: rgba(255, 255, 255, 0.7);\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  margin-bottom: 5px;\n`;\n_c0 = InfoLabel;\nconst InfoValue = styled.div`\n  font-size: 14px;\n  font-weight: 600;\n  color: #ffffff;\n`;\n_c1 = InfoValue;\nconst Legend = styled.div`\n  margin-top: 15px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n_c10 = Legend;\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.8);\n`;\n_c11 = LegendItem;\nconst LegendColor = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: ${props => props.color};\n`;\n_c12 = LegendColor;\nconst PathSteps = styled.div`\n  margin-top: 20px;\n  max-height: 200px;\n  overflow-y: auto;\n`;\n_c13 = PathSteps;\nconst StepItem = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  padding: 10px;\n  margin-bottom: 8px;\n  border-left: 3px solid ${props => props.color};\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.8);\n`;\n_c14 = StepItem;\nfunction PathVisualization({\n  pathData,\n  analysisResult\n}) {\n  _s();\n  var _pathData$path;\n  const canvasRef = useRef(null);\n  const [viewMode, setViewMode] = useState('3d');\n  const [camera, setCamera] = useState({\n    x: 0,\n    y: 0,\n    z: 1000\n  });\n  const [rotation, setRotation] = useState({\n    x: 0,\n    y: 0\n  });\n  const [showOnImage, setShowOnImage] = useState(false);\n  useEffect(() => {\n    if (pathData && pathData.visualization) {\n      drawPath();\n    }\n  }, [pathData, viewMode, camera, rotation, showOnImage]);\n  const drawPath = () => {\n    const canvas = canvasRef.current;\n    if (!canvas || !pathData.visualization) return;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    const dpr = window.devicePixelRatio || 1;\n    canvas.width = rect.width * dpr;\n    canvas.height = rect.height * dpr;\n    ctx.scale(dpr, dpr);\n    canvas.style.width = rect.width + 'px';\n    canvas.style.height = rect.height + 'px';\n\n    // Clear canvas or draw background image\n    if (showOnImage && analysisResult && analysisResult.image_url) {\n      // Draw the original image as background\n      const img = new Image();\n      img.onload = () => {\n        ctx.drawImage(img, 0, 0, rect.width, rect.height);\n        drawPathOverlay(ctx, rect);\n      };\n      img.src = analysisResult.image_url;\n      return;\n    } else {\n      // Clear canvas with background\n      ctx.fillStyle = viewMode === '3d' ? 'rgba(0, 0, 20, 0.3)' : 'rgba(0, 0, 0, 0.1)';\n      ctx.fillRect(0, 0, rect.width, rect.height);\n    }\n    drawPathOverlay(ctx, rect);\n  };\n  const drawPathOverlay = (ctx, rect) => {\n    const points = pathData.visualization.points;\n    const connections = pathData.visualization.connections;\n    const metadata = pathData.visualization.metadata || [];\n    if (!points || points.length === 0) return;\n\n    // Calculate bounds\n    const bounds = calculateBounds(points);\n    const scale = Math.min(rect.width, rect.height) / Math.max(bounds.width, bounds.height) * 0.8;\n    const centerX = rect.width / 2;\n    const centerY = rect.height / 2;\n\n    // Project 3D points to 2D with view mode consideration\n    const projectedPoints = points.map(point => {\n      const [x, y, z] = point;\n      if (viewMode === '2d') {\n        // Simple 2D projection (ignore Z)\n        const projectedX = centerX + (x - bounds.centerX) * scale;\n        const projectedY = centerY + (y - bounds.centerY) * scale;\n        return {\n          x: projectedX,\n          y: projectedY,\n          z: 0\n        };\n      } else {\n        // 3D perspective projection with rotation (improved)\n        const cosX = Math.cos(rotation.x * 0.5);\n        const sinX = Math.sin(rotation.x * 0.5);\n        const cosY = Math.cos(rotation.y * 0.5);\n        const sinY = Math.sin(rotation.y * 0.5);\n\n        // Apply rotation with better scaling\n        const rotatedX = x * cosY - z * sinY;\n        const rotatedY = y * cosX + (x * sinY + z * cosY) * sinX;\n        const rotatedZ = (x * sinY + z * cosY) * cosX - y * sinX;\n\n        // Perspective projection with better depth handling\n        const perspective = 1000;\n        const depth = Math.max(1, rotatedZ + perspective);\n        const projectedX = centerX + rotatedX / depth * scale * 200;\n        const projectedY = centerY + rotatedY / depth * scale * 200;\n        return {\n          x: projectedX,\n          y: projectedY,\n          z: rotatedZ\n        };\n      }\n    });\n\n    // Draw connections\n    ctx.strokeStyle = 'rgba(0, 255, 255, 0.6)';\n    ctx.lineWidth = 2;\n    ctx.setLineDash([5, 5]);\n    for (const connection of connections) {\n      const [startIdx, endIdx] = connection;\n      if (startIdx < projectedPoints.length && endIdx < projectedPoints.length) {\n        const start = projectedPoints[startIdx];\n        const end = projectedPoints[endIdx];\n        ctx.beginPath();\n        ctx.moveTo(start.x, start.y);\n        ctx.lineTo(end.x, end.y);\n        ctx.stroke();\n      }\n    }\n\n    // Reset line dash\n    ctx.setLineDash([]);\n\n    // Draw points\n    projectedPoints.forEach((point, index) => {\n      var _pathData$visualizati;\n      const isStart = index === 0;\n      const isEnd = index === projectedPoints.length - 1;\n      const metadata = (_pathData$visualizati = pathData.visualization.metadata) === null || _pathData$visualizati === void 0 ? void 0 : _pathData$visualizati[index - 1]; // -1 because start point has no metadata\n\n      let color, radius;\n      if (isStart) {\n        color = '#00ff00';\n        radius = 8;\n      } else if (isEnd) {\n        color = '#ff0000';\n        radius = 8;\n      } else if (metadata) {\n        color = metadata.feasible ? '#00ffff' : '#ffaa00';\n        radius = Math.max(4, Math.min(12, metadata.size * 2));\n      } else {\n        color = '#ffffff';\n        radius = 6;\n      }\n\n      // Draw point\n      ctx.fillStyle = color;\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, radius, 0, 2 * Math.PI);\n      ctx.fill();\n\n      // Draw border\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.8)';\n      ctx.lineWidth = 1;\n      ctx.stroke();\n\n      // Draw labels\n      if (metadata || isStart || isEnd) {\n        ctx.fillStyle = '#ffffff';\n        ctx.font = '10px Inter, sans-serif';\n        ctx.textAlign = 'center';\n        const label = isStart ? 'START' : isEnd ? 'END' : `D${(metadata === null || metadata === void 0 ? void 0 : metadata.debris_id) || index}`;\n        ctx.fillText(label, point.x, point.y - radius - 10);\n      }\n    });\n\n    // Draw coordinate axes (only in 3D mode and not on image)\n    if (viewMode === '3d' && !showOnImage) {\n      drawAxes(ctx, centerX, centerY, scale);\n    }\n  };\n  const calculateBounds = points => {\n    if (points.length === 0) return {\n      minX: 0,\n      maxX: 0,\n      minY: 0,\n      maxY: 0,\n      centerX: 0,\n      centerY: 0,\n      width: 0,\n      height: 0\n    };\n    const xCoords = points.map(p => p[0]);\n    const yCoords = points.map(p => p[1]);\n    const minX = Math.min(...xCoords);\n    const maxX = Math.max(...xCoords);\n    const minY = Math.min(...yCoords);\n    const maxY = Math.max(...yCoords);\n    return {\n      minX,\n      maxX,\n      minY,\n      maxY,\n      centerX: (minX + maxX) / 2,\n      centerY: (minY + maxY) / 2,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  };\n  const drawAxes = (ctx, centerX, centerY, scale) => {\n    ctx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n    ctx.lineWidth = 1;\n\n    // X axis\n    ctx.beginPath();\n    ctx.moveTo(centerX - 50, centerY);\n    ctx.lineTo(centerX + 50, centerY);\n    ctx.stroke();\n\n    // Y axis\n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY - 50);\n    ctx.lineTo(centerX, centerY + 50);\n    ctx.stroke();\n\n    // Labels\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.6)';\n    ctx.font = '8px Inter, sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('X', centerX + 55, centerY + 3);\n    ctx.fillText('Y', centerX + 3, centerY - 55);\n  };\n  const handleCanvasMouseMove = e => {\n    // Mouse interaction for rotation (only in 3D mode)\n    if (viewMode !== '3d') return;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const x = (e.clientX - rect.left) / rect.width;\n    const y = (e.clientY - rect.top) / rect.height;\n    setRotation({\n      x: (y - 0.5) * Math.PI,\n      y: (x - 0.5) * Math.PI\n    });\n  };\n  if (!pathData || !pathData.visualization) {\n    return /*#__PURE__*/_jsxDEV(VisualizationContainer, {\n      children: [/*#__PURE__*/_jsxDEV(VisualizationHeader, {\n        children: /*#__PURE__*/_jsxDEV(VisualizationTitle, {\n          children: \"\\uD83D\\uDDFA\\uFE0F Path Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '40px',\n          color: 'rgba(255, 255, 255, 0.5)'\n        },\n        children: \"No path data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this);\n  }\n  const metrics = pathData.metrics || {};\n  return /*#__PURE__*/_jsxDEV(VisualizationContainer, {\n    children: [/*#__PURE__*/_jsxDEV(VisualizationHeader, {\n      children: [/*#__PURE__*/_jsxDEV(VisualizationTitle, {\n        children: \"\\uD83D\\uDDFA\\uFE0F Path Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ViewControls, {\n        children: [/*#__PURE__*/_jsxDEV(ViewButton, {\n          active: viewMode === '3d',\n          onClick: () => setViewMode('3d'),\n          children: \"3D View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ViewButton, {\n          active: viewMode === '2d',\n          onClick: () => setViewMode('2d'),\n          children: \"2D View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ViewButton, {\n          active: showOnImage,\n          onClick: () => setShowOnImage(!showOnImage),\n          children: \"\\uD83D\\uDCF8 On Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CanvasContainer, {\n      children: /*#__PURE__*/_jsxDEV(Canvas, {\n        ref: canvasRef,\n        onMouseMove: handleCanvasMouseMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      children: [/*#__PURE__*/_jsxDEV(LegendItem, {\n        children: [/*#__PURE__*/_jsxDEV(LegendColor, {\n          color: \"#00ff00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Start Position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LegendItem, {\n        children: [/*#__PURE__*/_jsxDEV(LegendColor, {\n          color: \"#00ffff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Feasible Debris\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LegendItem, {\n        children: [/*#__PURE__*/_jsxDEV(LegendColor, {\n          color: \"#ffaa00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Non-feasible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LegendItem, {\n        children: [/*#__PURE__*/_jsxDEV(LegendColor, {\n          color: \"#ff0000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"End Position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LegendItem, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '12px',\n            height: '2px',\n            background: 'rgba(0, 255, 255, 0.6)',\n            margin: '5px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Path Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PathInfo, {\n      children: [/*#__PURE__*/_jsxDEV(InfoCard, {\n        children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n          children: \"Path Length\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n          children: [pathData.path_length || 0, \" steps\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoCard, {\n        children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n          children: \"Total Distance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n          children: metrics.total_distance ? `${(metrics.total_distance / 1000).toFixed(1)} km` : '0 km'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoCard, {\n        children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n          children: \"Mission Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n          children: metrics.total_time ? `${(metrics.total_time / 3600).toFixed(1)} hours` : '0 hours'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoCard, {\n        children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n          children: \"Fuel Required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n          children: metrics.total_fuel ? `${metrics.total_fuel.toFixed(1)} kg` : '0 kg'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PathSteps, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: '#ffffff',\n          marginBottom: '10px',\n          fontSize: '14px'\n        },\n        children: \"Path Steps:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this), (_pathData$path = pathData.path) === null || _pathData$path === void 0 ? void 0 : _pathData$path.map((step, index) => /*#__PURE__*/_jsxDEV(StepItem, {\n        color: index === 0 ? '#00ff00' : index === pathData.path.length - 1 ? '#ff0000' : '#00ffff',\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Step \", step.step, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this), \" \", index === 0 ? 'Start' : `Debris ${step.debris_id}`, step.distance_from_previous && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            float: 'right',\n            color: 'rgba(255, 255, 255, 0.6)'\n          },\n          children: [step.distance_from_previous.toFixed(1), \"m\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 376,\n    columnNumber: 5\n  }, this);\n}\n_s(PathVisualization, \"jD1Az5yhCggESAZQrW9S2810v5w=\");\n_c15 = PathVisualization;\nexport default PathVisualization;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"VisualizationContainer\");\n$RefreshReg$(_c2, \"VisualizationHeader\");\n$RefreshReg$(_c3, \"VisualizationTitle\");\n$RefreshReg$(_c4, \"ViewControls\");\n$RefreshReg$(_c5, \"ViewButton\");\n$RefreshReg$(_c6, \"CanvasContainer\");\n$RefreshReg$(_c7, \"Canvas\");\n$RefreshReg$(_c8, \"PathInfo\");\n$RefreshReg$(_c9, \"InfoCard\");\n$RefreshReg$(_c0, \"InfoLabel\");\n$RefreshReg$(_c1, \"InfoValue\");\n$RefreshReg$(_c10, \"Legend\");\n$RefreshReg$(_c11, \"LegendItem\");\n$RefreshReg$(_c12, \"LegendColor\");\n$RefreshReg$(_c13, \"PathSteps\");\n$RefreshReg$(_c14, \"StepItem\");\n$RefreshReg$(_c15, \"PathVisualization\");","map":{"version":3,"names":["React","useRef","useEffect","useState","styled","jsxDEV","_jsxDEV","VisualizationContainer","div","_c","VisualizationHeader","_c2","VisualizationTitle","h3","_c3","ViewControls","_c4","ViewButton","button","props","active","_c5","CanvasContainer","_c6","Canvas","canvas","_c7","PathInfo","_c8","InfoCard","_c9","InfoLabel","_c0","InfoValue","_c1","Legend","_c10","LegendItem","_c11","LegendColor","color","_c12","PathSteps","_c13","StepItem","_c14","PathVisualization","pathData","analysisResult","_s","_pathData$path","canvasRef","viewMode","setViewMode","camera","setCamera","x","y","z","rotation","setRotation","showOnImage","setShowOnImage","visualization","drawPath","current","ctx","getContext","rect","getBoundingClientRect","dpr","window","devicePixelRatio","width","height","scale","style","image_url","img","Image","onload","drawImage","drawPathOverlay","src","fillStyle","fillRect","points","connections","metadata","length","bounds","calculateBounds","Math","min","max","centerX","centerY","projectedPoints","map","point","projectedX","projectedY","cosX","cos","sinX","sin","cosY","sinY","rotatedX","rotatedY","rotatedZ","perspective","depth","strokeStyle","lineWidth","setLineDash","connection","startIdx","endIdx","start","end","beginPath","moveTo","lineTo","stroke","forEach","index","_pathData$visualizati","isStart","isEnd","radius","feasible","size","arc","PI","fill","font","textAlign","label","debris_id","fillText","drawAxes","minX","maxX","minY","maxY","xCoords","p","yCoords","handleCanvasMouseMove","e","clientX","left","clientY","top","children","fileName","_jsxFileName","lineNumber","columnNumber","padding","metrics","onClick","ref","onMouseMove","background","margin","path_length","total_distance","toFixed","total_time","total_fuel","marginBottom","fontSize","path","step","distance_from_previous","float","_c15","$RefreshReg$"],"sources":["/Users/parthzanwar/Desktop/Space Apps/public/src/components/PathVisualization.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nconst VisualizationContainer = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 15px;\n  padding: 25px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nconst VisualizationHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n\nconst VisualizationTitle = styled.h3`\n  font-size: 18px;\n  font-weight: 600;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst ViewControls = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nconst ViewButton = styled.button`\n  background: ${props => props.active ? 'rgba(0, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)'};\n  border: 1px solid ${props => props.active ? '#00ffff' : 'rgba(255, 255, 255, 0.3)'};\n  padding: 6px 12px;\n  border-radius: 15px;\n  color: #ffffff;\n  font-size: 11px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background: rgba(0, 255, 255, 0.2);\n    border-color: #00ffff;\n  }\n`;\n\nconst CanvasContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 400px;\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 10px;\n  overflow: hidden;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nconst Canvas = styled.canvas`\n  width: 100%;\n  height: 100%;\n  cursor: grab;\n  \n  &:active {\n    cursor: grabbing;\n  }\n`;\n\nconst PathInfo = styled.div`\n  margin-top: 20px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 15px;\n`;\n\nconst InfoCard = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  padding: 12px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nconst InfoLabel = styled.div`\n  font-size: 11px;\n  color: rgba(255, 255, 255, 0.7);\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  margin-bottom: 5px;\n`;\n\nconst InfoValue = styled.div`\n  font-size: 14px;\n  font-weight: 600;\n  color: #ffffff;\n`;\n\nconst Legend = styled.div`\n  margin-top: 15px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.8);\n`;\n\nconst LegendColor = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: ${props => props.color};\n`;\n\nconst PathSteps = styled.div`\n  margin-top: 20px;\n  max-height: 200px;\n  overflow-y: auto;\n`;\n\nconst StepItem = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  padding: 10px;\n  margin-bottom: 8px;\n  border-left: 3px solid ${props => props.color};\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.8);\n`;\n\nfunction PathVisualization({ pathData, analysisResult }) {\n  const canvasRef = useRef(null);\n  const [viewMode, setViewMode] = useState('3d');\n  const [camera, setCamera] = useState({ x: 0, y: 0, z: 1000 });\n  const [rotation, setRotation] = useState({ x: 0, y: 0 });\n  const [showOnImage, setShowOnImage] = useState(false);\n\n  useEffect(() => {\n    if (pathData && pathData.visualization) {\n      drawPath();\n    }\n  }, [pathData, viewMode, camera, rotation, showOnImage]);\n\n  const drawPath = () => {\n    const canvas = canvasRef.current;\n    if (!canvas || !pathData.visualization) return;\n\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    const dpr = window.devicePixelRatio || 1;\n    canvas.width = rect.width * dpr;\n    canvas.height = rect.height * dpr;\n    ctx.scale(dpr, dpr);\n    canvas.style.width = rect.width + 'px';\n    canvas.style.height = rect.height + 'px';\n\n    // Clear canvas or draw background image\n    if (showOnImage && analysisResult && analysisResult.image_url) {\n      // Draw the original image as background\n      const img = new Image();\n      img.onload = () => {\n        ctx.drawImage(img, 0, 0, rect.width, rect.height);\n        drawPathOverlay(ctx, rect);\n      };\n      img.src = analysisResult.image_url;\n      return;\n    } else {\n      // Clear canvas with background\n      ctx.fillStyle = viewMode === '3d' ? 'rgba(0, 0, 20, 0.3)' : 'rgba(0, 0, 0, 0.1)';\n      ctx.fillRect(0, 0, rect.width, rect.height);\n    }\n\n    drawPathOverlay(ctx, rect);\n  };\n\n  const drawPathOverlay = (ctx, rect) => {\n\n    const points = pathData.visualization.points;\n    const connections = pathData.visualization.connections;\n    const metadata = pathData.visualization.metadata || [];\n\n    if (!points || points.length === 0) return;\n\n    // Calculate bounds\n    const bounds = calculateBounds(points);\n    const scale = Math.min(rect.width, rect.height) / Math.max(bounds.width, bounds.height) * 0.8;\n    const centerX = rect.width / 2;\n    const centerY = rect.height / 2;\n\n    // Project 3D points to 2D with view mode consideration\n    const projectedPoints = points.map(point => {\n      const [x, y, z] = point;\n      \n      if (viewMode === '2d') {\n        // Simple 2D projection (ignore Z)\n        const projectedX = centerX + (x - bounds.centerX) * scale;\n        const projectedY = centerY + (y - bounds.centerY) * scale;\n        return { x: projectedX, y: projectedY, z: 0 };\n      } else {\n        // 3D perspective projection with rotation (improved)\n        const cosX = Math.cos(rotation.x * 0.5);\n        const sinX = Math.sin(rotation.x * 0.5);\n        const cosY = Math.cos(rotation.y * 0.5);\n        const sinY = Math.sin(rotation.y * 0.5);\n        \n        // Apply rotation with better scaling\n        const rotatedX = x * cosY - z * sinY;\n        const rotatedY = y * cosX + (x * sinY + z * cosY) * sinX;\n        const rotatedZ = (x * sinY + z * cosY) * cosX - y * sinX;\n        \n        // Perspective projection with better depth handling\n        const perspective = 1000;\n        const depth = Math.max(1, rotatedZ + perspective);\n        const projectedX = centerX + (rotatedX / depth) * scale * 200;\n        const projectedY = centerY + (rotatedY / depth) * scale * 200;\n        \n        return { x: projectedX, y: projectedY, z: rotatedZ };\n      }\n    });\n\n    // Draw connections\n    ctx.strokeStyle = 'rgba(0, 255, 255, 0.6)';\n    ctx.lineWidth = 2;\n    ctx.setLineDash([5, 5]);\n    \n    for (const connection of connections) {\n      const [startIdx, endIdx] = connection;\n      if (startIdx < projectedPoints.length && endIdx < projectedPoints.length) {\n        const start = projectedPoints[startIdx];\n        const end = projectedPoints[endIdx];\n        \n        ctx.beginPath();\n        ctx.moveTo(start.x, start.y);\n        ctx.lineTo(end.x, end.y);\n        ctx.stroke();\n      }\n    }\n\n    // Reset line dash\n    ctx.setLineDash([]);\n\n    // Draw points\n    projectedPoints.forEach((point, index) => {\n      const isStart = index === 0;\n      const isEnd = index === projectedPoints.length - 1;\n      const metadata = pathData.visualization.metadata?.[index - 1]; // -1 because start point has no metadata\n\n      let color, radius;\n      \n      if (isStart) {\n        color = '#00ff00';\n        radius = 8;\n      } else if (isEnd) {\n        color = '#ff0000';\n        radius = 8;\n      } else if (metadata) {\n        color = metadata.feasible ? '#00ffff' : '#ffaa00';\n        radius = Math.max(4, Math.min(12, metadata.size * 2));\n      } else {\n        color = '#ffffff';\n        radius = 6;\n      }\n\n      // Draw point\n      ctx.fillStyle = color;\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, radius, 0, 2 * Math.PI);\n      ctx.fill();\n\n      // Draw border\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.8)';\n      ctx.lineWidth = 1;\n      ctx.stroke();\n\n      // Draw labels\n      if (metadata || isStart || isEnd) {\n        ctx.fillStyle = '#ffffff';\n        ctx.font = '10px Inter, sans-serif';\n        ctx.textAlign = 'center';\n        \n        const label = isStart ? 'START' : \n                     isEnd ? 'END' : \n                     `D${metadata?.debris_id || index}`;\n        \n        ctx.fillText(label, point.x, point.y - radius - 10);\n      }\n    });\n\n    // Draw coordinate axes (only in 3D mode and not on image)\n    if (viewMode === '3d' && !showOnImage) {\n      drawAxes(ctx, centerX, centerY, scale);\n    }\n  };\n\n  const calculateBounds = (points) => {\n    if (points.length === 0) return { minX: 0, maxX: 0, minY: 0, maxY: 0, centerX: 0, centerY: 0, width: 0, height: 0 };\n\n    const xCoords = points.map(p => p[0]);\n    const yCoords = points.map(p => p[1]);\n    \n    const minX = Math.min(...xCoords);\n    const maxX = Math.max(...xCoords);\n    const minY = Math.min(...yCoords);\n    const maxY = Math.max(...yCoords);\n    \n    return {\n      minX, maxX, minY, maxY,\n      centerX: (minX + maxX) / 2,\n      centerY: (minY + maxY) / 2,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  };\n\n  const drawAxes = (ctx, centerX, centerY, scale) => {\n    ctx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n    ctx.lineWidth = 1;\n    \n    // X axis\n    ctx.beginPath();\n    ctx.moveTo(centerX - 50, centerY);\n    ctx.lineTo(centerX + 50, centerY);\n    ctx.stroke();\n    \n    // Y axis\n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY - 50);\n    ctx.lineTo(centerX, centerY + 50);\n    ctx.stroke();\n    \n    // Labels\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.6)';\n    ctx.font = '8px Inter, sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('X', centerX + 55, centerY + 3);\n    ctx.fillText('Y', centerX + 3, centerY - 55);\n  };\n\n  const handleCanvasMouseMove = (e) => {\n    // Mouse interaction for rotation (only in 3D mode)\n    if (viewMode !== '3d') return;\n    \n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const rect = canvas.getBoundingClientRect();\n    const x = (e.clientX - rect.left) / rect.width;\n    const y = (e.clientY - rect.top) / rect.height;\n    \n    setRotation({\n      x: (y - 0.5) * Math.PI,\n      y: (x - 0.5) * Math.PI\n    });\n  };\n\n  if (!pathData || !pathData.visualization) {\n    return (\n      <VisualizationContainer>\n        <VisualizationHeader>\n          <VisualizationTitle>🗺️ Path Visualization</VisualizationTitle>\n        </VisualizationHeader>\n        <div style={{ textAlign: 'center', padding: '40px', color: 'rgba(255, 255, 255, 0.5)' }}>\n          No path data available\n        </div>\n      </VisualizationContainer>\n    );\n  }\n\n  const metrics = pathData.metrics || {};\n\n  return (\n    <VisualizationContainer>\n      <VisualizationHeader>\n        <VisualizationTitle>🗺️ Path Visualization</VisualizationTitle>\n        <ViewControls>\n          <ViewButton \n            active={viewMode === '3d'} \n            onClick={() => setViewMode('3d')}\n          >\n            3D View\n          </ViewButton>\n          <ViewButton \n            active={viewMode === '2d'} \n            onClick={() => setViewMode('2d')}\n          >\n            2D View\n          </ViewButton>\n          <ViewButton \n            active={showOnImage} \n            onClick={() => setShowOnImage(!showOnImage)}\n          >\n            📸 On Image\n          </ViewButton>\n        </ViewControls>\n      </VisualizationHeader>\n\n      <CanvasContainer>\n        <Canvas\n          ref={canvasRef}\n          onMouseMove={handleCanvasMouseMove}\n        />\n      </CanvasContainer>\n\n      <Legend>\n        <LegendItem>\n          <LegendColor color=\"#00ff00\" />\n          <span>Start Position</span>\n        </LegendItem>\n        <LegendItem>\n          <LegendColor color=\"#00ffff\" />\n          <span>Feasible Debris</span>\n        </LegendItem>\n        <LegendItem>\n          <LegendColor color=\"#ffaa00\" />\n          <span>Non-feasible</span>\n        </LegendItem>\n        <LegendItem>\n          <LegendColor color=\"#ff0000\" />\n          <span>End Position</span>\n        </LegendItem>\n        <LegendItem>\n          <div style={{ width: '12px', height: '2px', background: 'rgba(0, 255, 255, 0.6)', margin: '5px 0' }}></div>\n          <span>Path Connection</span>\n        </LegendItem>\n      </Legend>\n\n      <PathInfo>\n        <InfoCard>\n          <InfoLabel>Path Length</InfoLabel>\n          <InfoValue>{pathData.path_length || 0} steps</InfoValue>\n        </InfoCard>\n        \n        <InfoCard>\n          <InfoLabel>Total Distance</InfoLabel>\n          <InfoValue>{metrics.total_distance ? `${(metrics.total_distance / 1000).toFixed(1)} km` : '0 km'}</InfoValue>\n        </InfoCard>\n        \n        <InfoCard>\n          <InfoLabel>Mission Time</InfoLabel>\n          <InfoValue>{metrics.total_time ? `${(metrics.total_time / 3600).toFixed(1)} hours` : '0 hours'}</InfoValue>\n        </InfoCard>\n        \n        <InfoCard>\n          <InfoLabel>Fuel Required</InfoLabel>\n          <InfoValue>{metrics.total_fuel ? `${metrics.total_fuel.toFixed(1)} kg` : '0 kg'}</InfoValue>\n        </InfoCard>\n      </PathInfo>\n\n      <PathSteps>\n        <h4 style={{ color: '#ffffff', marginBottom: '10px', fontSize: '14px' }}>\n          Path Steps:\n        </h4>\n        \n        {pathData.path?.map((step, index) => (\n          <StepItem \n            key={index}\n            color={index === 0 ? '#00ff00' : index === pathData.path.length - 1 ? '#ff0000' : '#00ffff'}\n          >\n            <strong>Step {step.step}:</strong> {index === 0 ? 'Start' : `Debris ${step.debris_id}`} \n            {step.distance_from_previous && (\n              <span style={{ float: 'right', color: 'rgba(255, 255, 255, 0.6)' }}>\n                {step.distance_from_previous.toFixed(1)}m\n              </span>\n            )}\n          </StepItem>\n        ))}\n      </PathSteps>\n    </VisualizationContainer>\n  );\n}\n\nexport default PathVisualization;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
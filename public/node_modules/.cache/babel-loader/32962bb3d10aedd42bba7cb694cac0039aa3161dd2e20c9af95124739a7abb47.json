{"ast":null,"code":"var _jsxFileName = \"/Users/parthzanwar/Desktop/Space Apps/src/components/ImageDownloader.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { downloadImages, downloadFromUrl, createSampleDataset, getDownloadedImages } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DownloaderContainer = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 15px;\n  padding: 25px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n_c = DownloaderContainer;\nconst DownloaderHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n_c2 = DownloaderHeader;\nconst DownloaderTitle = styled.h3`\n  font-size: 18px;\n  font-weight: 600;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n_c3 = DownloaderTitle;\nconst DownloadSection = styled.div`\n  margin-bottom: 25px;\n  padding: 20px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 10px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n_c4 = DownloadSection;\nconst SectionTitle = styled.h4`\n  font-size: 14px;\n  color: #ffffff;\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n_c5 = SectionTitle;\nconst InputGroup = styled.div`\n  margin-bottom: 15px;\n`;\n_c6 = InputGroup;\nconst Label = styled.label`\n  display: block;\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.7);\n  margin-bottom: 5px;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n_c7 = Label;\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px 15px;\n  background: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 8px;\n  color: #ffffff;\n  font-size: 14px;\n  \n  &:focus {\n    outline: none;\n    border-color: #00ffff;\n    background: rgba(255, 255, 255, 0.15);\n  }\n  \n  &::placeholder {\n    color: rgba(255, 255, 255, 0.5);\n  }\n`;\n_c8 = Input;\nconst Select = styled.select`\n  width: 100%;\n  padding: 10px 15px;\n  background: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 8px;\n  color: #ffffff;\n  font-size: 14px;\n  \n  &:focus {\n    outline: none;\n    border-color: #00ffff;\n  }\n  \n  option {\n    background: #1a1a2e;\n    color: #ffffff;\n  }\n`;\n_c9 = Select;\nconst Button = styled.button`\n  background: ${props => props.primary ? 'linear-gradient(135deg, #00ffff, #0080ff)' : 'rgba(255, 255, 255, 0.1)'};\n  border: ${props => props.primary ? 'none' : '1px solid rgba(255, 255, 255, 0.3)'};\n  padding: 10px 20px;\n  border-radius: 20px;\n  color: ${props => props.primary ? '#000' : '#ffffff'};\n  font-size: 12px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  width: 100%;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(0, 255, 255, 0.3);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n_c0 = Button;\nconst StatusMessage = styled.div`\n  padding: 10px 15px;\n  border-radius: 8px;\n  margin-top: 15px;\n  font-size: 12px;\n  background: ${props => props.type === 'success' ? 'rgba(0, 255, 0, 0.2)' : props.type === 'error' ? 'rgba(255, 0, 0, 0.2)' : 'rgba(255, 170, 0, 0.2)'};\n  border: 1px solid ${props => props.type === 'success' ? '#00ff00' : props.type === 'error' ? '#ff0000' : '#ffaa00'};\n  color: ${props => props.type === 'success' ? '#00ff00' : props.type === 'error' ? '#ff0000' : '#ffaa00'};\n`;\n_c1 = StatusMessage;\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 4px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 2px;\n  overflow: hidden;\n  margin-top: 10px;\n`;\n_c10 = ProgressBar;\nconst ProgressFill = styled.div`\n  height: 100%;\n  width: ${props => props.progress}%;\n  background: linear-gradient(90deg, #00ffff, #0080ff);\n  border-radius: 2px;\n  transition: width 0.3s ease;\n`;\n_c11 = ProgressFill;\nconst DownloadedImages = styled.div`\n  margin-top: 20px;\n`;\n_c12 = DownloadedImages;\nconst ImageGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  gap: 15px;\n  margin-top: 15px;\n`;\n_c13 = ImageGrid;\nconst ImageCard = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  padding: 10px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    transform: translateY(-2px);\n  }\n`;\n_c14 = ImageCard;\nconst ImagePreview = styled.img`\n  width: 100%;\n  height: 100px;\n  object-fit: cover;\n  border-radius: 5px;\n  margin-bottom: 8px;\n`;\n_c15 = ImagePreview;\nconst ImageInfo = styled.div`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.7);\n  text-align: center;\n`;\n_c16 = ImageInfo;\nfunction ImageDownloader({\n  onImageSelect\n}) {\n  _s();\n  const [downloadCount, setDownloadCount] = useState(10);\n  const [downloadSource, setDownloadSource] = useState('mixed');\n  const [customUrl, setCustomUrl] = useState('');\n  const [customFilename, setCustomFilename] = useState('');\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [downloadProgress, setDownloadProgress] = useState(0);\n  const [statusMessage, setStatusMessage] = useState('');\n  const [downloadedImages, setDownloadedImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    loadDownloadedImages();\n  }, []);\n  const loadDownloadedImages = async () => {\n    try {\n      setIsLoading(true);\n      const response = await getDownloadedImages();\n      setDownloadedImages(response.images || []);\n    } catch (error) {\n      console.error('Error loading downloaded images:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDownloadImages = async () => {\n    try {\n      setIsDownloading(true);\n      setDownloadProgress(0);\n      setStatusMessage('Downloading images...');\n      const response = await downloadImages({\n        count: downloadCount,\n        source: downloadSource\n      });\n      if (response.success) {\n        setStatusMessage(`Successfully downloaded ${response.downloaded_count} images!`);\n        setDownloadProgress(100);\n        await loadDownloadedImages();\n      } else {\n        setStatusMessage('Download failed. Please try again.');\n      }\n    } catch (error) {\n      console.error('Download error:', error);\n      setStatusMessage(`Error: ${error.message}`);\n    } finally {\n      setIsDownloading(false);\n      setTimeout(() => setStatusMessage(''), 5000);\n    }\n  };\n  const handleDownloadFromUrl = async () => {\n    if (!customUrl.trim()) {\n      setStatusMessage('Please enter a valid URL');\n      return;\n    }\n    try {\n      setIsDownloading(true);\n      setStatusMessage('Downloading image from URL...');\n      const response = await downloadFromUrl({\n        url: customUrl,\n        filename: customFilename || undefined\n      });\n      if (response.success) {\n        setStatusMessage(`Successfully downloaded: ${response.filename}`);\n        setCustomUrl('');\n        setCustomFilename('');\n        await loadDownloadedImages();\n      } else {\n        setStatusMessage('Failed to download image from URL');\n      }\n    } catch (error) {\n      console.error('URL download error:', error);\n      setStatusMessage(`Error: ${error.message}`);\n    } finally {\n      setIsDownloading(false);\n      setTimeout(() => setStatusMessage(''), 5000);\n    }\n  };\n  const handleCreateSampleDataset = async () => {\n    try {\n      setIsDownloading(true);\n      setStatusMessage('Creating sample dataset...');\n      const response = await createSampleDataset({\n        total_images: downloadCount\n      });\n      if (response.success) {\n        setStatusMessage(`Created sample dataset with ${response.dataset_count} images!`);\n        await loadDownloadedImages();\n      } else {\n        setStatusMessage('Failed to create sample dataset');\n      }\n    } catch (error) {\n      console.error('Sample dataset error:', error);\n      setStatusMessage(`Error: ${error.message}`);\n    } finally {\n      setIsDownloading(false);\n      setTimeout(() => setStatusMessage(''), 5000);\n    }\n  };\n  const handleImageClick = imagePath => {\n    if (onImageSelect) {\n      onImageSelect(imagePath);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DownloaderContainer, {\n    children: [/*#__PURE__*/_jsxDEV(DownloaderHeader, {\n      children: /*#__PURE__*/_jsxDEV(DownloaderTitle, {\n        children: \"\\uD83D\\uDCE5 Download Space Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DownloadSection, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"\\uD83C\\uDF0C Download from Online Sources\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Number of Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          min: \"1\",\n          max: \"50\",\n          value: downloadCount,\n          onChange: e => setDownloadCount(parseInt(e.target.value) || 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Image Source\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: downloadSource,\n          onChange: e => setDownloadSource(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mixed\",\n            children: \"Mixed Sources (Recommended)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"nasa_apod\",\n            children: \"NASA Astronomy Picture of the Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"nasa_images\",\n            children: \"NASA Image Library\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"space_debris\",\n            children: \"Space Debris Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        onClick: handleDownloadImages,\n        disabled: isDownloading,\n        children: isDownloading ? 'Downloading...' : 'Download Images'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), isDownloading && /*#__PURE__*/_jsxDEV(ProgressBar, {\n        children: /*#__PURE__*/_jsxDEV(ProgressFill, {\n          progress: downloadProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DownloadSection, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"\\uD83D\\uDD17 Download from Custom URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Image URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"url\",\n          placeholder: \"https://example.com/image.jpg\",\n          value: customUrl,\n          onChange: e => setCustomUrl(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Custom Filename (optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          placeholder: \"my_image.jpg\",\n          value: customFilename,\n          onChange: e => setCustomFilename(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleDownloadFromUrl,\n        disabled: isDownloading || !customUrl.trim(),\n        children: isDownloading ? 'Downloading...' : 'Download from URL'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DownloadSection, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"\\uD83D\\uDCCA Create Sample Dataset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCreateSampleDataset,\n        disabled: isDownloading,\n        children: isDownloading ? 'Creating...' : 'Create Sample Dataset'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this), statusMessage && /*#__PURE__*/_jsxDEV(StatusMessage, {\n      type: statusMessage.includes('Success') ? 'success' : statusMessage.includes('Error') ? 'error' : 'info',\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DownloadedImages, {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: [\"\\uD83D\\uDCC1 Downloaded Images (\", downloadedImages.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '20px',\n          color: 'rgba(255, 255, 255, 0.5)'\n        },\n        children: \"Loading images...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }, this) : downloadedImages.length > 0 ? /*#__PURE__*/_jsxDEV(ImageGrid, {\n        children: downloadedImages.map((imagePath, index) => /*#__PURE__*/_jsxDEV(ImageCard, {\n          onClick: () => handleImageClick(imagePath),\n          children: [/*#__PURE__*/_jsxDEV(ImagePreview, {\n            src: `http://localhost:5000/${imagePath}`,\n            alt: `Downloaded image ${index + 1}`,\n            onError: e => {\n              e.target.style.display = 'none';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ImageInfo, {\n            children: imagePath.split('/').pop()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '20px',\n          color: 'rgba(255, 255, 255, 0.5)'\n        },\n        children: \"No images downloaded yet. Use the options above to download some images!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageDownloader, \"xNaQu6zepn7jpY3HvvsXor93BRg=\");\n_c17 = ImageDownloader;\nexport default ImageDownloader;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17;\n$RefreshReg$(_c, \"DownloaderContainer\");\n$RefreshReg$(_c2, \"DownloaderHeader\");\n$RefreshReg$(_c3, \"DownloaderTitle\");\n$RefreshReg$(_c4, \"DownloadSection\");\n$RefreshReg$(_c5, \"SectionTitle\");\n$RefreshReg$(_c6, \"InputGroup\");\n$RefreshReg$(_c7, \"Label\");\n$RefreshReg$(_c8, \"Input\");\n$RefreshReg$(_c9, \"Select\");\n$RefreshReg$(_c0, \"Button\");\n$RefreshReg$(_c1, \"StatusMessage\");\n$RefreshReg$(_c10, \"ProgressBar\");\n$RefreshReg$(_c11, \"ProgressFill\");\n$RefreshReg$(_c12, \"DownloadedImages\");\n$RefreshReg$(_c13, \"ImageGrid\");\n$RefreshReg$(_c14, \"ImageCard\");\n$RefreshReg$(_c15, \"ImagePreview\");\n$RefreshReg$(_c16, \"ImageInfo\");\n$RefreshReg$(_c17, \"ImageDownloader\");","map":{"version":3,"names":["React","useState","useEffect","styled","downloadImages","downloadFromUrl","createSampleDataset","getDownloadedImages","jsxDEV","_jsxDEV","DownloaderContainer","div","_c","DownloaderHeader","_c2","DownloaderTitle","h3","_c3","DownloadSection","_c4","SectionTitle","h4","_c5","InputGroup","_c6","Label","label","_c7","Input","input","_c8","Select","select","_c9","Button","button","props","primary","_c0","StatusMessage","type","_c1","ProgressBar","_c10","ProgressFill","progress","_c11","DownloadedImages","_c12","ImageGrid","_c13","ImageCard","_c14","ImagePreview","img","_c15","ImageInfo","_c16","ImageDownloader","onImageSelect","_s","downloadCount","setDownloadCount","downloadSource","setDownloadSource","customUrl","setCustomUrl","customFilename","setCustomFilename","isDownloading","setIsDownloading","downloadProgress","setDownloadProgress","statusMessage","setStatusMessage","downloadedImages","setDownloadedImages","isLoading","setIsLoading","loadDownloadedImages","response","images","error","console","handleDownloadImages","count","source","success","downloaded_count","message","setTimeout","handleDownloadFromUrl","trim","url","filename","undefined","handleCreateSampleDataset","total_images","dataset_count","handleImageClick","imagePath","children","fileName","_jsxFileName","lineNumber","columnNumber","min","max","value","onChange","e","parseInt","target","onClick","disabled","placeholder","includes","length","style","textAlign","padding","color","map","index","src","alt","onError","display","split","pop","_c17","$RefreshReg$"],"sources":["/Users/parthzanwar/Desktop/Space Apps/src/components/ImageDownloader.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { downloadImages, downloadFromUrl, createSampleDataset, getDownloadedImages } from '../services/api';\n\nconst DownloaderContainer = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 15px;\n  padding: 25px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nconst DownloaderHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n\nconst DownloaderTitle = styled.h3`\n  font-size: 18px;\n  font-weight: 600;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst DownloadSection = styled.div`\n  margin-bottom: 25px;\n  padding: 20px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 10px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nconst SectionTitle = styled.h4`\n  font-size: 14px;\n  color: #ffffff;\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst InputGroup = styled.div`\n  margin-bottom: 15px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.7);\n  margin-bottom: 5px;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px 15px;\n  background: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 8px;\n  color: #ffffff;\n  font-size: 14px;\n  \n  &:focus {\n    outline: none;\n    border-color: #00ffff;\n    background: rgba(255, 255, 255, 0.15);\n  }\n  \n  &::placeholder {\n    color: rgba(255, 255, 255, 0.5);\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  padding: 10px 15px;\n  background: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 8px;\n  color: #ffffff;\n  font-size: 14px;\n  \n  &:focus {\n    outline: none;\n    border-color: #00ffff;\n  }\n  \n  option {\n    background: #1a1a2e;\n    color: #ffffff;\n  }\n`;\n\nconst Button = styled.button`\n  background: ${props => props.primary ? \n    'linear-gradient(135deg, #00ffff, #0080ff)' : \n    'rgba(255, 255, 255, 0.1)'};\n  border: ${props => props.primary ? 'none' : '1px solid rgba(255, 255, 255, 0.3)'};\n  padding: 10px 20px;\n  border-radius: 20px;\n  color: ${props => props.primary ? '#000' : '#ffffff'};\n  font-size: 12px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  width: 100%;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(0, 255, 255, 0.3);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst StatusMessage = styled.div`\n  padding: 10px 15px;\n  border-radius: 8px;\n  margin-top: 15px;\n  font-size: 12px;\n  background: ${props => props.type === 'success' ? 'rgba(0, 255, 0, 0.2)' : \n              props.type === 'error' ? 'rgba(255, 0, 0, 0.2)' : \n              'rgba(255, 170, 0, 0.2)'};\n  border: 1px solid ${props => props.type === 'success' ? '#00ff00' : \n              props.type === 'error' ? '#ff0000' : \n              '#ffaa00'};\n  color: ${props => props.type === 'success' ? '#00ff00' : \n              props.type === 'error' ? '#ff0000' : \n              '#ffaa00'};\n`;\n\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 4px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 2px;\n  overflow: hidden;\n  margin-top: 10px;\n`;\n\nconst ProgressFill = styled.div`\n  height: 100%;\n  width: ${props => props.progress}%;\n  background: linear-gradient(90deg, #00ffff, #0080ff);\n  border-radius: 2px;\n  transition: width 0.3s ease;\n`;\n\nconst DownloadedImages = styled.div`\n  margin-top: 20px;\n`;\n\nconst ImageGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  gap: 15px;\n  margin-top: 15px;\n`;\n\nconst ImageCard = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  padding: 10px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    transform: translateY(-2px);\n  }\n`;\n\nconst ImagePreview = styled.img`\n  width: 100%;\n  height: 100px;\n  object-fit: cover;\n  border-radius: 5px;\n  margin-bottom: 8px;\n`;\n\nconst ImageInfo = styled.div`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.7);\n  text-align: center;\n`;\n\nfunction ImageDownloader({ onImageSelect }) {\n  const [downloadCount, setDownloadCount] = useState(10);\n  const [downloadSource, setDownloadSource] = useState('mixed');\n  const [customUrl, setCustomUrl] = useState('');\n  const [customFilename, setCustomFilename] = useState('');\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [downloadProgress, setDownloadProgress] = useState(0);\n  const [statusMessage, setStatusMessage] = useState('');\n  const [downloadedImages, setDownloadedImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    loadDownloadedImages();\n  }, []);\n\n  const loadDownloadedImages = async () => {\n    try {\n      setIsLoading(true);\n      const response = await getDownloadedImages();\n      setDownloadedImages(response.images || []);\n    } catch (error) {\n      console.error('Error loading downloaded images:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDownloadImages = async () => {\n    try {\n      setIsDownloading(true);\n      setDownloadProgress(0);\n      setStatusMessage('Downloading images...');\n\n      const response = await downloadImages({\n        count: downloadCount,\n        source: downloadSource\n      });\n\n      if (response.success) {\n        setStatusMessage(`Successfully downloaded ${response.downloaded_count} images!`);\n        setDownloadProgress(100);\n        await loadDownloadedImages();\n      } else {\n        setStatusMessage('Download failed. Please try again.');\n      }\n    } catch (error) {\n      console.error('Download error:', error);\n      setStatusMessage(`Error: ${error.message}`);\n    } finally {\n      setIsDownloading(false);\n      setTimeout(() => setStatusMessage(''), 5000);\n    }\n  };\n\n  const handleDownloadFromUrl = async () => {\n    if (!customUrl.trim()) {\n      setStatusMessage('Please enter a valid URL');\n      return;\n    }\n\n    try {\n      setIsDownloading(true);\n      setStatusMessage('Downloading image from URL...');\n\n      const response = await downloadFromUrl({\n        url: customUrl,\n        filename: customFilename || undefined\n      });\n\n      if (response.success) {\n        setStatusMessage(`Successfully downloaded: ${response.filename}`);\n        setCustomUrl('');\n        setCustomFilename('');\n        await loadDownloadedImages();\n      } else {\n        setStatusMessage('Failed to download image from URL');\n      }\n    } catch (error) {\n      console.error('URL download error:', error);\n      setStatusMessage(`Error: ${error.message}`);\n    } finally {\n      setIsDownloading(false);\n      setTimeout(() => setStatusMessage(''), 5000);\n    }\n  };\n\n  const handleCreateSampleDataset = async () => {\n    try {\n      setIsDownloading(true);\n      setStatusMessage('Creating sample dataset...');\n\n      const response = await createSampleDataset({\n        total_images: downloadCount\n      });\n\n      if (response.success) {\n        setStatusMessage(`Created sample dataset with ${response.dataset_count} images!`);\n        await loadDownloadedImages();\n      } else {\n        setStatusMessage('Failed to create sample dataset');\n      }\n    } catch (error) {\n      console.error('Sample dataset error:', error);\n      setStatusMessage(`Error: ${error.message}`);\n    } finally {\n      setIsDownloading(false);\n      setTimeout(() => setStatusMessage(''), 5000);\n    }\n  };\n\n  const handleImageClick = (imagePath) => {\n    if (onImageSelect) {\n      onImageSelect(imagePath);\n    }\n  };\n\n  return (\n    <DownloaderContainer>\n      <DownloaderHeader>\n        <DownloaderTitle>📥 Download Space Images</DownloaderTitle>\n      </DownloaderHeader>\n\n      <DownloadSection>\n        <SectionTitle>🌌 Download from Online Sources</SectionTitle>\n        \n        <InputGroup>\n          <Label>Number of Images</Label>\n          <Input\n            type=\"number\"\n            min=\"1\"\n            max=\"50\"\n            value={downloadCount}\n            onChange={(e) => setDownloadCount(parseInt(e.target.value) || 1)}\n          />\n        </InputGroup>\n\n        <InputGroup>\n          <Label>Image Source</Label>\n          <Select\n            value={downloadSource}\n            onChange={(e) => setDownloadSource(e.target.value)}\n          >\n            <option value=\"mixed\">Mixed Sources (Recommended)</option>\n            <option value=\"nasa_apod\">NASA Astronomy Picture of the Day</option>\n            <option value=\"nasa_images\">NASA Image Library</option>\n            <option value=\"space_debris\">Space Debris Images</option>\n          </Select>\n        </InputGroup>\n\n        <Button \n          primary \n          onClick={handleDownloadImages}\n          disabled={isDownloading}\n        >\n          {isDownloading ? 'Downloading...' : 'Download Images'}\n        </Button>\n\n        {isDownloading && (\n          <ProgressBar>\n            <ProgressFill progress={downloadProgress} />\n          </ProgressBar>\n        )}\n      </DownloadSection>\n\n      <DownloadSection>\n        <SectionTitle>🔗 Download from Custom URL</SectionTitle>\n        \n        <InputGroup>\n          <Label>Image URL</Label>\n          <Input\n            type=\"url\"\n            placeholder=\"https://example.com/image.jpg\"\n            value={customUrl}\n            onChange={(e) => setCustomUrl(e.target.value)}\n          />\n        </InputGroup>\n\n        <InputGroup>\n          <Label>Custom Filename (optional)</Label>\n          <Input\n            type=\"text\"\n            placeholder=\"my_image.jpg\"\n            value={customFilename}\n            onChange={(e) => setCustomFilename(e.target.value)}\n          />\n        </InputGroup>\n\n        <Button \n          onClick={handleDownloadFromUrl}\n          disabled={isDownloading || !customUrl.trim()}\n        >\n          {isDownloading ? 'Downloading...' : 'Download from URL'}\n        </Button>\n      </DownloadSection>\n\n      <DownloadSection>\n        <SectionTitle>📊 Create Sample Dataset</SectionTitle>\n        \n        <Button \n          onClick={handleCreateSampleDataset}\n          disabled={isDownloading}\n        >\n          {isDownloading ? 'Creating...' : 'Create Sample Dataset'}\n        </Button>\n      </DownloadSection>\n\n      {statusMessage && (\n        <StatusMessage type={statusMessage.includes('Success') ? 'success' : \n                          statusMessage.includes('Error') ? 'error' : 'info'}>\n          {statusMessage}\n        </StatusMessage>\n      )}\n\n      <DownloadedImages>\n        <SectionTitle>📁 Downloaded Images ({downloadedImages.length})</SectionTitle>\n        \n        {isLoading ? (\n          <div style={{ textAlign: 'center', padding: '20px', color: 'rgba(255, 255, 255, 0.5)' }}>\n            Loading images...\n          </div>\n        ) : downloadedImages.length > 0 ? (\n          <ImageGrid>\n            {downloadedImages.map((imagePath, index) => (\n              <ImageCard key={index} onClick={() => handleImageClick(imagePath)}>\n                <ImagePreview \n                  src={`http://localhost:5000/${imagePath}`} \n                  alt={`Downloaded image ${index + 1}`}\n                  onError={(e) => {\n                    e.target.style.display = 'none';\n                  }}\n                />\n                <ImageInfo>\n                  {imagePath.split('/').pop()}\n                </ImageInfo>\n              </ImageCard>\n            ))}\n          </ImageGrid>\n        ) : (\n          <div style={{ textAlign: 'center', padding: '20px', color: 'rgba(255, 255, 255, 0.5)' }}>\n            No images downloaded yet. Use the options above to download some images!\n          </div>\n        )}\n      </DownloadedImages>\n    </DownloaderContainer>\n  );\n}\n\nexport default ImageDownloader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
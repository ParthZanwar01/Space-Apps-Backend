{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/parthzanwar/Desktop/Space Apps/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14;import React,{useRef,useEffect,useState}from'react';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const VisualizationContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background: rgba(255, 255, 255, 0.05);\\n  border-radius: 15px;\\n  padding: 25px;\\n  backdrop-filter: blur(10px);\\n  border: 1px solid rgba(255, 255, 255, 0.1);\\n\"])));const VisualizationHeader=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  margin-bottom: 20px;\\n\"])));const VisualizationTitle=styled.h3(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  font-size: 18px;\\n  font-weight: 600;\\n  color: #ffffff;\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n\"])));const ViewControls=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: flex;\\n  gap: 10px;\\n\"])));const ViewButton=styled.button(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  border: 1px solid \",\";\\n  padding: 6px 12px;\\n  border-radius: 15px;\\n  color: #ffffff;\\n  font-size: 11px;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n  \\n  &:hover {\\n    background: rgba(0, 255, 255, 0.2);\\n    border-color: #00ffff;\\n  }\\n\"])),props=>props.active?'rgba(0, 255, 255, 0.2)':'rgba(255, 255, 255, 0.1)',props=>props.active?'#00ffff':'rgba(255, 255, 255, 0.3)');const CanvasContainer=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  position: relative;\\n  width: 100%;\\n  height: 400px;\\n  background: rgba(0, 0, 0, 0.3);\\n  border-radius: 10px;\\n  overflow: hidden;\\n  border: 1px solid rgba(255, 255, 255, 0.1);\\n\"])));const Canvas=styled.canvas(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  cursor: grab;\\n  \\n  &:active {\\n    cursor: grabbing;\\n  }\\n\"])));const PathInfo=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  margin-top: 20px;\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\\n  gap: 15px;\\n\"])));const InfoCard=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  background: rgba(255, 255, 255, 0.05);\\n  border-radius: 8px;\\n  padding: 12px;\\n  border: 1px solid rgba(255, 255, 255, 0.1);\\n\"])));const InfoLabel=styled.div(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  font-size: 11px;\\n  color: rgba(255, 255, 255, 0.7);\\n  text-transform: uppercase;\\n  letter-spacing: 0.5px;\\n  margin-bottom: 5px;\\n\"])));const InfoValue=styled.div(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  font-size: 14px;\\n  font-weight: 600;\\n  color: #ffffff;\\n\"])));const Legend=styled.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  margin-top: 15px;\\n  display: flex;\\n  flex-wrap: wrap;\\n  gap: 15px;\\n\"])));const LegendItem=styled.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  font-size: 12px;\\n  color: rgba(255, 255, 255, 0.8);\\n\"])));const LegendColor=styled.div(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  width: 12px;\\n  height: 12px;\\n  border-radius: 50%;\\n  background: \",\";\\n\"])),props=>props.color);const PathSteps=styled.div(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  margin-top: 20px;\\n  max-height: 200px;\\n  overflow-y: auto;\\n\"])));const StepItem=styled.div(_templateObject14||(_templateObject14=_taggedTemplateLiteral([\"\\n  background: rgba(255, 255, 255, 0.05);\\n  border-radius: 8px;\\n  padding: 10px;\\n  margin-bottom: 8px;\\n  border-left: 3px solid \",\";\\n  font-size: 12px;\\n  color: rgba(255, 255, 255, 0.8);\\n\"])),props=>props.color);function PathVisualization(_ref){var _pathData$path;let{pathData,analysisResult}=_ref;const canvasRef=useRef(null);const[viewMode,setViewMode]=useState('3d');const[camera,setCamera]=useState({x:0,y:0,z:1000});const[rotation,setRotation]=useState({x:0,y:0});useEffect(()=>{if(pathData&&pathData.visualization){drawPath();}},[pathData,viewMode,camera,rotation]);const drawPath=()=>{const canvas=canvasRef.current;if(!canvas||!pathData.visualization)return;const ctx=canvas.getContext('2d');const rect=canvas.getBoundingClientRect();canvas.width=rect.width;canvas.height=rect.height;// Clear canvas\nctx.fillStyle='rgba(0, 0, 0, 0.1)';ctx.fillRect(0,0,canvas.width,canvas.height);const points=pathData.visualization.points;const connections=pathData.visualization.connections;const metadata=pathData.visualization.metadata||[];if(!points||points.length===0)return;// Calculate bounds\nconst bounds=calculateBounds(points);const scale=Math.min(canvas.width,canvas.height)/Math.max(bounds.width,bounds.height)*0.8;const centerX=canvas.width/2;const centerY=canvas.height/2;// Project 3D points to 2D\nconst projectedPoints=points.map(point=>{const[x,y,z]=point;// Simple 3D to 2D projection\nconst projectedX=centerX+(x-bounds.centerX)*scale;const projectedY=centerY+(y-bounds.centerY)*scale;return{x:projectedX,y:projectedY,z};});// Draw connections\nctx.strokeStyle='rgba(0, 255, 255, 0.6)';ctx.lineWidth=2;ctx.setLineDash([5,5]);for(const connection of connections){const[startIdx,endIdx]=connection;if(startIdx<projectedPoints.length&&endIdx<projectedPoints.length){const start=projectedPoints[startIdx];const end=projectedPoints[endIdx];ctx.beginPath();ctx.moveTo(start.x,start.y);ctx.lineTo(end.x,end.y);ctx.stroke();}}// Reset line dash\nctx.setLineDash([]);// Draw points\nprojectedPoints.forEach((point,index)=>{var _pathData$visualizati;const isStart=index===0;const isEnd=index===projectedPoints.length-1;const metadata=(_pathData$visualizati=pathData.visualization.metadata)===null||_pathData$visualizati===void 0?void 0:_pathData$visualizati[index-1];// -1 because start point has no metadata\nlet color,radius;if(isStart){color='#00ff00';radius=8;}else if(isEnd){color='#ff0000';radius=8;}else if(metadata){color=metadata.feasible?'#00ffff':'#ffaa00';radius=Math.max(4,Math.min(12,metadata.size*2));}else{color='#ffffff';radius=6;}// Draw point\nctx.fillStyle=color;ctx.beginPath();ctx.arc(point.x,point.y,radius,0,2*Math.PI);ctx.fill();// Draw border\nctx.strokeStyle='rgba(255, 255, 255, 0.8)';ctx.lineWidth=1;ctx.stroke();// Draw labels\nif(metadata||isStart||isEnd){ctx.fillStyle='#ffffff';ctx.font='10px Inter, sans-serif';ctx.textAlign='center';const label=isStart?'START':isEnd?'END':\"D\".concat((metadata===null||metadata===void 0?void 0:metadata.debris_id)||index);ctx.fillText(label,point.x,point.y-radius-10);}});// Draw coordinate axes\ndrawAxes(ctx,centerX,centerY,scale);};const calculateBounds=points=>{if(points.length===0)return{minX:0,maxX:0,minY:0,maxY:0,centerX:0,centerY:0,width:0,height:0};const xCoords=points.map(p=>p[0]);const yCoords=points.map(p=>p[1]);const minX=Math.min(...xCoords);const maxX=Math.max(...xCoords);const minY=Math.min(...yCoords);const maxY=Math.max(...yCoords);return{minX,maxX,minY,maxY,centerX:(minX+maxX)/2,centerY:(minY+maxY)/2,width:maxX-minX,height:maxY-minY};};const drawAxes=(ctx,centerX,centerY,scale)=>{ctx.strokeStyle='rgba(255, 255, 255, 0.3)';ctx.lineWidth=1;// X axis\nctx.beginPath();ctx.moveTo(centerX-50,centerY);ctx.lineTo(centerX+50,centerY);ctx.stroke();// Y axis\nctx.beginPath();ctx.moveTo(centerX,centerY-50);ctx.lineTo(centerX,centerY+50);ctx.stroke();// Labels\nctx.fillStyle='rgba(255, 255, 255, 0.6)';ctx.font='8px Inter, sans-serif';ctx.textAlign='center';ctx.fillText('X',centerX+55,centerY+3);ctx.fillText('Y',centerX+3,centerY-55);};const handleCanvasMouseMove=e=>{// Simple mouse interaction for rotation\nconst canvas=canvasRef.current;if(!canvas)return;const rect=canvas.getBoundingClientRect();const x=(e.clientX-rect.left)/rect.width;const y=(e.clientY-rect.top)/rect.height;setRotation({x:(y-0.5)*Math.PI,y:(x-0.5)*Math.PI});};if(!pathData||!pathData.visualization){return/*#__PURE__*/_jsxs(VisualizationContainer,{children:[/*#__PURE__*/_jsx(VisualizationHeader,{children:/*#__PURE__*/_jsx(VisualizationTitle,{children:\"\\uD83D\\uDDFA\\uFE0F Path Visualization\"})}),/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',padding:'40px',color:'rgba(255, 255, 255, 0.5)'},children:\"No path data available\"})]});}const metrics=pathData.metrics||{};return/*#__PURE__*/_jsxs(VisualizationContainer,{children:[/*#__PURE__*/_jsxs(VisualizationHeader,{children:[/*#__PURE__*/_jsx(VisualizationTitle,{children:\"\\uD83D\\uDDFA\\uFE0F Path Visualization\"}),/*#__PURE__*/_jsxs(ViewControls,{children:[/*#__PURE__*/_jsx(ViewButton,{active:viewMode==='3d',onClick:()=>setViewMode('3d'),children:\"3D View\"}),/*#__PURE__*/_jsx(ViewButton,{active:viewMode==='2d',onClick:()=>setViewMode('2d'),children:\"2D View\"})]})]}),/*#__PURE__*/_jsx(CanvasContainer,{children:/*#__PURE__*/_jsx(Canvas,{ref:canvasRef,onMouseMove:handleCanvasMouseMove})}),/*#__PURE__*/_jsxs(Legend,{children:[/*#__PURE__*/_jsxs(LegendItem,{children:[/*#__PURE__*/_jsx(LegendColor,{color:\"#00ff00\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Start Position\"})]}),/*#__PURE__*/_jsxs(LegendItem,{children:[/*#__PURE__*/_jsx(LegendColor,{color:\"#00ffff\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Feasible Debris\"})]}),/*#__PURE__*/_jsxs(LegendItem,{children:[/*#__PURE__*/_jsx(LegendColor,{color:\"#ffaa00\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Non-feasible\"})]}),/*#__PURE__*/_jsxs(LegendItem,{children:[/*#__PURE__*/_jsx(LegendColor,{color:\"#ff0000\"}),/*#__PURE__*/_jsx(\"span\",{children:\"End Position\"})]}),/*#__PURE__*/_jsxs(LegendItem,{children:[/*#__PURE__*/_jsx(\"div\",{style:{width:'12px',height:'2px',background:'rgba(0, 255, 255, 0.6)',margin:'5px 0'}}),/*#__PURE__*/_jsx(\"span\",{children:\"Path Connection\"})]})]}),/*#__PURE__*/_jsxs(PathInfo,{children:[/*#__PURE__*/_jsxs(InfoCard,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"Path Length\"}),/*#__PURE__*/_jsxs(InfoValue,{children:[pathData.path_length||0,\" steps\"]})]}),/*#__PURE__*/_jsxs(InfoCard,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"Total Distance\"}),/*#__PURE__*/_jsx(InfoValue,{children:metrics.total_distance?\"\".concat((metrics.total_distance/1000).toFixed(1),\" km\"):'0 km'})]}),/*#__PURE__*/_jsxs(InfoCard,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"Mission Time\"}),/*#__PURE__*/_jsx(InfoValue,{children:metrics.total_time?\"\".concat((metrics.total_time/3600).toFixed(1),\" hours\"):'0 hours'})]}),/*#__PURE__*/_jsxs(InfoCard,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"Fuel Required\"}),/*#__PURE__*/_jsx(InfoValue,{children:metrics.total_fuel?\"\".concat(metrics.total_fuel.toFixed(1),\" kg\"):'0 kg'})]})]}),/*#__PURE__*/_jsxs(PathSteps,{children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:'#ffffff',marginBottom:'10px',fontSize:'14px'},children:\"Path Steps:\"}),(_pathData$path=pathData.path)===null||_pathData$path===void 0?void 0:_pathData$path.map((step,index)=>/*#__PURE__*/_jsxs(StepItem,{color:index===0?'#00ff00':index===pathData.path.length-1?'#ff0000':'#00ffff',children:[/*#__PURE__*/_jsxs(\"strong\",{children:[\"Step \",step.step,\":\"]}),\" \",index===0?'Start':\"Debris \".concat(step.debris_id),step.distance_from_previous&&/*#__PURE__*/_jsxs(\"span\",{style:{float:'right',color:'rgba(255, 255, 255, 0.6)'},children:[step.distance_from_previous.toFixed(1),\"m\"]})]},index))]})]});}export default PathVisualization;","map":{"version":3,"names":["React","useRef","useEffect","useState","styled","jsx","_jsx","jsxs","_jsxs","VisualizationContainer","div","_templateObject","_taggedTemplateLiteral","VisualizationHeader","_templateObject2","VisualizationTitle","h3","_templateObject3","ViewControls","_templateObject4","ViewButton","button","_templateObject5","props","active","CanvasContainer","_templateObject6","Canvas","canvas","_templateObject7","PathInfo","_templateObject8","InfoCard","_templateObject9","InfoLabel","_templateObject0","InfoValue","_templateObject1","Legend","_templateObject10","LegendItem","_templateObject11","LegendColor","_templateObject12","color","PathSteps","_templateObject13","StepItem","_templateObject14","PathVisualization","_ref","_pathData$path","pathData","analysisResult","canvasRef","viewMode","setViewMode","camera","setCamera","x","y","z","rotation","setRotation","visualization","drawPath","current","ctx","getContext","rect","getBoundingClientRect","width","height","fillStyle","fillRect","points","connections","metadata","length","bounds","calculateBounds","scale","Math","min","max","centerX","centerY","projectedPoints","map","point","projectedX","projectedY","strokeStyle","lineWidth","setLineDash","connection","startIdx","endIdx","start","end","beginPath","moveTo","lineTo","stroke","forEach","index","_pathData$visualizati","isStart","isEnd","radius","feasible","size","arc","PI","fill","font","textAlign","label","concat","debris_id","fillText","drawAxes","minX","maxX","minY","maxY","xCoords","p","yCoords","handleCanvasMouseMove","e","clientX","left","clientY","top","children","style","padding","metrics","onClick","ref","onMouseMove","background","margin","path_length","total_distance","toFixed","total_time","total_fuel","marginBottom","fontSize","path","step","distance_from_previous","float"],"sources":["/Users/parthzanwar/Desktop/Space Apps/src/components/PathVisualization.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nconst VisualizationContainer = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 15px;\n  padding: 25px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nconst VisualizationHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n\nconst VisualizationTitle = styled.h3`\n  font-size: 18px;\n  font-weight: 600;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst ViewControls = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nconst ViewButton = styled.button`\n  background: ${props => props.active ? 'rgba(0, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)'};\n  border: 1px solid ${props => props.active ? '#00ffff' : 'rgba(255, 255, 255, 0.3)'};\n  padding: 6px 12px;\n  border-radius: 15px;\n  color: #ffffff;\n  font-size: 11px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background: rgba(0, 255, 255, 0.2);\n    border-color: #00ffff;\n  }\n`;\n\nconst CanvasContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 400px;\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 10px;\n  overflow: hidden;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nconst Canvas = styled.canvas`\n  width: 100%;\n  height: 100%;\n  cursor: grab;\n  \n  &:active {\n    cursor: grabbing;\n  }\n`;\n\nconst PathInfo = styled.div`\n  margin-top: 20px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 15px;\n`;\n\nconst InfoCard = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  padding: 12px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nconst InfoLabel = styled.div`\n  font-size: 11px;\n  color: rgba(255, 255, 255, 0.7);\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  margin-bottom: 5px;\n`;\n\nconst InfoValue = styled.div`\n  font-size: 14px;\n  font-weight: 600;\n  color: #ffffff;\n`;\n\nconst Legend = styled.div`\n  margin-top: 15px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.8);\n`;\n\nconst LegendColor = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: ${props => props.color};\n`;\n\nconst PathSteps = styled.div`\n  margin-top: 20px;\n  max-height: 200px;\n  overflow-y: auto;\n`;\n\nconst StepItem = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  padding: 10px;\n  margin-bottom: 8px;\n  border-left: 3px solid ${props => props.color};\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.8);\n`;\n\nfunction PathVisualization({ pathData, analysisResult }) {\n  const canvasRef = useRef(null);\n  const [viewMode, setViewMode] = useState('3d');\n  const [camera, setCamera] = useState({ x: 0, y: 0, z: 1000 });\n  const [rotation, setRotation] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    if (pathData && pathData.visualization) {\n      drawPath();\n    }\n  }, [pathData, viewMode, camera, rotation]);\n\n  const drawPath = () => {\n    const canvas = canvasRef.current;\n    if (!canvas || !pathData.visualization) return;\n\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width;\n    canvas.height = rect.height;\n\n    // Clear canvas\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    const points = pathData.visualization.points;\n    const connections = pathData.visualization.connections;\n    const metadata = pathData.visualization.metadata || [];\n\n    if (!points || points.length === 0) return;\n\n    // Calculate bounds\n    const bounds = calculateBounds(points);\n    const scale = Math.min(canvas.width, canvas.height) / Math.max(bounds.width, bounds.height) * 0.8;\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n\n    // Project 3D points to 2D\n    const projectedPoints = points.map(point => {\n      const [x, y, z] = point;\n      \n      // Simple 3D to 2D projection\n      const projectedX = centerX + (x - bounds.centerX) * scale;\n      const projectedY = centerY + (y - bounds.centerY) * scale;\n      \n      return { x: projectedX, y: projectedY, z };\n    });\n\n    // Draw connections\n    ctx.strokeStyle = 'rgba(0, 255, 255, 0.6)';\n    ctx.lineWidth = 2;\n    ctx.setLineDash([5, 5]);\n    \n    for (const connection of connections) {\n      const [startIdx, endIdx] = connection;\n      if (startIdx < projectedPoints.length && endIdx < projectedPoints.length) {\n        const start = projectedPoints[startIdx];\n        const end = projectedPoints[endIdx];\n        \n        ctx.beginPath();\n        ctx.moveTo(start.x, start.y);\n        ctx.lineTo(end.x, end.y);\n        ctx.stroke();\n      }\n    }\n\n    // Reset line dash\n    ctx.setLineDash([]);\n\n    // Draw points\n    projectedPoints.forEach((point, index) => {\n      const isStart = index === 0;\n      const isEnd = index === projectedPoints.length - 1;\n      const metadata = pathData.visualization.metadata?.[index - 1]; // -1 because start point has no metadata\n\n      let color, radius;\n      \n      if (isStart) {\n        color = '#00ff00';\n        radius = 8;\n      } else if (isEnd) {\n        color = '#ff0000';\n        radius = 8;\n      } else if (metadata) {\n        color = metadata.feasible ? '#00ffff' : '#ffaa00';\n        radius = Math.max(4, Math.min(12, metadata.size * 2));\n      } else {\n        color = '#ffffff';\n        radius = 6;\n      }\n\n      // Draw point\n      ctx.fillStyle = color;\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, radius, 0, 2 * Math.PI);\n      ctx.fill();\n\n      // Draw border\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.8)';\n      ctx.lineWidth = 1;\n      ctx.stroke();\n\n      // Draw labels\n      if (metadata || isStart || isEnd) {\n        ctx.fillStyle = '#ffffff';\n        ctx.font = '10px Inter, sans-serif';\n        ctx.textAlign = 'center';\n        \n        const label = isStart ? 'START' : \n                     isEnd ? 'END' : \n                     `D${metadata?.debris_id || index}`;\n        \n        ctx.fillText(label, point.x, point.y - radius - 10);\n      }\n    });\n\n    // Draw coordinate axes\n    drawAxes(ctx, centerX, centerY, scale);\n  };\n\n  const calculateBounds = (points) => {\n    if (points.length === 0) return { minX: 0, maxX: 0, minY: 0, maxY: 0, centerX: 0, centerY: 0, width: 0, height: 0 };\n\n    const xCoords = points.map(p => p[0]);\n    const yCoords = points.map(p => p[1]);\n    \n    const minX = Math.min(...xCoords);\n    const maxX = Math.max(...xCoords);\n    const minY = Math.min(...yCoords);\n    const maxY = Math.max(...yCoords);\n    \n    return {\n      minX, maxX, minY, maxY,\n      centerX: (minX + maxX) / 2,\n      centerY: (minY + maxY) / 2,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  };\n\n  const drawAxes = (ctx, centerX, centerY, scale) => {\n    ctx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n    ctx.lineWidth = 1;\n    \n    // X axis\n    ctx.beginPath();\n    ctx.moveTo(centerX - 50, centerY);\n    ctx.lineTo(centerX + 50, centerY);\n    ctx.stroke();\n    \n    // Y axis\n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY - 50);\n    ctx.lineTo(centerX, centerY + 50);\n    ctx.stroke();\n    \n    // Labels\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.6)';\n    ctx.font = '8px Inter, sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('X', centerX + 55, centerY + 3);\n    ctx.fillText('Y', centerX + 3, centerY - 55);\n  };\n\n  const handleCanvasMouseMove = (e) => {\n    // Simple mouse interaction for rotation\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const rect = canvas.getBoundingClientRect();\n    const x = (e.clientX - rect.left) / rect.width;\n    const y = (e.clientY - rect.top) / rect.height;\n    \n    setRotation({\n      x: (y - 0.5) * Math.PI,\n      y: (x - 0.5) * Math.PI\n    });\n  };\n\n  if (!pathData || !pathData.visualization) {\n    return (\n      <VisualizationContainer>\n        <VisualizationHeader>\n          <VisualizationTitle>🗺️ Path Visualization</VisualizationTitle>\n        </VisualizationHeader>\n        <div style={{ textAlign: 'center', padding: '40px', color: 'rgba(255, 255, 255, 0.5)' }}>\n          No path data available\n        </div>\n      </VisualizationContainer>\n    );\n  }\n\n  const metrics = pathData.metrics || {};\n\n  return (\n    <VisualizationContainer>\n      <VisualizationHeader>\n        <VisualizationTitle>🗺️ Path Visualization</VisualizationTitle>\n        <ViewControls>\n          <ViewButton \n            active={viewMode === '3d'} \n            onClick={() => setViewMode('3d')}\n          >\n            3D View\n          </ViewButton>\n          <ViewButton \n            active={viewMode === '2d'} \n            onClick={() => setViewMode('2d')}\n          >\n            2D View\n          </ViewButton>\n        </ViewControls>\n      </VisualizationHeader>\n\n      <CanvasContainer>\n        <Canvas\n          ref={canvasRef}\n          onMouseMove={handleCanvasMouseMove}\n        />\n      </CanvasContainer>\n\n      <Legend>\n        <LegendItem>\n          <LegendColor color=\"#00ff00\" />\n          <span>Start Position</span>\n        </LegendItem>\n        <LegendItem>\n          <LegendColor color=\"#00ffff\" />\n          <span>Feasible Debris</span>\n        </LegendItem>\n        <LegendItem>\n          <LegendColor color=\"#ffaa00\" />\n          <span>Non-feasible</span>\n        </LegendItem>\n        <LegendItem>\n          <LegendColor color=\"#ff0000\" />\n          <span>End Position</span>\n        </LegendItem>\n        <LegendItem>\n          <div style={{ width: '12px', height: '2px', background: 'rgba(0, 255, 255, 0.6)', margin: '5px 0' }}></div>\n          <span>Path Connection</span>\n        </LegendItem>\n      </Legend>\n\n      <PathInfo>\n        <InfoCard>\n          <InfoLabel>Path Length</InfoLabel>\n          <InfoValue>{pathData.path_length || 0} steps</InfoValue>\n        </InfoCard>\n        \n        <InfoCard>\n          <InfoLabel>Total Distance</InfoLabel>\n          <InfoValue>{metrics.total_distance ? `${(metrics.total_distance / 1000).toFixed(1)} km` : '0 km'}</InfoValue>\n        </InfoCard>\n        \n        <InfoCard>\n          <InfoLabel>Mission Time</InfoLabel>\n          <InfoValue>{metrics.total_time ? `${(metrics.total_time / 3600).toFixed(1)} hours` : '0 hours'}</InfoValue>\n        </InfoCard>\n        \n        <InfoCard>\n          <InfoLabel>Fuel Required</InfoLabel>\n          <InfoValue>{metrics.total_fuel ? `${metrics.total_fuel.toFixed(1)} kg` : '0 kg'}</InfoValue>\n        </InfoCard>\n      </PathInfo>\n\n      <PathSteps>\n        <h4 style={{ color: '#ffffff', marginBottom: '10px', fontSize: '14px' }}>\n          Path Steps:\n        </h4>\n        \n        {pathData.path?.map((step, index) => (\n          <StepItem \n            key={index}\n            color={index === 0 ? '#00ff00' : index === pathData.path.length - 1 ? '#ff0000' : '#00ffff'}\n          >\n            <strong>Step {step.step}:</strong> {index === 0 ? 'Start' : `Debris ${step.debris_id}`} \n            {step.distance_from_previous && (\n              <span style={{ float: 'right', color: 'rgba(255, 255, 255, 0.6)' }}>\n                {step.distance_from_previous.toFixed(1)}m\n              </span>\n            )}\n          </StepItem>\n        ))}\n      </PathSteps>\n    </VisualizationContainer>\n  );\n}\n\nexport default PathVisualization;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
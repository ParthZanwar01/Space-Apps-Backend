{"ast":null,"code":"var _jsxFileName = \"/Users/parthzanwar/Desktop/Space Apps/public/src/components/PathVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisualizationContainer = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 15px;\n  padding: 25px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n_c = VisualizationContainer;\nconst VisualizationHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n_c2 = VisualizationHeader;\nconst VisualizationTitle = styled.h3`\n  font-size: 18px;\n  font-weight: 600;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n_c3 = VisualizationTitle;\nconst ViewControls = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n_c4 = ViewControls;\nconst ViewButton = styled.button`\n  background: ${props => props.active ? 'rgba(0, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)'};\n  border: 1px solid ${props => props.active ? '#00ffff' : 'rgba(255, 255, 255, 0.3)'};\n  padding: 6px 12px;\n  border-radius: 15px;\n  color: #ffffff;\n  font-size: 11px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background: rgba(0, 255, 255, 0.2);\n    border-color: #00ffff;\n  }\n`;\n_c5 = ViewButton;\nconst CanvasContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 400px;\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 10px;\n  overflow: hidden;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n_c6 = CanvasContainer;\nconst Canvas = styled.canvas`\n  width: 100%;\n  height: 100%;\n  cursor: grab;\n  \n  &:active {\n    cursor: grabbing;\n  }\n`;\n_c7 = Canvas;\nconst PathInfo = styled.div`\n  margin-top: 20px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 15px;\n`;\n_c8 = PathInfo;\nconst InfoCard = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  padding: 12px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n_c9 = InfoCard;\nconst InfoLabel = styled.div`\n  font-size: 11px;\n  color: rgba(255, 255, 255, 0.7);\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  margin-bottom: 5px;\n`;\n_c0 = InfoLabel;\nconst InfoValue = styled.div`\n  font-size: 14px;\n  font-weight: 600;\n  color: #ffffff;\n`;\n_c1 = InfoValue;\nconst Legend = styled.div`\n  margin-top: 15px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n_c10 = Legend;\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.8);\n`;\n_c11 = LegendItem;\nconst LegendColor = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: ${props => props.color};\n`;\n_c12 = LegendColor;\nconst PathSteps = styled.div`\n  margin-top: 20px;\n  max-height: 200px;\n  overflow-y: auto;\n`;\n_c13 = PathSteps;\nconst StepItem = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  padding: 10px;\n  margin-bottom: 8px;\n  border-left: 3px solid ${props => props.color};\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.8);\n`;\n_c14 = StepItem;\nfunction PathVisualization({\n  pathData,\n  analysisResult\n}) {\n  _s();\n  var _pathData$path;\n  const canvasRef = useRef(null);\n  const [viewMode, setViewMode] = useState('3d');\n  const [rotation, setRotation] = useState({\n    x: 0,\n    y: 0\n  });\n  const [showOnImage, setShowOnImage] = useState(false);\n  const [zoom, setZoom] = useState(1.0);\n  const [pan, setPan] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isPanning, setIsPanning] = useState(false);\n  const [lastPanPos, setLastPanPos] = useState({\n    x: 0,\n    y: 0\n  });\n  const calculateBounds = useCallback(points => {\n    if (points.length === 0) return {\n      minX: 0,\n      maxX: 0,\n      minY: 0,\n      maxY: 0,\n      centerX: 0,\n      centerY: 0,\n      width: 0,\n      height: 0\n    };\n    const xCoords = points.map(p => p[0]);\n    const yCoords = points.map(p => p[1]);\n    const minX = Math.min(...xCoords);\n    const maxX = Math.max(...xCoords);\n    const minY = Math.min(...yCoords);\n    const maxY = Math.max(...yCoords);\n    return {\n      minX,\n      maxX,\n      minY,\n      maxY,\n      centerX: (minX + maxX) / 2,\n      centerY: (minY + maxY) / 2,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  }, []);\n  const drawAxes = useCallback((ctx, centerX, centerY, scale) => {\n    ctx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n    ctx.lineWidth = 1;\n\n    // X axis\n    ctx.beginPath();\n    ctx.moveTo(centerX - 50, centerY);\n    ctx.lineTo(centerX + 50, centerY);\n    ctx.stroke();\n\n    // Y axis\n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY - 50);\n    ctx.lineTo(centerX, centerY + 50);\n    ctx.stroke();\n\n    // Labels\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.6)';\n    ctx.font = '8px Inter, sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('X', centerX + 55, centerY + 3);\n    ctx.fillText('Y', centerX + 3, centerY - 55);\n  }, []);\n  const drawPathOverlay = useCallback((ctx, rect, imgX = 0, imgY = 0, imgWidth = 0, imgHeight = 0) => {\n    const points = pathData.visualization.points;\n    const connections = pathData.visualization.connections;\n    if (!points || points.length === 0) return;\n\n    // Calculate bounds\n    const bounds = calculateBounds(points);\n    const scale = Math.min(rect.width, rect.height) / Math.max(bounds.width, bounds.height) * 0.8;\n    const centerX = rect.width / 2;\n    const centerY = rect.height / 2;\n\n    // Project 3D points to 2D with view mode consideration\n    const projectedPoints = points.map(point => {\n      const [x, y, z] = point;\n      if (showOnImage && analysisResult && analysisResult.image_url) {\n        var _analysisResult$metad, _analysisResult$metad2, _analysisResult$metad3, _analysisResult$metad4;\n        // When showing on image, map path coordinates to image space\n        // Path coordinates are in image pixel space (x, y, z=0)\n        // We need to scale them to match the displayed image size\n\n        // Get the original image dimensions from the analysis result\n        const originalWidth = ((_analysisResult$metad = analysisResult.metadata) === null || _analysisResult$metad === void 0 ? void 0 : (_analysisResult$metad2 = _analysisResult$metad.image_size) === null || _analysisResult$metad2 === void 0 ? void 0 : _analysisResult$metad2[1]) || bounds.width;\n        const originalHeight = ((_analysisResult$metad3 = analysisResult.metadata) === null || _analysisResult$metad3 === void 0 ? void 0 : (_analysisResult$metad4 = _analysisResult$metad3.image_size) === null || _analysisResult$metad4 === void 0 ? void 0 : _analysisResult$metad4[0]) || bounds.height;\n\n        // Scale the path coordinates to match the displayed image\n        const scaleX = imgWidth / originalWidth;\n        const scaleY = imgHeight / originalHeight;\n\n        // Apply scaling and positioning\n        const imageX = imgX + x * scaleX;\n        const imageY = imgY + y * scaleY;\n        return {\n          x: imageX,\n          y: imageY,\n          z: 0\n        };\n      }\n      if (viewMode === '2d') {\n        // Simple 2D projection (ignore Z) with zoom and pan\n        const projectedX = centerX + (x - bounds.centerX) * scale * zoom + pan.x;\n        const projectedY = centerY + (y - bounds.centerY) * scale * zoom + pan.y;\n        return {\n          x: projectedX,\n          y: projectedY,\n          z: 0\n        };\n      } else {\n        // 3D perspective projection with rotation (improved) and zoom\n        const cosX = Math.cos(rotation.x * 0.5);\n        const sinX = Math.sin(rotation.x * 0.5);\n        const cosY = Math.cos(rotation.y * 0.5);\n        const sinY = Math.sin(rotation.y * 0.5);\n\n        // Apply rotation with better scaling\n        const rotatedX = x * cosY - z * sinY;\n        const rotatedY = y * cosX + (x * sinY + z * cosY) * sinX;\n        const rotatedZ = (x * sinY + z * cosY) * cosX - y * sinX;\n\n        // Perspective projection with better depth handling and zoom\n        const perspective = 1000;\n        const depth = Math.max(1, rotatedZ + perspective);\n        const projectedX = centerX + rotatedX / depth * scale * 200 * zoom + pan.x;\n        const projectedY = centerY + rotatedY / depth * scale * 200 * zoom + pan.y;\n        return {\n          x: projectedX,\n          y: projectedY,\n          z: rotatedZ\n        };\n      }\n    });\n\n    // Draw connections\n    ctx.strokeStyle = 'rgba(0, 255, 255, 0.6)';\n    ctx.lineWidth = 2;\n    ctx.setLineDash([5, 5]);\n    for (const connection of connections) {\n      const [startIdx, endIdx] = connection;\n      if (startIdx < projectedPoints.length && endIdx < projectedPoints.length) {\n        const start = projectedPoints[startIdx];\n        const end = projectedPoints[endIdx];\n        ctx.beginPath();\n        ctx.moveTo(start.x, start.y);\n        ctx.lineTo(end.x, end.y);\n        ctx.stroke();\n      }\n    }\n\n    // Reset line dash\n    ctx.setLineDash([]);\n\n    // Draw points\n    projectedPoints.forEach((point, index) => {\n      var _pathData$visualizati;\n      const isStart = index === 0;\n      const isEnd = index === projectedPoints.length - 1;\n      const metadata = (_pathData$visualizati = pathData.visualization.metadata) === null || _pathData$visualizati === void 0 ? void 0 : _pathData$visualizati[index - 1]; // -1 because start point has no metadata\n\n      let color, radius;\n      if (isStart) {\n        color = '#00ff00';\n        radius = 8;\n      } else if (isEnd && projectedPoints.length > 2) {\n        color = '#ff0000';\n        radius = 8;\n      } else {\n        // Intermediate debris points\n        const isFeasible = metadata === null || metadata === void 0 ? void 0 : metadata.feasible;\n        color = isFeasible ? '#00ffff' : '#ff8800';\n        radius = 6;\n      }\n      ctx.fillStyle = color;\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, radius, 0, Math.PI * 2);\n      ctx.fill();\n\n      // Draw labels\n      if (isStart || isEnd || metadata && metadata.feasible) {\n        ctx.fillStyle = color;\n        ctx.font = '10px Inter, sans-serif';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'bottom';\n        const label = isStart ? 'START' : isEnd && projectedPoints.length > 2 ? 'END' : metadata ? `D${metadata.debris_id || index}` : `D${index}`;\n        ctx.fillText(label, point.x, point.y - radius - 10);\n      }\n    });\n\n    // Draw coordinate axes (only in 3D mode and not on image)\n    if (viewMode === '3d' && !showOnImage) {\n      drawAxes(ctx, centerX, centerY, scale);\n    }\n  }, [pathData, viewMode, rotation, showOnImage, zoom, pan, analysisResult, calculateBounds, drawAxes]);\n  const drawPath = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !pathData.visualization) return;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    const dpr = window.devicePixelRatio || 1;\n    canvas.width = rect.width * dpr;\n    canvas.height = rect.height * dpr;\n    ctx.scale(dpr, dpr);\n    canvas.style.width = rect.width + 'px';\n    canvas.style.height = rect.height + 'px';\n\n    // Clear canvas or draw background image\n    if (showOnImage && analysisResult && analysisResult.image_url) {\n      // Draw the original image as background with zoom and pan\n      const img = new Image();\n      img.onload = () => {\n        // Calculate image dimensions with zoom\n        const imgWidth = img.width * zoom;\n        const imgHeight = img.height * zoom;\n\n        // Calculate image position with pan\n        const imgX = (rect.width - imgWidth) / 2 + pan.x;\n        const imgY = (rect.height - imgHeight) / 2 + pan.y;\n\n        // Clear canvas\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\n        ctx.fillRect(0, 0, rect.width, rect.height);\n\n        // Draw image with zoom and pan\n        ctx.drawImage(img, imgX, imgY, imgWidth, imgHeight);\n\n        // Draw path overlay with same zoom and pan\n        drawPathOverlay(ctx, rect, imgX, imgY, imgWidth, imgHeight);\n      };\n      img.src = analysisResult.image_url;\n      return;\n    } else {\n      // Clear canvas with background\n      ctx.fillStyle = viewMode === '3d' ? 'rgba(0, 0, 20, 0.3)' : 'rgba(0, 0, 0, 0.1)';\n      ctx.fillRect(0, 0, rect.width, rect.height);\n    }\n    drawPathOverlay(ctx, rect);\n  }, [pathData, viewMode, showOnImage, zoom, pan, analysisResult, drawPathOverlay]);\n  useEffect(() => {\n    if (pathData && pathData.visualization) {\n      drawPath();\n    }\n  }, [pathData, viewMode, rotation, showOnImage, zoom, pan, drawPath]);\n\n  // Add non-passive wheel event listener\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const handleWheel = e => {\n      e.preventDefault();\n      e.stopPropagation();\n      const delta = e.deltaY > 0 ? 0.9 : 1.1;\n      setZoom(prev => Math.max(0.1, Math.min(10, prev * delta)));\n    };\n\n    // Add event listener with passive: false\n    canvas.addEventListener('wheel', handleWheel, {\n      passive: false\n    });\n    return () => {\n      canvas.removeEventListener('wheel', handleWheel);\n    };\n  }, []);\n  const handleCanvasMouseMove = e => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    if (isPanning) {\n      // Handle panning\n      const deltaX = e.clientX - lastPanPos.x;\n      const deltaY = e.clientY - lastPanPos.y;\n      setPan(prev => ({\n        x: prev.x + deltaX,\n        y: prev.y + deltaY\n      }));\n      setLastPanPos({\n        x: e.clientX,\n        y: e.clientY\n      });\n    } else if (viewMode === '3d' && !showOnImage) {\n      // Handle 3D rotation\n      const x = (e.clientX - rect.left) / rect.width;\n      const y = (e.clientY - rect.top) / rect.height;\n      setRotation({\n        x: (y - 0.5) * Math.PI,\n        y: (x - 0.5) * Math.PI\n      });\n    }\n  };\n  const handleCanvasMouseDown = e => {\n    if (e.button === 1 || e.button === 0 && e.ctrlKey) {\n      // Middle mouse or Ctrl+left click for panning\n      setIsPanning(true);\n      setLastPanPos({\n        x: e.clientX,\n        y: e.clientY\n      });\n      e.preventDefault();\n    } else if (e.button === 0 && viewMode === '3d' && !showOnImage) {\n      // Left click for 3D rotation\n      // setIsDragging(true);\n      // setLastMousePos({ x: e.clientX, y: e.clientY });\n    }\n  };\n  const handleCanvasMouseUp = () => {\n    // setIsDragging(false);\n    setIsPanning(false);\n  };\n  const handleCanvasWheel = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const delta = e.deltaY > 0 ? 0.9 : 1.1;\n    setZoom(prev => Math.max(0.1, Math.min(10, prev * delta)));\n  }, []);\n  const resetView = () => {\n    setZoom(1.0);\n    setPan({\n      x: 0,\n      y: 0\n    });\n    setRotation({\n      x: 0,\n      y: 0\n    });\n  };\n  if (!pathData || !pathData.visualization) {\n    return /*#__PURE__*/_jsxDEV(VisualizationContainer, {\n      children: [/*#__PURE__*/_jsxDEV(VisualizationHeader, {\n        children: /*#__PURE__*/_jsxDEV(VisualizationTitle, {\n          children: \"\\uD83D\\uDDFA\\uFE0F Path Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '40px',\n          color: 'rgba(255, 255, 255, 0.5)'\n        },\n        children: \"No path data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this);\n  }\n  const metrics = pathData.metrics || {};\n  return /*#__PURE__*/_jsxDEV(VisualizationContainer, {\n    children: [/*#__PURE__*/_jsxDEV(VisualizationHeader, {\n      children: [/*#__PURE__*/_jsxDEV(VisualizationTitle, {\n        children: \"\\uD83D\\uDDFA\\uFE0F Path Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ViewControls, {\n        children: [/*#__PURE__*/_jsxDEV(ViewButton, {\n          active: viewMode === '3d',\n          onClick: () => setViewMode('3d'),\n          children: \"3D View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ViewButton, {\n          active: viewMode === '2d',\n          onClick: () => setViewMode('2d'),\n          children: \"2D View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ViewButton, {\n          active: showOnImage,\n          onClick: () => setShowOnImage(!showOnImage),\n          children: \"\\uD83D\\uDCF8 On Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ViewButton, {\n          onClick: () => setZoom(prev => Math.min(10, prev * 1.2)),\n          title: \"Zoom In\",\n          children: \"\\uD83D\\uDD0D+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ViewButton, {\n          onClick: () => setZoom(prev => Math.max(0.1, prev * 0.8)),\n          title: \"Zoom Out\",\n          children: \"\\uD83D\\uDD0D-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ViewButton, {\n          onClick: resetView,\n          title: \"Reset View\",\n          children: \"\\uD83C\\uDFE0 Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CanvasContainer, {\n      children: /*#__PURE__*/_jsxDEV(Canvas, {\n        ref: canvasRef,\n        onMouseMove: handleCanvasMouseMove,\n        onMouseDown: handleCanvasMouseDown,\n        onMouseUp: handleCanvasMouseUp,\n        onWheel: handleCanvasWheel,\n        style: {\n          touchAction: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      children: [/*#__PURE__*/_jsxDEV(LegendItem, {\n        children: [/*#__PURE__*/_jsxDEV(LegendColor, {\n          color: \"#00ff00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Start Position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LegendItem, {\n        children: [/*#__PURE__*/_jsxDEV(LegendColor, {\n          color: \"#00ffff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Feasible Debris\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LegendItem, {\n        children: [/*#__PURE__*/_jsxDEV(LegendColor, {\n          color: \"#ffaa00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Non-feasible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LegendItem, {\n        children: [/*#__PURE__*/_jsxDEV(LegendColor, {\n          color: \"#ff0000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"End Position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LegendItem, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '12px',\n            height: '2px',\n            background: 'rgba(0, 255, 255, 0.6)',\n            margin: '5px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Path Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LegendItem, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uD83D\\uDD0D Zoom: \", Math.round(zoom * 100), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LegendItem, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Controls: Scroll=Zoom, Ctrl+Drag=Pan, Drag=Rotate(3D)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }, this), showOnImage && /*#__PURE__*/_jsxDEV(LegendItem, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDCF8 Image Mode: Zoom and pan work with the image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PathInfo, {\n      children: [/*#__PURE__*/_jsxDEV(InfoCard, {\n        children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n          children: \"Path Length\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n          children: [pathData.path_length || 0, \" steps\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoCard, {\n        children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n          children: \"Total Distance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n          children: metrics.total_distance ? `${(metrics.total_distance / 1000).toFixed(1)} km` : '0 km'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoCard, {\n        children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n          children: \"Mission Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n          children: metrics.total_time ? `${(metrics.total_time / 3600).toFixed(1)} hours` : '0 hours'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoCard, {\n        children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n          children: \"Fuel Required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n          children: metrics.total_fuel ? `${metrics.total_fuel.toFixed(1)} kg` : '0 kg'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PathSteps, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: '#ffffff',\n          marginBottom: '10px',\n          fontSize: '14px'\n        },\n        children: \"Path Steps:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 9\n      }, this), (_pathData$path = pathData.path) === null || _pathData$path === void 0 ? void 0 : _pathData$path.map((step, index) => /*#__PURE__*/_jsxDEV(StepItem, {\n        color: index === 0 ? '#00ff00' : index === pathData.path.length - 1 ? '#ff0000' : '#00ffff',\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Step \", step.step, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 13\n        }, this), \" \", index === 0 ? 'Start' : `Debris ${step.debris_id}`, step.distance_from_previous && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            float: 'right',\n            color: 'rgba(255, 255, 255, 0.6)'\n          },\n          children: [step.distance_from_previous.toFixed(1), \"m\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 475,\n    columnNumber: 5\n  }, this);\n}\n_s(PathVisualization, \"ViDAvnGF5QcLPmZK3ie26yzt+J8=\");\n_c15 = PathVisualization;\nexport default PathVisualization;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"VisualizationContainer\");\n$RefreshReg$(_c2, \"VisualizationHeader\");\n$RefreshReg$(_c3, \"VisualizationTitle\");\n$RefreshReg$(_c4, \"ViewControls\");\n$RefreshReg$(_c5, \"ViewButton\");\n$RefreshReg$(_c6, \"CanvasContainer\");\n$RefreshReg$(_c7, \"Canvas\");\n$RefreshReg$(_c8, \"PathInfo\");\n$RefreshReg$(_c9, \"InfoCard\");\n$RefreshReg$(_c0, \"InfoLabel\");\n$RefreshReg$(_c1, \"InfoValue\");\n$RefreshReg$(_c10, \"Legend\");\n$RefreshReg$(_c11, \"LegendItem\");\n$RefreshReg$(_c12, \"LegendColor\");\n$RefreshReg$(_c13, \"PathSteps\");\n$RefreshReg$(_c14, \"StepItem\");\n$RefreshReg$(_c15, \"PathVisualization\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","styled","jsxDEV","_jsxDEV","VisualizationContainer","div","_c","VisualizationHeader","_c2","VisualizationTitle","h3","_c3","ViewControls","_c4","ViewButton","button","props","active","_c5","CanvasContainer","_c6","Canvas","canvas","_c7","PathInfo","_c8","InfoCard","_c9","InfoLabel","_c0","InfoValue","_c1","Legend","_c10","LegendItem","_c11","LegendColor","color","_c12","PathSteps","_c13","StepItem","_c14","PathVisualization","pathData","analysisResult","_s","_pathData$path","canvasRef","viewMode","setViewMode","rotation","setRotation","x","y","showOnImage","setShowOnImage","zoom","setZoom","pan","setPan","isPanning","setIsPanning","lastPanPos","setLastPanPos","calculateBounds","points","length","minX","maxX","minY","maxY","centerX","centerY","width","height","xCoords","map","p","yCoords","Math","min","max","drawAxes","ctx","scale","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","fillStyle","font","textAlign","fillText","drawPathOverlay","rect","imgX","imgY","imgWidth","imgHeight","visualization","connections","bounds","projectedPoints","point","z","image_url","_analysisResult$metad","_analysisResult$metad2","_analysisResult$metad3","_analysisResult$metad4","originalWidth","metadata","image_size","originalHeight","scaleX","scaleY","imageX","imageY","projectedX","projectedY","cosX","cos","sinX","sin","cosY","sinY","rotatedX","rotatedY","rotatedZ","perspective","depth","setLineDash","connection","startIdx","endIdx","start","end","forEach","index","_pathData$visualizati","isStart","isEnd","radius","isFeasible","feasible","arc","PI","fill","textBaseline","label","debris_id","drawPath","current","getContext","getBoundingClientRect","dpr","window","devicePixelRatio","style","img","Image","onload","fillRect","drawImage","src","handleWheel","e","preventDefault","stopPropagation","delta","deltaY","prev","addEventListener","passive","removeEventListener","handleCanvasMouseMove","deltaX","clientX","clientY","left","top","handleCanvasMouseDown","ctrlKey","handleCanvasMouseUp","handleCanvasWheel","resetView","children","fileName","_jsxFileName","lineNumber","columnNumber","padding","metrics","onClick","title","ref","onMouseMove","onMouseDown","onMouseUp","onWheel","touchAction","background","margin","round","path_length","total_distance","toFixed","total_time","total_fuel","marginBottom","fontSize","path","step","distance_from_previous","float","_c15","$RefreshReg$"],"sources":["/Users/parthzanwar/Desktop/Space Apps/public/src/components/PathVisualization.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components';\n\nconst VisualizationContainer = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 15px;\n  padding: 25px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nconst VisualizationHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n\nconst VisualizationTitle = styled.h3`\n  font-size: 18px;\n  font-weight: 600;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst ViewControls = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nconst ViewButton = styled.button`\n  background: ${props => props.active ? 'rgba(0, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)'};\n  border: 1px solid ${props => props.active ? '#00ffff' : 'rgba(255, 255, 255, 0.3)'};\n  padding: 6px 12px;\n  border-radius: 15px;\n  color: #ffffff;\n  font-size: 11px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background: rgba(0, 255, 255, 0.2);\n    border-color: #00ffff;\n  }\n`;\n\nconst CanvasContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 400px;\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 10px;\n  overflow: hidden;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nconst Canvas = styled.canvas`\n  width: 100%;\n  height: 100%;\n  cursor: grab;\n  \n  &:active {\n    cursor: grabbing;\n  }\n`;\n\nconst PathInfo = styled.div`\n  margin-top: 20px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 15px;\n`;\n\nconst InfoCard = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  padding: 12px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nconst InfoLabel = styled.div`\n  font-size: 11px;\n  color: rgba(255, 255, 255, 0.7);\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  margin-bottom: 5px;\n`;\n\nconst InfoValue = styled.div`\n  font-size: 14px;\n  font-weight: 600;\n  color: #ffffff;\n`;\n\nconst Legend = styled.div`\n  margin-top: 15px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.8);\n`;\n\nconst LegendColor = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: ${props => props.color};\n`;\n\nconst PathSteps = styled.div`\n  margin-top: 20px;\n  max-height: 200px;\n  overflow-y: auto;\n`;\n\nconst StepItem = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  padding: 10px;\n  margin-bottom: 8px;\n  border-left: 3px solid ${props => props.color};\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.8);\n`;\n\nfunction PathVisualization({ pathData, analysisResult }) {\n  const canvasRef = useRef(null);\n  const [viewMode, setViewMode] = useState('3d');\n  const [rotation, setRotation] = useState({ x: 0, y: 0 });\n  const [showOnImage, setShowOnImage] = useState(false);\n  const [zoom, setZoom] = useState(1.0);\n  const [pan, setPan] = useState({ x: 0, y: 0 });\n  const [isPanning, setIsPanning] = useState(false);\n  const [lastPanPos, setLastPanPos] = useState({ x: 0, y: 0 });\n\n  const calculateBounds = useCallback((points) => {\n    if (points.length === 0) return { minX: 0, maxX: 0, minY: 0, maxY: 0, centerX: 0, centerY: 0, width: 0, height: 0 };\n\n    const xCoords = points.map(p => p[0]);\n    const yCoords = points.map(p => p[1]);\n    \n    const minX = Math.min(...xCoords);\n    const maxX = Math.max(...xCoords);\n    const minY = Math.min(...yCoords);\n    const maxY = Math.max(...yCoords);\n\n    return {\n      minX,\n      maxX,\n      minY,\n      maxY,\n      centerX: (minX + maxX) / 2,\n      centerY: (minY + maxY) / 2,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  }, []);\n\n  const drawAxes = useCallback((ctx, centerX, centerY, scale) => {\n    ctx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n    ctx.lineWidth = 1;\n    \n    // X axis\n    ctx.beginPath();\n    ctx.moveTo(centerX - 50, centerY);\n    ctx.lineTo(centerX + 50, centerY);\n    ctx.stroke();\n    \n    // Y axis\n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY - 50);\n    ctx.lineTo(centerX, centerY + 50);\n    ctx.stroke();\n    \n    // Labels\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.6)';\n    ctx.font = '8px Inter, sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('X', centerX + 55, centerY + 3);\n    ctx.fillText('Y', centerX + 3, centerY - 55);\n  }, []);\n\n  const drawPathOverlay = useCallback((ctx, rect, imgX = 0, imgY = 0, imgWidth = 0, imgHeight = 0) => {\n\n    const points = pathData.visualization.points;\n    const connections = pathData.visualization.connections;\n\n    if (!points || points.length === 0) return;\n\n    // Calculate bounds\n    const bounds = calculateBounds(points);\n    const scale = Math.min(rect.width, rect.height) / Math.max(bounds.width, bounds.height) * 0.8;\n    const centerX = rect.width / 2;\n    const centerY = rect.height / 2;\n\n    // Project 3D points to 2D with view mode consideration\n    const projectedPoints = points.map(point => {\n      const [x, y, z] = point;\n      \n      if (showOnImage && analysisResult && analysisResult.image_url) {\n        // When showing on image, map path coordinates to image space\n        // Path coordinates are in image pixel space (x, y, z=0)\n        // We need to scale them to match the displayed image size\n        \n        // Get the original image dimensions from the analysis result\n        const originalWidth = analysisResult.metadata?.image_size?.[1] || bounds.width;\n        const originalHeight = analysisResult.metadata?.image_size?.[0] || bounds.height;\n        \n        // Scale the path coordinates to match the displayed image\n        const scaleX = imgWidth / originalWidth;\n        const scaleY = imgHeight / originalHeight;\n        \n        // Apply scaling and positioning\n        const imageX = imgX + x * scaleX;\n        const imageY = imgY + y * scaleY;\n        \n        return { x: imageX, y: imageY, z: 0 };\n      }\n      \n      if (viewMode === '2d') {\n        // Simple 2D projection (ignore Z) with zoom and pan\n        const projectedX = centerX + (x - bounds.centerX) * scale * zoom + pan.x;\n        const projectedY = centerY + (y - bounds.centerY) * scale * zoom + pan.y;\n        return { x: projectedX, y: projectedY, z: 0 };\n      } else {\n        // 3D perspective projection with rotation (improved) and zoom\n        const cosX = Math.cos(rotation.x * 0.5);\n        const sinX = Math.sin(rotation.x * 0.5);\n        const cosY = Math.cos(rotation.y * 0.5);\n        const sinY = Math.sin(rotation.y * 0.5);\n        \n        // Apply rotation with better scaling\n        const rotatedX = x * cosY - z * sinY;\n        const rotatedY = y * cosX + (x * sinY + z * cosY) * sinX;\n        const rotatedZ = (x * sinY + z * cosY) * cosX - y * sinX;\n        \n        // Perspective projection with better depth handling and zoom\n        const perspective = 1000;\n        const depth = Math.max(1, rotatedZ + perspective);\n        const projectedX = centerX + (rotatedX / depth) * scale * 200 * zoom + pan.x;\n        const projectedY = centerY + (rotatedY / depth) * scale * 200 * zoom + pan.y;\n        \n        return { x: projectedX, y: projectedY, z: rotatedZ };\n      }\n    });\n\n    // Draw connections\n    ctx.strokeStyle = 'rgba(0, 255, 255, 0.6)';\n    ctx.lineWidth = 2;\n    ctx.setLineDash([5, 5]);\n    \n    for (const connection of connections) {\n      const [startIdx, endIdx] = connection;\n      if (startIdx < projectedPoints.length && endIdx < projectedPoints.length) {\n        const start = projectedPoints[startIdx];\n        const end = projectedPoints[endIdx];\n        \n        ctx.beginPath();\n        ctx.moveTo(start.x, start.y);\n        ctx.lineTo(end.x, end.y);\n        ctx.stroke();\n      }\n    }\n\n    // Reset line dash\n    ctx.setLineDash([]);\n\n    // Draw points\n    projectedPoints.forEach((point, index) => {\n      const isStart = index === 0;\n      const isEnd = index === projectedPoints.length - 1;\n      const metadata = pathData.visualization.metadata?.[index - 1]; // -1 because start point has no metadata\n      \n\n      let color, radius;\n      \n      if (isStart) {\n        color = '#00ff00';\n        radius = 8;\n      } else if (isEnd && projectedPoints.length > 2) {\n        color = '#ff0000';\n        radius = 8;\n      } else {\n        // Intermediate debris points\n        const isFeasible = metadata?.feasible;\n        color = isFeasible ? '#00ffff' : '#ff8800';\n        radius = 6;\n      }\n\n      ctx.fillStyle = color;\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, radius, 0, Math.PI * 2);\n      ctx.fill();\n\n      // Draw labels\n      if (isStart || isEnd || (metadata && metadata.feasible)) {\n        ctx.fillStyle = color;\n        ctx.font = '10px Inter, sans-serif';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'bottom';\n        \n        const label = isStart ? 'START' : \n                     isEnd && projectedPoints.length > 2 ? 'END' :\n                     metadata ? `D${metadata.debris_id || index}` :\n                     `D${index}`;\n        \n        ctx.fillText(label, point.x, point.y - radius - 10);\n      }\n    });\n\n    // Draw coordinate axes (only in 3D mode and not on image)\n    if (viewMode === '3d' && !showOnImage) {\n      drawAxes(ctx, centerX, centerY, scale);\n    }\n  }, [pathData, viewMode, rotation, showOnImage, zoom, pan, analysisResult, calculateBounds, drawAxes]);\n\n  const drawPath = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !pathData.visualization) return;\n\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    const dpr = window.devicePixelRatio || 1;\n    canvas.width = rect.width * dpr;\n    canvas.height = rect.height * dpr;\n    ctx.scale(dpr, dpr);\n    canvas.style.width = rect.width + 'px';\n    canvas.style.height = rect.height + 'px';\n\n        // Clear canvas or draw background image\n        if (showOnImage && analysisResult && analysisResult.image_url) {\n          // Draw the original image as background with zoom and pan\n          const img = new Image();\n          img.onload = () => {\n            // Calculate image dimensions with zoom\n            const imgWidth = img.width * zoom;\n            const imgHeight = img.height * zoom;\n            \n            // Calculate image position with pan\n            const imgX = (rect.width - imgWidth) / 2 + pan.x;\n            const imgY = (rect.height - imgHeight) / 2 + pan.y;\n            \n            // Clear canvas\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\n            ctx.fillRect(0, 0, rect.width, rect.height);\n            \n            // Draw image with zoom and pan\n            ctx.drawImage(img, imgX, imgY, imgWidth, imgHeight);\n            \n            // Draw path overlay with same zoom and pan\n            drawPathOverlay(ctx, rect, imgX, imgY, imgWidth, imgHeight);\n          };\n          img.src = analysisResult.image_url;\n          return;\n        } else {\n          // Clear canvas with background\n          ctx.fillStyle = viewMode === '3d' ? 'rgba(0, 0, 20, 0.3)' : 'rgba(0, 0, 0, 0.1)';\n          ctx.fillRect(0, 0, rect.width, rect.height);\n        }\n\n    drawPathOverlay(ctx, rect);\n  }, [pathData, viewMode, showOnImage, zoom, pan, analysisResult, drawPathOverlay]);\n\n  useEffect(() => {\n    if (pathData && pathData.visualization) {\n      drawPath();\n    }\n  }, [pathData, viewMode, rotation, showOnImage, zoom, pan, drawPath]);\n\n  // Add non-passive wheel event listener\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const handleWheel = (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      const delta = e.deltaY > 0 ? 0.9 : 1.1;\n      setZoom(prev => Math.max(0.1, Math.min(10, prev * delta)));\n    };\n\n    // Add event listener with passive: false\n    canvas.addEventListener('wheel', handleWheel, { passive: false });\n\n    return () => {\n      canvas.removeEventListener('wheel', handleWheel);\n    };\n  }, []);\n\n  const handleCanvasMouseMove = (e) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const rect = canvas.getBoundingClientRect();\n    \n    if (isPanning) {\n      // Handle panning\n      const deltaX = e.clientX - lastPanPos.x;\n      const deltaY = e.clientY - lastPanPos.y;\n      \n      setPan(prev => ({\n        x: prev.x + deltaX,\n        y: prev.y + deltaY\n      }));\n      \n      setLastPanPos({ x: e.clientX, y: e.clientY });\n    } else if (viewMode === '3d' && !showOnImage) {\n      // Handle 3D rotation\n      const x = (e.clientX - rect.left) / rect.width;\n      const y = (e.clientY - rect.top) / rect.height;\n      \n      setRotation({\n        x: (y - 0.5) * Math.PI,\n        y: (x - 0.5) * Math.PI\n      });\n    }\n  };\n\n  const handleCanvasMouseDown = (e) => {\n    if (e.button === 1 || (e.button === 0 && e.ctrlKey)) {\n      // Middle mouse or Ctrl+left click for panning\n      setIsPanning(true);\n      setLastPanPos({ x: e.clientX, y: e.clientY });\n      e.preventDefault();\n    } else if (e.button === 0 && viewMode === '3d' && !showOnImage) {\n      // Left click for 3D rotation\n      // setIsDragging(true);\n      // setLastMousePos({ x: e.clientX, y: e.clientY });\n    }\n  };\n\n  const handleCanvasMouseUp = () => {\n    // setIsDragging(false);\n    setIsPanning(false);\n  };\n\n  const handleCanvasWheel = useCallback((e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const delta = e.deltaY > 0 ? 0.9 : 1.1;\n    setZoom(prev => Math.max(0.1, Math.min(10, prev * delta)));\n  }, []);\n\n  const resetView = () => {\n    setZoom(1.0);\n    setPan({ x: 0, y: 0 });\n    setRotation({ x: 0, y: 0 });\n  };\n\n  if (!pathData || !pathData.visualization) {\n    return (\n      <VisualizationContainer>\n        <VisualizationHeader>\n          <VisualizationTitle>🗺️ Path Visualization</VisualizationTitle>\n        </VisualizationHeader>\n        <div style={{ textAlign: 'center', padding: '40px', color: 'rgba(255, 255, 255, 0.5)' }}>\n          No path data available\n        </div>\n      </VisualizationContainer>\n    );\n  }\n\n  const metrics = pathData.metrics || {};\n\n  return (\n    <VisualizationContainer>\n      <VisualizationHeader>\n        <VisualizationTitle>🗺️ Path Visualization</VisualizationTitle>\n        <ViewControls>\n          <ViewButton \n            active={viewMode === '3d'} \n            onClick={() => setViewMode('3d')}\n          >\n            3D View\n          </ViewButton>\n          <ViewButton \n            active={viewMode === '2d'} \n            onClick={() => setViewMode('2d')}\n          >\n            2D View\n          </ViewButton>\n          <ViewButton \n            active={showOnImage} \n            onClick={() => setShowOnImage(!showOnImage)}\n          >\n            📸 On Image\n          </ViewButton>\n          <ViewButton \n            onClick={() => setZoom(prev => Math.min(10, prev * 1.2))}\n            title=\"Zoom In\"\n          >\n            🔍+\n          </ViewButton>\n          <ViewButton \n            onClick={() => setZoom(prev => Math.max(0.1, prev * 0.8))}\n            title=\"Zoom Out\"\n          >\n            🔍-\n          </ViewButton>\n          <ViewButton \n            onClick={resetView}\n            title=\"Reset View\"\n          >\n            🏠 Reset\n          </ViewButton>\n        </ViewControls>\n      </VisualizationHeader>\n\n      <CanvasContainer>\n        <Canvas\n          ref={canvasRef}\n          onMouseMove={handleCanvasMouseMove}\n          onMouseDown={handleCanvasMouseDown}\n          onMouseUp={handleCanvasMouseUp}\n          onWheel={handleCanvasWheel}\n          style={{ touchAction: 'none' }}\n        />\n      </CanvasContainer>\n\n      <Legend>\n        <LegendItem>\n          <LegendColor color=\"#00ff00\" />\n          <span>Start Position</span>\n        </LegendItem>\n        <LegendItem>\n          <LegendColor color=\"#00ffff\" />\n          <span>Feasible Debris</span>\n        </LegendItem>\n        <LegendItem>\n          <LegendColor color=\"#ffaa00\" />\n          <span>Non-feasible</span>\n        </LegendItem>\n        <LegendItem>\n          <LegendColor color=\"#ff0000\" />\n          <span>End Position</span>\n        </LegendItem>\n        <LegendItem>\n          <div style={{ width: '12px', height: '2px', background: 'rgba(0, 255, 255, 0.6)', margin: '5px 0' }}></div>\n          <span>Path Connection</span>\n        </LegendItem>\n        <LegendItem>\n          <span>🔍 Zoom: {Math.round(zoom * 100)}%</span>\n        </LegendItem>\n        <LegendItem>\n          <span>Controls: Scroll=Zoom, Ctrl+Drag=Pan, Drag=Rotate(3D)</span>\n        </LegendItem>\n        {showOnImage && (\n          <LegendItem>\n            <span>📸 Image Mode: Zoom and pan work with the image</span>\n          </LegendItem>\n        )}\n      </Legend>\n\n      <PathInfo>\n        <InfoCard>\n          <InfoLabel>Path Length</InfoLabel>\n          <InfoValue>{pathData.path_length || 0} steps</InfoValue>\n        </InfoCard>\n        \n        <InfoCard>\n          <InfoLabel>Total Distance</InfoLabel>\n          <InfoValue>{metrics.total_distance ? `${(metrics.total_distance / 1000).toFixed(1)} km` : '0 km'}</InfoValue>\n        </InfoCard>\n        \n        <InfoCard>\n          <InfoLabel>Mission Time</InfoLabel>\n          <InfoValue>{metrics.total_time ? `${(metrics.total_time / 3600).toFixed(1)} hours` : '0 hours'}</InfoValue>\n        </InfoCard>\n        \n        <InfoCard>\n          <InfoLabel>Fuel Required</InfoLabel>\n          <InfoValue>{metrics.total_fuel ? `${metrics.total_fuel.toFixed(1)} kg` : '0 kg'}</InfoValue>\n        </InfoCard>\n      </PathInfo>\n\n      <PathSteps>\n        <h4 style={{ color: '#ffffff', marginBottom: '10px', fontSize: '14px' }}>\n          Path Steps:\n        </h4>\n        \n        {pathData.path?.map((step, index) => (\n          <StepItem \n            key={index}\n            color={index === 0 ? '#00ff00' : index === pathData.path.length - 1 ? '#ff0000' : '#00ffff'}\n          >\n            <strong>Step {step.step}:</strong> {index === 0 ? 'Start' : `Debris ${step.debris_id}`} \n            {step.distance_from_previous && (\n              <span style={{ float: 'right', color: 'rgba(255, 255, 255, 0.6)' }}>\n                {step.distance_from_previous.toFixed(1)}m\n              </span>\n            )}\n          </StepItem>\n        ))}\n      </PathSteps>\n    </VisualizationContainer>\n  );\n}\n\nexport default PathVisualization;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/parthzanwar/Desktop/Space Apps/public/src/components/ORCAVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n  background: #000;\n  overflow: hidden;\n`;\n_c = Container;\nconst ControlPanel = styled.div`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  background: rgba(0, 0, 0, 0.8);\n  padding: 20px;\n  border-radius: 10px;\n  color: white;\n  z-index: 100;\n  min-width: 300px;\n`;\n_c2 = ControlPanel;\nconst ControlGroup = styled.div`\n  margin-bottom: 15px;\n`;\n_c3 = ControlGroup;\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 5px;\n  font-size: 14px;\n  color: #00d4ff;\n`;\n_c4 = Label;\nconst Button = styled.button`\n  background: linear-gradient(135deg, #00d4ff 0%, #0099cc 100%);\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  font-size: 12px;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(0, 212, 255, 0.4);\n  }\n\n  &:disabled {\n    background: rgba(255, 255, 255, 0.1);\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n_c5 = Button;\nconst Slider = styled.input`\n  width: 100%;\n  margin: 10px 0;\n`;\n_c6 = Slider;\nconst InfoPanel = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  background: rgba(0, 0, 0, 0.8);\n  padding: 20px;\n  border-radius: 10px;\n  color: white;\n  z-index: 100;\n  min-width: 250px;\n`;\n_c7 = InfoPanel;\nconst Metric = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  font-size: 14px;\n`;\n_c8 = Metric;\nconst MetricLabel = styled.span`\n  color: #00d4ff;\n`;\n_c9 = MetricLabel;\nconst MetricValue = styled.span`\n  color: white;\n  font-weight: bold;\n`;\n_c0 = MetricValue;\nconst StatusIndicator = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 20px;\n  background: rgba(0, 0, 0, 0.8);\n  padding: 15px;\n  border-radius: 10px;\n  color: white;\n  z-index: 100;\n`;\n_c1 = StatusIndicator;\nconst ORCAVisualization = () => {\n  _s();\n  const mountRef = useRef(null);\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const controlsRef = useRef(null);\n  const animationRef = useRef(null);\n  const [debrisData, setDebrisData] = useState(null);\n  const [missionData, setMissionData] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [selectedDebris, setSelectedDebris] = useState(null);\n  const [viewMode, setViewMode] = useState('earth');\n  const [metrics, setMetrics] = useState({\n    totalDebris: 0,\n    orcaFeasible: 0,\n    materialsRecovered: 0,\n    partsManufactured: 0,\n    costSavings: 0\n  });\n  useEffect(() => {\n    loadData();\n    initializeScene();\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n      if (rendererRef.current) {\n        rendererRef.current.dispose();\n      }\n    };\n  }, []);\n  const loadData = async () => {\n    try {\n      var _missionData$parts_ma, _missionData$economic;\n      // Load orbital debris data\n      const debrisResponse = await fetch('/api/orbital-debris-data');\n      const debrisData = await debrisResponse.json();\n      setDebrisData(debrisData);\n\n      // Load mission data\n      const missionResponse = await fetch('/api/orca-mission-data');\n      const missionData = await missionResponse.json();\n      setMissionData(missionData);\n\n      // Update metrics\n      setMetrics({\n        totalDebris: debrisData.metadata.total_objects,\n        orcaFeasible: debrisData.debris_objects.filter(d => d.feasible).length,\n        materialsRecovered: missionData.materials_recovered || 0,\n        partsManufactured: ((_missionData$parts_ma = missionData.parts_manufactured) === null || _missionData$parts_ma === void 0 ? void 0 : _missionData$parts_ma.length) || 0,\n        costSavings: ((_missionData$economic = missionData.economic_impact) === null || _missionData$economic === void 0 ? void 0 : _missionData$economic.net_benefit_usd) || 0\n      });\n    } catch (error) {\n      console.error('Error loading data:', error);\n    }\n  };\n  const initializeScene = () => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(75, mountRef.current.clientWidth / mountRef.current.clientHeight, 0.1, 10000);\n    camera.position.set(0, 0, 1000);\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\n    renderer.setClearColor(0x000011);\n    mountRef.current.appendChild(renderer.domElement);\n    rendererRef.current = renderer;\n\n    // Controls\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controlsRef.current = controls;\n\n    // Lighting\n    const ambientLight = new THREE.AmbientLight(0x404040, 0.6);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n    directionalLight.position.set(1000, 1000, 1000);\n    scene.add(directionalLight);\n\n    // Create Earth\n    createEarth(scene);\n\n    // Start animation loop\n    animate();\n  };\n  const createEarth = scene => {\n    // Earth geometry\n    const earthGeometry = new THREE.SphereGeometry(100, 64, 64);\n\n    // Earth material with texture\n    const earthMaterial = new THREE.MeshPhongMaterial({\n      color: 0x2563eb,\n      shininess: 100\n    });\n    const earth = new THREE.Mesh(earthGeometry, earthMaterial);\n    scene.add(earth);\n\n    // Add atmosphere\n    const atmosphereGeometry = new THREE.SphereGeometry(105, 32, 32);\n    const atmosphereMaterial = new THREE.MeshPhongMaterial({\n      color: 0x00d4ff,\n      transparent: true,\n      opacity: 0.1\n    });\n    const atmosphere = new THREE.Mesh(atmosphereGeometry, atmosphereMaterial);\n    scene.add(atmosphere);\n\n    // Add clouds\n    const cloudGeometry = new THREE.SphereGeometry(102, 32, 32);\n    const cloudMaterial = new THREE.MeshPhongMaterial({\n      color: 0xffffff,\n      transparent: true,\n      opacity: 0.3\n    });\n    const clouds = new THREE.Mesh(cloudGeometry, cloudMaterial);\n    scene.add(clouds);\n  };\n  const createDebrisObjects = (scene, debrisData) => {\n    if (!debrisData) return;\n    const debrisGroup = new THREE.Group();\n    debrisData.debris_objects.forEach((debris, index) => {\n      // Create debris geometry based on size\n      const size = Math.max(0.5, Math.min(5, debris.size / 10));\n      const geometry = new THREE.SphereGeometry(size, 8, 8);\n\n      // Create material based on feasibility\n      const color = debris.feasible ? 0x00ff00 : 0xff0000;\n      const material = new THREE.MeshBasicMaterial({\n        color: color,\n        transparent: true,\n        opacity: 0.8\n      });\n      const debrisMesh = new THREE.Mesh(geometry, material);\n\n      // Position debris based on orbital parameters\n      const altitude = debris.altitude + 100; // Earth radius + altitude\n      const angle = index / debrisData.debris_objects.length * Math.PI * 2;\n      debrisMesh.position.set(Math.cos(angle) * altitude, Math.sin(angle) * altitude * 0.3, Math.sin(angle) * altitude * 0.7);\n\n      // Add user data for interaction\n      debrisMesh.userData = {\n        type: 'debris',\n        debrisData: debris\n      };\n      debrisGroup.add(debrisMesh);\n    });\n    scene.add(debrisGroup);\n  };\n  const createORCADrone = scene => {\n    // ORCA drone geometry\n    const droneGeometry = new THREE.BoxGeometry(2, 1, 3);\n    const droneMaterial = new THREE.MeshPhongMaterial({\n      color: 0xff6b6b\n    });\n    const drone = new THREE.Mesh(droneGeometry, droneMaterial);\n\n    // Position drone\n    drone.position.set(0, 0, 200);\n    drone.userData = {\n      type: 'orca_drone'\n    };\n    scene.add(drone);\n    return drone;\n  };\n  const animate = () => {\n    animationRef.current = requestAnimationFrame(animate);\n    if (controlsRef.current) {\n      controlsRef.current.update();\n    }\n\n    // Rotate Earth (only in Earth view)\n    if (viewMode === 'earth') {\n      var _sceneRef$current;\n      const earth = (_sceneRef$current = sceneRef.current) === null || _sceneRef$current === void 0 ? void 0 : _sceneRef$current.children.find(child => child.geometry.type === 'SphereGeometry');\n      if (earth) {\n        earth.rotation.y += 0.005;\n      }\n    }\n\n    // Update debris positions\n    if (debrisData) {\n      updateDebrisPositions();\n    }\n\n    // Update camera position based on view mode\n    updateCameraPosition();\n    if (rendererRef.current && sceneRef.current) {\n      rendererRef.current.render(sceneRef.current, sceneRef.current.children.find(child => child.type === 'PerspectiveCamera'));\n    }\n  };\n  const updateDebrisPositions = () => {\n    var _sceneRef$current2;\n    // Update debris orbital positions\n    const debrisGroup = (_sceneRef$current2 = sceneRef.current) === null || _sceneRef$current2 === void 0 ? void 0 : _sceneRef$current2.children.find(child => child.type === 'Group');\n    if (debrisGroup) {\n      debrisGroup.children.forEach((debris, index) => {\n        if (debris.userData.type === 'debris') {\n          const time = Date.now() * 0.0001;\n          const angle = index / debrisGroup.children.length * Math.PI * 2 + time;\n          const altitude = debris.userData.debrisData.altitude + 100;\n          debris.position.set(Math.cos(angle) * altitude, Math.sin(angle) * altitude * 0.3, Math.sin(angle) * altitude * 0.7);\n        }\n      });\n    }\n  };\n  const handleDebrisClick = event => {\n    const mouse = new THREE.Vector2();\n    mouse.x = event.clientX / window.innerWidth * 2 - 1;\n    mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    const raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, sceneRef.current.children.find(child => child.type === 'PerspectiveCamera'));\n    const intersects = raycaster.intersectObjects(sceneRef.current.children, true);\n    if (intersects.length > 0) {\n      const intersected = intersects[0].object;\n      if (intersected.userData.type === 'debris') {\n        setSelectedDebris(intersected.userData.debrisData);\n      }\n    }\n  };\n  const startMission = () => {\n    setIsPlaying(true);\n    // Start ORCA mission simulation\n    if (missionData) {\n      simulateORCAMission();\n    }\n  };\n  const simulateORCAMission = () => {\n    var _missionData$capture_;\n    // Simulate ORCA capture mission\n    let step = 0;\n    const maxSteps = ((_missionData$capture_ = missionData.capture_results) === null || _missionData$capture_ === void 0 ? void 0 : _missionData$capture_.length) || 10;\n    const missionInterval = setInterval(() => {\n      if (step >= maxSteps) {\n        setIsPlaying(false);\n        clearInterval(missionInterval);\n        return;\n      }\n\n      // Update metrics\n      const capture = missionData.capture_results[step];\n      if (capture.success) {\n        setMetrics(prev => ({\n          ...prev,\n          materialsRecovered: prev.materialsRecovered + capture.mass_recovered_kg,\n          costSavings: prev.costSavings + capture.value_recovered_usd\n        }));\n      }\n      step++;\n      setCurrentTime(step);\n    }, 2000);\n  };\n  const resetMission = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n    setMetrics({\n      totalDebris: (debrisData === null || debrisData === void 0 ? void 0 : debrisData.metadata.total_objects) || 0,\n      orcaFeasible: (debrisData === null || debrisData === void 0 ? void 0 : debrisData.debris_objects.filter(d => d.feasible).length) || 0,\n      materialsRecovered: 0,\n      partsManufactured: 0,\n      costSavings: 0\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      onClick: handleDebrisClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: '#00d4ff',\n          marginBottom: '20px'\n        },\n        children: \"\\uD83D\\uDEF0\\uFE0F ORCA Mission Control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Mission Controls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: startMission,\n          disabled: isPlaying,\n          children: \"\\uD83D\\uDE80 Start Mission\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: resetMission,\n          disabled: isPlaying,\n          children: \"\\uD83D\\uDD04 Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Time Control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          type: \"range\",\n          min: \"0\",\n          max: \"100\",\n          value: currentTime,\n          onChange: e => setCurrentTime(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"View Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setViewMode('earth'),\n          style: {\n            background: viewMode === 'earth' ? 'rgba(0, 255, 255, 0.3)' : undefined\n          },\n          children: \"\\uD83C\\uDF0D Earth View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setViewMode('satellite'),\n          style: {\n            background: viewMode === 'satellite' ? 'rgba(0, 255, 255, 0.3)' : undefined\n          },\n          children: \"\\uD83D\\uDEF0\\uFE0F Satellite View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setViewMode('data'),\n          style: {\n            background: viewMode === 'data' ? 'rgba(0, 255, 255, 0.3)' : undefined\n          },\n          children: \"\\uD83D\\uDCCA Data View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoPanel, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: '#00d4ff',\n          marginBottom: '15px'\n        },\n        children: \"\\uD83D\\uDCCA Mission Metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Metric, {\n        children: [/*#__PURE__*/_jsxDEV(MetricLabel, {\n          children: \"Total Debris:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetricValue, {\n          children: metrics.totalDebris.toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Metric, {\n        children: [/*#__PURE__*/_jsxDEV(MetricLabel, {\n          children: \"ORCA Feasible:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetricValue, {\n          children: metrics.orcaFeasible.toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Metric, {\n        children: [/*#__PURE__*/_jsxDEV(MetricLabel, {\n          children: \"Materials Recovered:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetricValue, {\n          children: [metrics.materialsRecovered.toFixed(1), \" kg\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Metric, {\n        children: [/*#__PURE__*/_jsxDEV(MetricLabel, {\n          children: \"Parts Manufactured:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetricValue, {\n          children: metrics.partsManufactured\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Metric, {\n        children: [/*#__PURE__*/_jsxDEV(MetricLabel, {\n          children: \"Cost Savings:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetricValue, {\n          children: [\"$\", metrics.costSavings.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this), selectedDebris && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          padding: '10px',\n          background: 'rgba(0, 212, 255, 0.1)',\n          borderRadius: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            color: '#00d4ff',\n            marginBottom: '10px'\n          },\n          children: \"Selected Debris\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 16\n          }, this), \" \", selectedDebris.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Material:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 16\n          }, this), \" \", selectedDebris.material]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Size:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 16\n          }, this), \" \", selectedDebris.size, \" cm\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Mass:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 16\n          }, this), \" \", selectedDebris.mass, \" kg\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Feasible:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 16\n          }, this), \" \", selectedDebris.feasible ? 'Yes' : 'No']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Priority:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 16\n          }, this), \" \", (selectedDebris.priority * 100).toFixed(1), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '10px',\n            height: '10px',\n            borderRadius: '50%',\n            backgroundColor: isPlaying ? '#00ff00' : '#ff0000'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: isPlaying ? 'Mission Active' : 'Mission Standby'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '12px',\n          marginTop: '5px'\n        },\n        children: [\"Step: \", currentTime, \" / 100\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 413,\n    columnNumber: 5\n  }, this);\n};\n_s(ORCAVisualization, \"a3v7Bc3jzfnkv48y8xgxLtCiAds=\");\n_c10 = ORCAVisualization;\nexport default ORCAVisualization;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ControlPanel\");\n$RefreshReg$(_c3, \"ControlGroup\");\n$RefreshReg$(_c4, \"Label\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"Slider\");\n$RefreshReg$(_c7, \"InfoPanel\");\n$RefreshReg$(_c8, \"Metric\");\n$RefreshReg$(_c9, \"MetricLabel\");\n$RefreshReg$(_c0, \"MetricValue\");\n$RefreshReg$(_c1, \"StatusIndicator\");\n$RefreshReg$(_c10, \"ORCAVisualization\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","THREE","OrbitControls","jsxDEV","_jsxDEV","Container","div","_c","ControlPanel","_c2","ControlGroup","_c3","Label","label","_c4","Button","button","_c5","Slider","input","_c6","InfoPanel","_c7","Metric","_c8","MetricLabel","span","_c9","MetricValue","_c0","StatusIndicator","_c1","ORCAVisualization","_s","mountRef","sceneRef","rendererRef","controlsRef","animationRef","debrisData","setDebrisData","missionData","setMissionData","isPlaying","setIsPlaying","currentTime","setCurrentTime","selectedDebris","setSelectedDebris","viewMode","setViewMode","metrics","setMetrics","totalDebris","orcaFeasible","materialsRecovered","partsManufactured","costSavings","loadData","initializeScene","current","cancelAnimationFrame","dispose","_missionData$parts_ma","_missionData$economic","debrisResponse","fetch","json","missionResponse","metadata","total_objects","debris_objects","filter","d","feasible","length","materials_recovered","parts_manufactured","economic_impact","net_benefit_usd","error","console","scene","Scene","camera","PerspectiveCamera","clientWidth","clientHeight","position","set","renderer","WebGLRenderer","antialias","setSize","setClearColor","appendChild","domElement","controls","enableDamping","dampingFactor","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","createEarth","animate","earthGeometry","SphereGeometry","earthMaterial","MeshPhongMaterial","color","shininess","earth","Mesh","atmosphereGeometry","atmosphereMaterial","transparent","opacity","atmosphere","cloudGeometry","cloudMaterial","clouds","createDebrisObjects","debrisGroup","Group","forEach","debris","index","size","Math","max","min","geometry","material","MeshBasicMaterial","debrisMesh","altitude","angle","PI","cos","sin","userData","type","createORCADrone","droneGeometry","BoxGeometry","droneMaterial","drone","requestAnimationFrame","update","_sceneRef$current","children","find","child","rotation","y","updateDebrisPositions","updateCameraPosition","render","_sceneRef$current2","time","Date","now","handleDebrisClick","event","mouse","Vector2","x","clientX","window","innerWidth","clientY","innerHeight","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","intersected","object","startMission","simulateORCAMission","_missionData$capture_","step","maxSteps","capture_results","missionInterval","setInterval","clearInterval","capture","success","prev","mass_recovered_kg","value_recovered_usd","resetMission","ref","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","disabled","value","onChange","e","parseInt","target","background","undefined","toLocaleString","toFixed","marginTop","padding","borderRadius","id","mass","priority","display","alignItems","gap","width","height","backgroundColor","fontSize","_c10","$RefreshReg$"],"sources":["/Users/parthzanwar/Desktop/Space Apps/public/src/components/ORCAVisualization.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n  background: #000;\n  overflow: hidden;\n`;\n\nconst ControlPanel = styled.div`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  background: rgba(0, 0, 0, 0.8);\n  padding: 20px;\n  border-radius: 10px;\n  color: white;\n  z-index: 100;\n  min-width: 300px;\n`;\n\nconst ControlGroup = styled.div`\n  margin-bottom: 15px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 5px;\n  font-size: 14px;\n  color: #00d4ff;\n`;\n\nconst Button = styled.button`\n  background: linear-gradient(135deg, #00d4ff 0%, #0099cc 100%);\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  font-size: 12px;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(0, 212, 255, 0.4);\n  }\n\n  &:disabled {\n    background: rgba(255, 255, 255, 0.1);\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst Slider = styled.input`\n  width: 100%;\n  margin: 10px 0;\n`;\n\nconst InfoPanel = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  background: rgba(0, 0, 0, 0.8);\n  padding: 20px;\n  border-radius: 10px;\n  color: white;\n  z-index: 100;\n  min-width: 250px;\n`;\n\nconst Metric = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  font-size: 14px;\n`;\n\nconst MetricLabel = styled.span`\n  color: #00d4ff;\n`;\n\nconst MetricValue = styled.span`\n  color: white;\n  font-weight: bold;\n`;\n\nconst StatusIndicator = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 20px;\n  background: rgba(0, 0, 0, 0.8);\n  padding: 15px;\n  border-radius: 10px;\n  color: white;\n  z-index: 100;\n`;\n\nconst ORCAVisualization = () => {\n  const mountRef = useRef(null);\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const controlsRef = useRef(null);\n  const animationRef = useRef(null);\n  \n  const [debrisData, setDebrisData] = useState(null);\n  const [missionData, setMissionData] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [selectedDebris, setSelectedDebris] = useState(null);\n  const [viewMode, setViewMode] = useState('earth');\n  const [metrics, setMetrics] = useState({\n    totalDebris: 0,\n    orcaFeasible: 0,\n    materialsRecovered: 0,\n    partsManufactured: 0,\n    costSavings: 0\n  });\n\n  useEffect(() => {\n    loadData();\n    initializeScene();\n    \n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n      if (rendererRef.current) {\n        rendererRef.current.dispose();\n      }\n    };\n  }, []);\n\n  const loadData = async () => {\n    try {\n      // Load orbital debris data\n      const debrisResponse = await fetch('/api/orbital-debris-data');\n      const debrisData = await debrisResponse.json();\n      setDebrisData(debrisData);\n\n      // Load mission data\n      const missionResponse = await fetch('/api/orca-mission-data');\n      const missionData = await missionResponse.json();\n      setMissionData(missionData);\n\n      // Update metrics\n      setMetrics({\n        totalDebris: debrisData.metadata.total_objects,\n        orcaFeasible: debrisData.debris_objects.filter(d => d.feasible).length,\n        materialsRecovered: missionData.materials_recovered || 0,\n        partsManufactured: missionData.parts_manufactured?.length || 0,\n        costSavings: missionData.economic_impact?.net_benefit_usd || 0\n      });\n    } catch (error) {\n      console.error('Error loading data:', error);\n    }\n  };\n\n  const initializeScene = () => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    sceneRef.current = scene;\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      mountRef.current.clientWidth / mountRef.current.clientHeight,\n      0.1,\n      10000\n    );\n    camera.position.set(0, 0, 1000);\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\n    renderer.setClearColor(0x000011);\n    mountRef.current.appendChild(renderer.domElement);\n    rendererRef.current = renderer;\n\n    // Controls\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n    controlsRef.current = controls;\n\n    // Lighting\n    const ambientLight = new THREE.AmbientLight(0x404040, 0.6);\n    scene.add(ambientLight);\n\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n    directionalLight.position.set(1000, 1000, 1000);\n    scene.add(directionalLight);\n\n    // Create Earth\n    createEarth(scene);\n\n    // Start animation loop\n    animate();\n  };\n\n  const createEarth = (scene) => {\n    // Earth geometry\n    const earthGeometry = new THREE.SphereGeometry(100, 64, 64);\n    \n    // Earth material with texture\n    const earthMaterial = new THREE.MeshPhongMaterial({\n      color: 0x2563eb,\n      shininess: 100\n    });\n    \n    const earth = new THREE.Mesh(earthGeometry, earthMaterial);\n    scene.add(earth);\n\n    // Add atmosphere\n    const atmosphereGeometry = new THREE.SphereGeometry(105, 32, 32);\n    const atmosphereMaterial = new THREE.MeshPhongMaterial({\n      color: 0x00d4ff,\n      transparent: true,\n      opacity: 0.1\n    });\n    const atmosphere = new THREE.Mesh(atmosphereGeometry, atmosphereMaterial);\n    scene.add(atmosphere);\n\n    // Add clouds\n    const cloudGeometry = new THREE.SphereGeometry(102, 32, 32);\n    const cloudMaterial = new THREE.MeshPhongMaterial({\n      color: 0xffffff,\n      transparent: true,\n      opacity: 0.3\n    });\n    const clouds = new THREE.Mesh(cloudGeometry, cloudMaterial);\n    scene.add(clouds);\n  };\n\n  const createDebrisObjects = (scene, debrisData) => {\n    if (!debrisData) return;\n\n    const debrisGroup = new THREE.Group();\n    \n    debrisData.debris_objects.forEach((debris, index) => {\n      // Create debris geometry based on size\n      const size = Math.max(0.5, Math.min(5, debris.size / 10));\n      const geometry = new THREE.SphereGeometry(size, 8, 8);\n      \n      // Create material based on feasibility\n      const color = debris.feasible ? 0x00ff00 : 0xff0000;\n      const material = new THREE.MeshBasicMaterial({ \n        color: color,\n        transparent: true,\n        opacity: 0.8\n      });\n      \n      const debrisMesh = new THREE.Mesh(geometry, material);\n      \n      // Position debris based on orbital parameters\n      const altitude = debris.altitude + 100; // Earth radius + altitude\n      const angle = (index / debrisData.debris_objects.length) * Math.PI * 2;\n      \n      debrisMesh.position.set(\n        Math.cos(angle) * altitude,\n        Math.sin(angle) * altitude * 0.3,\n        Math.sin(angle) * altitude * 0.7\n      );\n      \n      // Add user data for interaction\n      debrisMesh.userData = {\n        type: 'debris',\n        debrisData: debris\n      };\n      \n      debrisGroup.add(debrisMesh);\n    });\n    \n    scene.add(debrisGroup);\n  };\n\n  const createORCADrone = (scene) => {\n    // ORCA drone geometry\n    const droneGeometry = new THREE.BoxGeometry(2, 1, 3);\n    const droneMaterial = new THREE.MeshPhongMaterial({ color: 0xff6b6b });\n    const drone = new THREE.Mesh(droneGeometry, droneMaterial);\n    \n    // Position drone\n    drone.position.set(0, 0, 200);\n    drone.userData = { type: 'orca_drone' };\n    \n    scene.add(drone);\n    return drone;\n  };\n\n  const animate = () => {\n    animationRef.current = requestAnimationFrame(animate);\n    \n    if (controlsRef.current) {\n      controlsRef.current.update();\n    }\n    \n    // Rotate Earth (only in Earth view)\n    if (viewMode === 'earth') {\n      const earth = sceneRef.current?.children.find(child => child.geometry.type === 'SphereGeometry');\n      if (earth) {\n        earth.rotation.y += 0.005;\n      }\n    }\n    \n    // Update debris positions\n    if (debrisData) {\n      updateDebrisPositions();\n    }\n    \n    // Update camera position based on view mode\n    updateCameraPosition();\n    \n    if (rendererRef.current && sceneRef.current) {\n      rendererRef.current.render(sceneRef.current, sceneRef.current.children.find(child => child.type === 'PerspectiveCamera'));\n    }\n  };\n\n  const updateDebrisPositions = () => {\n    // Update debris orbital positions\n    const debrisGroup = sceneRef.current?.children.find(child => child.type === 'Group');\n    if (debrisGroup) {\n      debrisGroup.children.forEach((debris, index) => {\n        if (debris.userData.type === 'debris') {\n          const time = Date.now() * 0.0001;\n          const angle = (index / debrisGroup.children.length) * Math.PI * 2 + time;\n          const altitude = debris.userData.debrisData.altitude + 100;\n          \n          debris.position.set(\n            Math.cos(angle) * altitude,\n            Math.sin(angle) * altitude * 0.3,\n            Math.sin(angle) * altitude * 0.7\n          );\n        }\n      });\n    }\n  };\n\n  const handleDebrisClick = (event) => {\n    const mouse = new THREE.Vector2();\n    mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n    mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n    const raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, sceneRef.current.children.find(child => child.type === 'PerspectiveCamera'));\n\n    const intersects = raycaster.intersectObjects(sceneRef.current.children, true);\n    \n    if (intersects.length > 0) {\n      const intersected = intersects[0].object;\n      if (intersected.userData.type === 'debris') {\n        setSelectedDebris(intersected.userData.debrisData);\n      }\n    }\n  };\n\n  const startMission = () => {\n    setIsPlaying(true);\n    // Start ORCA mission simulation\n    if (missionData) {\n      simulateORCAMission();\n    }\n  };\n\n  const simulateORCAMission = () => {\n    // Simulate ORCA capture mission\n    let step = 0;\n    const maxSteps = missionData.capture_results?.length || 10;\n    \n    const missionInterval = setInterval(() => {\n      if (step >= maxSteps) {\n        setIsPlaying(false);\n        clearInterval(missionInterval);\n        return;\n      }\n      \n      // Update metrics\n      const capture = missionData.capture_results[step];\n      if (capture.success) {\n        setMetrics(prev => ({\n          ...prev,\n          materialsRecovered: prev.materialsRecovered + capture.mass_recovered_kg,\n          costSavings: prev.costSavings + capture.value_recovered_usd\n        }));\n      }\n      \n      step++;\n      setCurrentTime(step);\n    }, 2000);\n  };\n\n  const resetMission = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n    setMetrics({\n      totalDebris: debrisData?.metadata.total_objects || 0,\n      orcaFeasible: debrisData?.debris_objects.filter(d => d.feasible).length || 0,\n      materialsRecovered: 0,\n      partsManufactured: 0,\n      costSavings: 0\n    });\n  };\n\n  return (\n    <Container>\n      <div ref={mountRef} onClick={handleDebrisClick} />\n      \n      <ControlPanel>\n        <h3 style={{ color: '#00d4ff', marginBottom: '20px' }}>🛰️ ORCA Mission Control</h3>\n        \n        <ControlGroup>\n          <Label>Mission Controls</Label>\n          <Button onClick={startMission} disabled={isPlaying}>\n            🚀 Start Mission\n          </Button>\n          <Button onClick={resetMission} disabled={isPlaying}>\n            🔄 Reset\n          </Button>\n        </ControlGroup>\n        \n        <ControlGroup>\n          <Label>Time Control</Label>\n          <Slider\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            value={currentTime}\n            onChange={(e) => setCurrentTime(parseInt(e.target.value))}\n          />\n        </ControlGroup>\n        \n        <ControlGroup>\n          <Label>View Options</Label>\n          <Button \n            onClick={() => setViewMode('earth')}\n            style={{ background: viewMode === 'earth' ? 'rgba(0, 255, 255, 0.3)' : undefined }}\n          >\n            🌍 Earth View\n          </Button>\n          <Button \n            onClick={() => setViewMode('satellite')}\n            style={{ background: viewMode === 'satellite' ? 'rgba(0, 255, 255, 0.3)' : undefined }}\n          >\n            🛰️ Satellite View\n          </Button>\n          <Button \n            onClick={() => setViewMode('data')}\n            style={{ background: viewMode === 'data' ? 'rgba(0, 255, 255, 0.3)' : undefined }}\n          >\n            📊 Data View\n          </Button>\n        </ControlGroup>\n      </ControlPanel>\n      \n      <InfoPanel>\n        <h3 style={{ color: '#00d4ff', marginBottom: '15px' }}>📊 Mission Metrics</h3>\n        \n        <Metric>\n          <MetricLabel>Total Debris:</MetricLabel>\n          <MetricValue>{metrics.totalDebris.toLocaleString()}</MetricValue>\n        </Metric>\n        \n        <Metric>\n          <MetricLabel>ORCA Feasible:</MetricLabel>\n          <MetricValue>{metrics.orcaFeasible.toLocaleString()}</MetricValue>\n        </Metric>\n        \n        <Metric>\n          <MetricLabel>Materials Recovered:</MetricLabel>\n          <MetricValue>{metrics.materialsRecovered.toFixed(1)} kg</MetricValue>\n        </Metric>\n        \n        <Metric>\n          <MetricLabel>Parts Manufactured:</MetricLabel>\n          <MetricValue>{metrics.partsManufactured}</MetricValue>\n        </Metric>\n        \n        <Metric>\n          <MetricLabel>Cost Savings:</MetricLabel>\n          <MetricValue>${metrics.costSavings.toLocaleString()}</MetricValue>\n        </Metric>\n        \n        {selectedDebris && (\n          <div style={{ marginTop: '20px', padding: '10px', background: 'rgba(0, 212, 255, 0.1)', borderRadius: '5px' }}>\n            <h4 style={{ color: '#00d4ff', marginBottom: '10px' }}>Selected Debris</h4>\n            <p><strong>ID:</strong> {selectedDebris.id}</p>\n            <p><strong>Material:</strong> {selectedDebris.material}</p>\n            <p><strong>Size:</strong> {selectedDebris.size} cm</p>\n            <p><strong>Mass:</strong> {selectedDebris.mass} kg</p>\n            <p><strong>Feasible:</strong> {selectedDebris.feasible ? 'Yes' : 'No'}</p>\n            <p><strong>Priority:</strong> {(selectedDebris.priority * 100).toFixed(1)}%</p>\n          </div>\n        )}\n      </InfoPanel>\n      \n      <StatusIndicator>\n        <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\n          <div style={{ \n            width: '10px', \n            height: '10px', \n            borderRadius: '50%', \n            backgroundColor: isPlaying ? '#00ff00' : '#ff0000' \n          }} />\n          <span>{isPlaying ? 'Mission Active' : 'Mission Standby'}</span>\n        </div>\n        <div style={{ fontSize: '12px', marginTop: '5px' }}>\n          Step: {currentTime} / 100\n        </div>\n      </StatusIndicator>\n    </Container>\n  );\n};\n\nexport default ORCAVisualization;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/parthzanwar/Desktop/Space Apps/public/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14;import React,{useRef,useEffect,useState,useCallback}from'react';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const VisualizationContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background: rgba(255, 255, 255, 0.05);\\n  border-radius: 15px;\\n  padding: 25px;\\n  backdrop-filter: blur(10px);\\n  border: 1px solid rgba(255, 255, 255, 0.1);\\n\"])));const VisualizationHeader=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  margin-bottom: 20px;\\n\"])));const VisualizationTitle=styled.h3(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  font-size: 18px;\\n  font-weight: 600;\\n  color: #ffffff;\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n\"])));const ViewControls=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: flex;\\n  gap: 10px;\\n\"])));const ViewButton=styled.button(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  border: 1px solid \",\";\\n  padding: 6px 12px;\\n  border-radius: 15px;\\n  color: #ffffff;\\n  font-size: 11px;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n  \\n  &:hover {\\n    background: rgba(0, 255, 255, 0.2);\\n    border-color: #00ffff;\\n  }\\n\"])),props=>props.active?'rgba(0, 255, 255, 0.2)':'rgba(255, 255, 255, 0.1)',props=>props.active?'#00ffff':'rgba(255, 255, 255, 0.3)');const CanvasContainer=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  position: relative;\\n  width: 100%;\\n  height: 400px;\\n  background: rgba(0, 0, 0, 0.3);\\n  border-radius: 10px;\\n  overflow: hidden;\\n  border: 1px solid rgba(255, 255, 255, 0.1);\\n\"])));const Canvas=styled.canvas(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  cursor: grab;\\n  \\n  &:active {\\n    cursor: grabbing;\\n  }\\n\"])));const PathInfo=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  margin-top: 20px;\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\\n  gap: 15px;\\n\"])));const InfoCard=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  background: rgba(255, 255, 255, 0.05);\\n  border-radius: 8px;\\n  padding: 12px;\\n  border: 1px solid rgba(255, 255, 255, 0.1);\\n\"])));const InfoLabel=styled.div(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  font-size: 11px;\\n  color: rgba(255, 255, 255, 0.7);\\n  text-transform: uppercase;\\n  letter-spacing: 0.5px;\\n  margin-bottom: 5px;\\n\"])));const InfoValue=styled.div(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  font-size: 14px;\\n  font-weight: 600;\\n  color: #ffffff;\\n\"])));const Legend=styled.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  margin-top: 15px;\\n  display: flex;\\n  flex-wrap: wrap;\\n  gap: 15px;\\n\"])));const LegendItem=styled.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  font-size: 12px;\\n  color: rgba(255, 255, 255, 0.8);\\n\"])));const LegendColor=styled.div(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  width: 12px;\\n  height: 12px;\\n  border-radius: 50%;\\n  background: \",\";\\n\"])),props=>props.color);const PathSteps=styled.div(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  margin-top: 20px;\\n  max-height: 200px;\\n  overflow-y: auto;\\n\"])));const StepItem=styled.div(_templateObject14||(_templateObject14=_taggedTemplateLiteral([\"\\n  background: rgba(255, 255, 255, 0.05);\\n  border-radius: 8px;\\n  padding: 10px;\\n  margin-bottom: 8px;\\n  border-left: 3px solid \",\";\\n  font-size: 12px;\\n  color: rgba(255, 255, 255, 0.8);\\n\"])),props=>props.color);function PathVisualization(_ref){var _pathData$path;let{pathData,analysisResult}=_ref;const canvasRef=useRef(null);const[viewMode,setViewMode]=useState('3d');const[rotation,setRotation]=useState({x:0,y:0});const[showOnImage,setShowOnImage]=useState(false);const[zoom,setZoom]=useState(1.0);const[pan,setPan]=useState({x:0,y:0});const[isPanning,setIsPanning]=useState(false);const[lastPanPos,setLastPanPos]=useState({x:0,y:0});const calculateBounds=points=>{if(points.length===0)return{minX:0,maxX:0,minY:0,maxY:0,centerX:0,centerY:0,width:0,height:0};const xCoords=points.map(p=>p[0]);const yCoords=points.map(p=>p[1]);const minX=Math.min(...xCoords);const maxX=Math.max(...xCoords);const minY=Math.min(...yCoords);const maxY=Math.max(...yCoords);return{minX,maxX,minY,maxY,centerX:(minX+maxX)/2,centerY:(minY+maxY)/2,width:maxX-minX,height:maxY-minY};};const drawPath=useCallback(()=>{const canvas=canvasRef.current;if(!canvas||!pathData.visualization)return;const ctx=canvas.getContext('2d');const rect=canvas.getBoundingClientRect();const dpr=window.devicePixelRatio||1;canvas.width=rect.width*dpr;canvas.height=rect.height*dpr;ctx.scale(dpr,dpr);canvas.style.width=rect.width+'px';canvas.style.height=rect.height+'px';// Clear canvas or draw background image\nif(showOnImage&&analysisResult&&analysisResult.image_url){// Draw the original image as background with zoom and pan\nconst img=new Image();img.onload=()=>{// Calculate image dimensions with zoom\nconst imgWidth=img.width*zoom;const imgHeight=img.height*zoom;// Calculate image position with pan\nconst imgX=(rect.width-imgWidth)/2+pan.x;const imgY=(rect.height-imgHeight)/2+pan.y;// Clear canvas\nctx.fillStyle='rgba(0, 0, 0, 0.1)';ctx.fillRect(0,0,rect.width,rect.height);// Draw image with zoom and pan\nctx.drawImage(img,imgX,imgY,imgWidth,imgHeight);// Draw path overlay with same zoom and pan\ndrawPathOverlay(ctx,rect,imgX,imgY,imgWidth,imgHeight);};img.src=analysisResult.image_url;return;}else{// Clear canvas with background\nctx.fillStyle=viewMode==='3d'?'rgba(0, 0, 20, 0.3)':'rgba(0, 0, 0, 0.1)';ctx.fillRect(0,0,rect.width,rect.height);}drawPathOverlay(ctx,rect);},[pathData,viewMode,rotation,showOnImage,zoom,pan,analysisResult,drawPathOverlay]);const drawPathOverlay=useCallback(function(ctx,rect){let imgX=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;let imgY=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;let imgWidth=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0;let imgHeight=arguments.length>5&&arguments[5]!==undefined?arguments[5]:0;const points=pathData.visualization.points;const connections=pathData.visualization.connections;if(!points||points.length===0)return;// Calculate bounds\nconst bounds=calculateBounds(points);const scale=Math.min(rect.width,rect.height)/Math.max(bounds.width,bounds.height)*0.8;const centerX=rect.width/2;const centerY=rect.height/2;// Project 3D points to 2D with view mode consideration\nconst projectedPoints=points.map(point=>{const[x,y,z]=point;if(showOnImage&&analysisResult&&analysisResult.image_url){var _analysisResult$metad,_analysisResult$metad2,_analysisResult$metad3,_analysisResult$metad4;// When showing on image, map path coordinates to image space\n// Path coordinates are in image pixel space (x, y, z=0)\n// We need to scale them to match the displayed image size\n// Get the original image dimensions from the analysis result\nconst originalWidth=((_analysisResult$metad=analysisResult.metadata)===null||_analysisResult$metad===void 0?void 0:(_analysisResult$metad2=_analysisResult$metad.image_size)===null||_analysisResult$metad2===void 0?void 0:_analysisResult$metad2[1])||bounds.width;const originalHeight=((_analysisResult$metad3=analysisResult.metadata)===null||_analysisResult$metad3===void 0?void 0:(_analysisResult$metad4=_analysisResult$metad3.image_size)===null||_analysisResult$metad4===void 0?void 0:_analysisResult$metad4[0])||bounds.height;// Scale the path coordinates to match the displayed image\nconst scaleX=imgWidth/originalWidth;const scaleY=imgHeight/originalHeight;// Apply scaling and positioning\nconst imageX=imgX+x*scaleX;const imageY=imgY+y*scaleY;return{x:imageX,y:imageY,z:0};}if(viewMode==='2d'){// Simple 2D projection (ignore Z) with zoom and pan\nconst projectedX=centerX+(x-bounds.centerX)*scale*zoom+pan.x;const projectedY=centerY+(y-bounds.centerY)*scale*zoom+pan.y;return{x:projectedX,y:projectedY,z:0};}else{// 3D perspective projection with rotation (improved) and zoom\nconst cosX=Math.cos(rotation.x*0.5);const sinX=Math.sin(rotation.x*0.5);const cosY=Math.cos(rotation.y*0.5);const sinY=Math.sin(rotation.y*0.5);// Apply rotation with better scaling\nconst rotatedX=x*cosY-z*sinY;const rotatedY=y*cosX+(x*sinY+z*cosY)*sinX;const rotatedZ=(x*sinY+z*cosY)*cosX-y*sinX;// Perspective projection with better depth handling and zoom\nconst perspective=1000;const depth=Math.max(1,rotatedZ+perspective);const projectedX=centerX+rotatedX/depth*scale*200*zoom+pan.x;const projectedY=centerY+rotatedY/depth*scale*200*zoom+pan.y;return{x:projectedX,y:projectedY,z:rotatedZ};}});// Draw connections\nctx.strokeStyle='rgba(0, 255, 255, 0.6)';ctx.lineWidth=2;ctx.setLineDash([5,5]);for(const connection of connections){const[startIdx,endIdx]=connection;if(startIdx<projectedPoints.length&&endIdx<projectedPoints.length){const start=projectedPoints[startIdx];const end=projectedPoints[endIdx];ctx.beginPath();ctx.moveTo(start.x,start.y);ctx.lineTo(end.x,end.y);ctx.stroke();}}// Reset line dash\nctx.setLineDash([]);// Draw points\nprojectedPoints.forEach((point,index)=>{var _pathData$visualizati;const isStart=index===0;const isEnd=index===projectedPoints.length-1;const metadata=(_pathData$visualizati=pathData.visualization.metadata)===null||_pathData$visualizati===void 0?void 0:_pathData$visualizati[index-1];// -1 because start point has no metadata\nlet color,radius;if(isStart){color='#00ff00';radius=8;}else if(isEnd&&projectedPoints.length>2){color='#ff0000';radius=8;}else if(metadata){color=metadata.feasible?'#00ffff':'#ffaa00';radius=Math.max(4,Math.min(12,metadata.size*2));}else{// Default for intermediate points without metadata\ncolor='#00ffff';radius=6;}// Draw point\nctx.fillStyle=color;ctx.beginPath();ctx.arc(point.x,point.y,radius,0,2*Math.PI);ctx.fill();// Draw border\nctx.strokeStyle='rgba(255, 255, 255, 0.8)';ctx.lineWidth=1;ctx.stroke();// Draw labels\nif(metadata||isStart||isEnd){ctx.fillStyle='#ffffff';ctx.font='10px Inter, sans-serif';ctx.textAlign='center';const label=isStart?'START':isEnd&&projectedPoints.length>2?'END':metadata?\"D\".concat(metadata.debris_id||index):\"D\".concat(index);ctx.fillText(label,point.x,point.y-radius-10);}});// Draw coordinate axes (only in 3D mode and not on image)\nif(viewMode==='3d'&&!showOnImage){drawAxes(ctx,centerX,centerY,scale);}},[pathData,viewMode,rotation,showOnImage,zoom,pan,analysisResult]);useEffect(()=>{if(pathData&&pathData.visualization){drawPath();}},[pathData,viewMode,rotation,showOnImage,zoom,pan]);const drawAxes=(ctx,centerX,centerY,scale)=>{ctx.strokeStyle='rgba(255, 255, 255, 0.3)';ctx.lineWidth=1;// X axis\nctx.beginPath();ctx.moveTo(centerX-50,centerY);ctx.lineTo(centerX+50,centerY);ctx.stroke();// Y axis\nctx.beginPath();ctx.moveTo(centerX,centerY-50);ctx.lineTo(centerX,centerY+50);ctx.stroke();// Labels\nctx.fillStyle='rgba(255, 255, 255, 0.6)';ctx.font='8px Inter, sans-serif';ctx.textAlign='center';ctx.fillText('X',centerX+55,centerY+3);ctx.fillText('Y',centerX+3,centerY-55);};const handleCanvasMouseMove=e=>{const canvas=canvasRef.current;if(!canvas)return;const rect=canvas.getBoundingClientRect();if(isPanning){// Handle panning\nconst deltaX=e.clientX-lastPanPos.x;const deltaY=e.clientY-lastPanPos.y;setPan(prev=>({x:prev.x+deltaX,y:prev.y+deltaY}));setLastPanPos({x:e.clientX,y:e.clientY});}else if(viewMode==='3d'&&!showOnImage){// Handle 3D rotation\nconst x=(e.clientX-rect.left)/rect.width;const y=(e.clientY-rect.top)/rect.height;setRotation({x:(y-0.5)*Math.PI,y:(x-0.5)*Math.PI});}};const handleCanvasMouseDown=e=>{if(e.button===1||e.button===0&&e.ctrlKey){// Middle mouse or Ctrl+left click for panning\nsetIsPanning(true);setLastPanPos({x:e.clientX,y:e.clientY});e.preventDefault();}else if(e.button===0&&viewMode==='3d'&&!showOnImage){// Left click for 3D rotation\n// setIsDragging(true);\n// setLastMousePos({ x: e.clientX, y: e.clientY });\n}};const handleCanvasMouseUp=()=>{// setIsDragging(false);\nsetIsPanning(false);};const handleCanvasWheel=e=>{e.preventDefault();const delta=e.deltaY>0?0.9:1.1;setZoom(prev=>Math.max(0.1,Math.min(10,prev*delta)));};const resetView=()=>{setZoom(1.0);setPan({x:0,y:0});setRotation({x:0,y:0});};if(!pathData||!pathData.visualization){return/*#__PURE__*/_jsxs(VisualizationContainer,{children:[/*#__PURE__*/_jsx(VisualizationHeader,{children:/*#__PURE__*/_jsx(VisualizationTitle,{children:\"\\uD83D\\uDDFA\\uFE0F Path Visualization\"})}),/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',padding:'40px',color:'rgba(255, 255, 255, 0.5)'},children:\"No path data available\"})]});}const metrics=pathData.metrics||{};return/*#__PURE__*/_jsxs(VisualizationContainer,{children:[/*#__PURE__*/_jsxs(VisualizationHeader,{children:[/*#__PURE__*/_jsx(VisualizationTitle,{children:\"\\uD83D\\uDDFA\\uFE0F Path Visualization\"}),/*#__PURE__*/_jsxs(ViewControls,{children:[/*#__PURE__*/_jsx(ViewButton,{active:viewMode==='3d',onClick:()=>setViewMode('3d'),children:\"3D View\"}),/*#__PURE__*/_jsx(ViewButton,{active:viewMode==='2d',onClick:()=>setViewMode('2d'),children:\"2D View\"}),/*#__PURE__*/_jsx(ViewButton,{active:showOnImage,onClick:()=>setShowOnImage(!showOnImage),children:\"\\uD83D\\uDCF8 On Image\"}),/*#__PURE__*/_jsx(ViewButton,{onClick:()=>setZoom(prev=>Math.min(10,prev*1.2)),title:\"Zoom In\",children:\"\\uD83D\\uDD0D+\"}),/*#__PURE__*/_jsx(ViewButton,{onClick:()=>setZoom(prev=>Math.max(0.1,prev*0.8)),title:\"Zoom Out\",children:\"\\uD83D\\uDD0D-\"}),/*#__PURE__*/_jsx(ViewButton,{onClick:resetView,title:\"Reset View\",children:\"\\uD83C\\uDFE0 Reset\"})]})]}),/*#__PURE__*/_jsx(CanvasContainer,{children:/*#__PURE__*/_jsx(Canvas,{ref:canvasRef,onMouseMove:handleCanvasMouseMove,onMouseDown:handleCanvasMouseDown,onMouseUp:handleCanvasMouseUp,onWheel:handleCanvasWheel})}),/*#__PURE__*/_jsxs(Legend,{children:[/*#__PURE__*/_jsxs(LegendItem,{children:[/*#__PURE__*/_jsx(LegendColor,{color:\"#00ff00\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Start Position\"})]}),/*#__PURE__*/_jsxs(LegendItem,{children:[/*#__PURE__*/_jsx(LegendColor,{color:\"#00ffff\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Feasible Debris\"})]}),/*#__PURE__*/_jsxs(LegendItem,{children:[/*#__PURE__*/_jsx(LegendColor,{color:\"#ffaa00\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Non-feasible\"})]}),/*#__PURE__*/_jsxs(LegendItem,{children:[/*#__PURE__*/_jsx(LegendColor,{color:\"#ff0000\"}),/*#__PURE__*/_jsx(\"span\",{children:\"End Position\"})]}),/*#__PURE__*/_jsxs(LegendItem,{children:[/*#__PURE__*/_jsx(\"div\",{style:{width:'12px',height:'2px',background:'rgba(0, 255, 255, 0.6)',margin:'5px 0'}}),/*#__PURE__*/_jsx(\"span\",{children:\"Path Connection\"})]}),/*#__PURE__*/_jsx(LegendItem,{children:/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uD83D\\uDD0D Zoom: \",Math.round(zoom*100),\"%\"]})}),/*#__PURE__*/_jsx(LegendItem,{children:/*#__PURE__*/_jsx(\"span\",{children:\"Controls: Scroll=Zoom, Ctrl+Drag=Pan, Drag=Rotate(3D)\"})}),showOnImage&&/*#__PURE__*/_jsx(LegendItem,{children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDCF8 Image Mode: Zoom and pan work with the image\"})})]}),/*#__PURE__*/_jsxs(PathInfo,{children:[/*#__PURE__*/_jsxs(InfoCard,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"Path Length\"}),/*#__PURE__*/_jsxs(InfoValue,{children:[pathData.path_length||0,\" steps\"]})]}),/*#__PURE__*/_jsxs(InfoCard,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"Total Distance\"}),/*#__PURE__*/_jsx(InfoValue,{children:metrics.total_distance?\"\".concat((metrics.total_distance/1000).toFixed(1),\" km\"):'0 km'})]}),/*#__PURE__*/_jsxs(InfoCard,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"Mission Time\"}),/*#__PURE__*/_jsx(InfoValue,{children:metrics.total_time?\"\".concat((metrics.total_time/3600).toFixed(1),\" hours\"):'0 hours'})]}),/*#__PURE__*/_jsxs(InfoCard,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"Fuel Required\"}),/*#__PURE__*/_jsx(InfoValue,{children:metrics.total_fuel?\"\".concat(metrics.total_fuel.toFixed(1),\" kg\"):'0 kg'})]})]}),/*#__PURE__*/_jsxs(PathSteps,{children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:'#ffffff',marginBottom:'10px',fontSize:'14px'},children:\"Path Steps:\"}),(_pathData$path=pathData.path)===null||_pathData$path===void 0?void 0:_pathData$path.map((step,index)=>/*#__PURE__*/_jsxs(StepItem,{color:index===0?'#00ff00':index===pathData.path.length-1?'#ff0000':'#00ffff',children:[/*#__PURE__*/_jsxs(\"strong\",{children:[\"Step \",step.step,\":\"]}),\" \",index===0?'Start':\"Debris \".concat(step.debris_id),step.distance_from_previous&&/*#__PURE__*/_jsxs(\"span\",{style:{float:'right',color:'rgba(255, 255, 255, 0.6)'},children:[step.distance_from_previous.toFixed(1),\"m\"]})]},index))]})]});}export default PathVisualization;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
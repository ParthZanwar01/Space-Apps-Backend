{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/parthzanwar/Desktop/Space Apps/public/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14;import React,{useRef,useEffect,useState}from'react';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const VisualizationContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background: rgba(255, 255, 255, 0.05);\\n  border-radius: 15px;\\n  padding: 25px;\\n  backdrop-filter: blur(10px);\\n  border: 1px solid rgba(255, 255, 255, 0.1);\\n\"])));const VisualizationHeader=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  margin-bottom: 20px;\\n\"])));const VisualizationTitle=styled.h3(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  font-size: 18px;\\n  font-weight: 600;\\n  color: #ffffff;\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n\"])));const ViewControls=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: flex;\\n  gap: 10px;\\n\"])));const ViewButton=styled.button(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  border: 1px solid \",\";\\n  padding: 6px 12px;\\n  border-radius: 15px;\\n  color: #ffffff;\\n  font-size: 11px;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n  \\n  &:hover {\\n    background: rgba(0, 255, 255, 0.2);\\n    border-color: #00ffff;\\n  }\\n\"])),props=>props.active?'rgba(0, 255, 255, 0.2)':'rgba(255, 255, 255, 0.1)',props=>props.active?'#00ffff':'rgba(255, 255, 255, 0.3)');const CanvasContainer=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  position: relative;\\n  width: 100%;\\n  height: 400px;\\n  background: rgba(0, 0, 0, 0.3);\\n  border-radius: 10px;\\n  overflow: hidden;\\n  border: 1px solid rgba(255, 255, 255, 0.1);\\n\"])));const Canvas=styled.canvas(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  cursor: grab;\\n  \\n  &:active {\\n    cursor: grabbing;\\n  }\\n\"])));const PathInfo=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  margin-top: 20px;\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\\n  gap: 15px;\\n\"])));const InfoCard=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  background: rgba(255, 255, 255, 0.05);\\n  border-radius: 8px;\\n  padding: 12px;\\n  border: 1px solid rgba(255, 255, 255, 0.1);\\n\"])));const InfoLabel=styled.div(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  font-size: 11px;\\n  color: rgba(255, 255, 255, 0.7);\\n  text-transform: uppercase;\\n  letter-spacing: 0.5px;\\n  margin-bottom: 5px;\\n\"])));const InfoValue=styled.div(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  font-size: 14px;\\n  font-weight: 600;\\n  color: #ffffff;\\n\"])));const Legend=styled.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  margin-top: 15px;\\n  display: flex;\\n  flex-wrap: wrap;\\n  gap: 15px;\\n\"])));const LegendItem=styled.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  font-size: 12px;\\n  color: rgba(255, 255, 255, 0.8);\\n\"])));const LegendColor=styled.div(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  width: 12px;\\n  height: 12px;\\n  border-radius: 50%;\\n  background: \",\";\\n\"])),props=>props.color);const PathSteps=styled.div(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  margin-top: 20px;\\n  max-height: 200px;\\n  overflow-y: auto;\\n\"])));const StepItem=styled.div(_templateObject14||(_templateObject14=_taggedTemplateLiteral([\"\\n  background: rgba(255, 255, 255, 0.05);\\n  border-radius: 8px;\\n  padding: 10px;\\n  margin-bottom: 8px;\\n  border-left: 3px solid \",\";\\n  font-size: 12px;\\n  color: rgba(255, 255, 255, 0.8);\\n\"])),props=>props.color);function PathVisualization(_ref){var _pathData$path;let{pathData,analysisResult}=_ref;const canvasRef=useRef(null);const[viewMode,setViewMode]=useState('3d');const[rotation,setRotation]=useState({x:0,y:0});const[showOnImage,setShowOnImage]=useState(false);const[zoom,setZoom]=useState(1.0);const[pan,setPan]=useState({x:0,y:0});const[isPanning,setIsPanning]=useState(false);const[lastPanPos,setLastPanPos]=useState({x:0,y:0});const[isDragging,setIsDragging]=useState(false);const[lastMousePos,setLastMousePos]=useState({x:0,y:0});useEffect(()=>{if(pathData&&pathData.visualization){drawPath();}},[pathData,viewMode,rotation,showOnImage,zoom,pan]);const drawPath=()=>{const canvas=canvasRef.current;if(!canvas||!pathData.visualization)return;const ctx=canvas.getContext('2d');const rect=canvas.getBoundingClientRect();const dpr=window.devicePixelRatio||1;canvas.width=rect.width*dpr;canvas.height=rect.height*dpr;ctx.scale(dpr,dpr);canvas.style.width=rect.width+'px';canvas.style.height=rect.height+'px';// Clear canvas or draw background image\nif(showOnImage&&analysisResult&&analysisResult.image_url){// Draw the original image as background with zoom and pan\nconst img=new Image();img.onload=()=>{// Calculate image dimensions with zoom\nconst imgWidth=img.width*zoom;const imgHeight=img.height*zoom;// Calculate image position with pan\nconst imgX=(rect.width-imgWidth)/2+pan.x;const imgY=(rect.height-imgHeight)/2+pan.y;// Clear canvas\nctx.fillStyle='rgba(0, 0, 0, 0.1)';ctx.fillRect(0,0,rect.width,rect.height);// Draw image with zoom and pan\nctx.drawImage(img,imgX,imgY,imgWidth,imgHeight);// Draw path overlay with same zoom and pan\ndrawPathOverlay(ctx,rect,imgX,imgY,imgWidth,imgHeight);};img.src=analysisResult.image_url;return;}else{// Clear canvas with background\nctx.fillStyle=viewMode==='3d'?'rgba(0, 0, 20, 0.3)':'rgba(0, 0, 0, 0.1)';ctx.fillRect(0,0,rect.width,rect.height);}drawPathOverlay(ctx,rect);};const drawPathOverlay=function(ctx,rect){let imgX=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;let imgY=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;let imgWidth=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0;let imgHeight=arguments.length>5&&arguments[5]!==undefined?arguments[5]:0;const points=pathData.visualization.points;const connections=pathData.visualization.connections;if(!points||points.length===0)return;// Calculate bounds\nconst bounds=calculateBounds(points);const scale=Math.min(rect.width,rect.height)/Math.max(bounds.width,bounds.height)*0.8;const centerX=rect.width/2;const centerY=rect.height/2;// Project 3D points to 2D with view mode consideration\nconst projectedPoints=points.map(point=>{const[x,y,z]=point;if(showOnImage&&analysisResult&&analysisResult.image_url){var _analysisResult$metad,_analysisResult$metad2,_analysisResult$metad3,_analysisResult$metad4;// When showing on image, map path coordinates to image space\n// Path coordinates are in image pixel space (x, y, z=0)\n// We need to scale them to match the displayed image size\n// Get the original image dimensions from the analysis result\nconst originalWidth=((_analysisResult$metad=analysisResult.metadata)===null||_analysisResult$metad===void 0?void 0:(_analysisResult$metad2=_analysisResult$metad.image_size)===null||_analysisResult$metad2===void 0?void 0:_analysisResult$metad2[1])||bounds.width;const originalHeight=((_analysisResult$metad3=analysisResult.metadata)===null||_analysisResult$metad3===void 0?void 0:(_analysisResult$metad4=_analysisResult$metad3.image_size)===null||_analysisResult$metad4===void 0?void 0:_analysisResult$metad4[0])||bounds.height;// Scale the path coordinates to match the displayed image\nconst scaleX=imgWidth/originalWidth;const scaleY=imgHeight/originalHeight;// Apply scaling and positioning\nconst imageX=imgX+x*scaleX;const imageY=imgY+y*scaleY;return{x:imageX,y:imageY,z:0};}if(viewMode==='2d'){// Simple 2D projection (ignore Z) with zoom and pan\nconst projectedX=centerX+(x-bounds.centerX)*scale*zoom+pan.x;const projectedY=centerY+(y-bounds.centerY)*scale*zoom+pan.y;return{x:projectedX,y:projectedY,z:0};}else{// 3D perspective projection with rotation (improved) and zoom\nconst cosX=Math.cos(rotation.x*0.5);const sinX=Math.sin(rotation.x*0.5);const cosY=Math.cos(rotation.y*0.5);const sinY=Math.sin(rotation.y*0.5);// Apply rotation with better scaling\nconst rotatedX=x*cosY-z*sinY;const rotatedY=y*cosX+(x*sinY+z*cosY)*sinX;const rotatedZ=(x*sinY+z*cosY)*cosX-y*sinX;// Perspective projection with better depth handling and zoom\nconst perspective=1000;const depth=Math.max(1,rotatedZ+perspective);const projectedX=centerX+rotatedX/depth*scale*200*zoom+pan.x;const projectedY=centerY+rotatedY/depth*scale*200*zoom+pan.y;return{x:projectedX,y:projectedY,z:rotatedZ};}});// Draw connections\nctx.strokeStyle='rgba(0, 255, 255, 0.6)';ctx.lineWidth=2;ctx.setLineDash([5,5]);for(const connection of connections){const[startIdx,endIdx]=connection;if(startIdx<projectedPoints.length&&endIdx<projectedPoints.length){const start=projectedPoints[startIdx];const end=projectedPoints[endIdx];ctx.beginPath();ctx.moveTo(start.x,start.y);ctx.lineTo(end.x,end.y);ctx.stroke();}}// Reset line dash\nctx.setLineDash([]);// Draw points\nprojectedPoints.forEach((point,index)=>{var _pathData$visualizati;const isStart=index===0;const isEnd=index===projectedPoints.length-1;const metadata=(_pathData$visualizati=pathData.visualization.metadata)===null||_pathData$visualizati===void 0?void 0:_pathData$visualizati[index-1];// -1 because start point has no metadata\nlet color,radius;if(isStart){color='#00ff00';radius=8;}else if(isEnd&&projectedPoints.length>2){color='#ff0000';radius=8;}else if(metadata){color=metadata.feasible?'#00ffff':'#ffaa00';radius=Math.max(4,Math.min(12,metadata.size*2));}else{// Default for intermediate points without metadata\ncolor='#00ffff';radius=6;}// Draw point\nctx.fillStyle=color;ctx.beginPath();ctx.arc(point.x,point.y,radius,0,2*Math.PI);ctx.fill();// Draw border\nctx.strokeStyle='rgba(255, 255, 255, 0.8)';ctx.lineWidth=1;ctx.stroke();// Draw labels\nif(metadata||isStart||isEnd){ctx.fillStyle='#ffffff';ctx.font='10px Inter, sans-serif';ctx.textAlign='center';const label=isStart?'START':isEnd&&projectedPoints.length>2?'END':metadata?\"D\".concat(metadata.debris_id||index):\"D\".concat(index);ctx.fillText(label,point.x,point.y-radius-10);}});// Draw coordinate axes (only in 3D mode and not on image)\nif(viewMode==='3d'&&!showOnImage){drawAxes(ctx,centerX,centerY,scale);}};const calculateBounds=points=>{if(points.length===0)return{minX:0,maxX:0,minY:0,maxY:0,centerX:0,centerY:0,width:0,height:0};const xCoords=points.map(p=>p[0]);const yCoords=points.map(p=>p[1]);const minX=Math.min(...xCoords);const maxX=Math.max(...xCoords);const minY=Math.min(...yCoords);const maxY=Math.max(...yCoords);return{minX,maxX,minY,maxY,centerX:(minX+maxX)/2,centerY:(minY+maxY)/2,width:maxX-minX,height:maxY-minY};};const drawAxes=(ctx,centerX,centerY,scale)=>{ctx.strokeStyle='rgba(255, 255, 255, 0.3)';ctx.lineWidth=1;// X axis\nctx.beginPath();ctx.moveTo(centerX-50,centerY);ctx.lineTo(centerX+50,centerY);ctx.stroke();// Y axis\nctx.beginPath();ctx.moveTo(centerX,centerY-50);ctx.lineTo(centerX,centerY+50);ctx.stroke();// Labels\nctx.fillStyle='rgba(255, 255, 255, 0.6)';ctx.font='8px Inter, sans-serif';ctx.textAlign='center';ctx.fillText('X',centerX+55,centerY+3);ctx.fillText('Y',centerX+3,centerY-55);};const handleCanvasMouseMove=e=>{const canvas=canvasRef.current;if(!canvas)return;const rect=canvas.getBoundingClientRect();if(isPanning){// Handle panning\nconst deltaX=e.clientX-lastPanPos.x;const deltaY=e.clientY-lastPanPos.y;setPan(prev=>({x:prev.x+deltaX,y:prev.y+deltaY}));setLastPanPos({x:e.clientX,y:e.clientY});}else if(viewMode==='3d'&&!showOnImage){// Handle 3D rotation\nconst x=(e.clientX-rect.left)/rect.width;const y=(e.clientY-rect.top)/rect.height;setRotation({x:(y-0.5)*Math.PI,y:(x-0.5)*Math.PI});}};const handleCanvasMouseDown=e=>{if(e.button===1||e.button===0&&e.ctrlKey){// Middle mouse or Ctrl+left click for panning\nsetIsPanning(true);setLastPanPos({x:e.clientX,y:e.clientY});e.preventDefault();}else if(e.button===0&&viewMode==='3d'&&!showOnImage){// Left click for 3D rotation\nsetIsDragging(true);setLastMousePos({x:e.clientX,y:e.clientY});}};const handleCanvasMouseUp=()=>{setIsDragging(false);setIsPanning(false);};const handleCanvasWheel=e=>{e.preventDefault();const delta=e.deltaY>0?0.9:1.1;setZoom(prev=>Math.max(0.1,Math.min(10,prev*delta)));};const resetView=()=>{setZoom(1.0);setPan({x:0,y:0});setRotation({x:0,y:0});};if(!pathData||!pathData.visualization){return/*#__PURE__*/_jsxs(VisualizationContainer,{children:[/*#__PURE__*/_jsx(VisualizationHeader,{children:/*#__PURE__*/_jsx(VisualizationTitle,{children:\"\\uD83D\\uDDFA\\uFE0F Path Visualization\"})}),/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',padding:'40px',color:'rgba(255, 255, 255, 0.5)'},children:\"No path data available\"})]});}const metrics=pathData.metrics||{};return/*#__PURE__*/_jsxs(VisualizationContainer,{children:[/*#__PURE__*/_jsxs(VisualizationHeader,{children:[/*#__PURE__*/_jsx(VisualizationTitle,{children:\"\\uD83D\\uDDFA\\uFE0F Path Visualization\"}),/*#__PURE__*/_jsxs(ViewControls,{children:[/*#__PURE__*/_jsx(ViewButton,{active:viewMode==='3d',onClick:()=>setViewMode('3d'),children:\"3D View\"}),/*#__PURE__*/_jsx(ViewButton,{active:viewMode==='2d',onClick:()=>setViewMode('2d'),children:\"2D View\"}),/*#__PURE__*/_jsx(ViewButton,{active:showOnImage,onClick:()=>setShowOnImage(!showOnImage),children:\"\\uD83D\\uDCF8 On Image\"}),/*#__PURE__*/_jsx(ViewButton,{onClick:()=>setZoom(prev=>Math.min(10,prev*1.2)),title:\"Zoom In\",children:\"\\uD83D\\uDD0D+\"}),/*#__PURE__*/_jsx(ViewButton,{onClick:()=>setZoom(prev=>Math.max(0.1,prev*0.8)),title:\"Zoom Out\",children:\"\\uD83D\\uDD0D-\"}),/*#__PURE__*/_jsx(ViewButton,{onClick:resetView,title:\"Reset View\",children:\"\\uD83C\\uDFE0 Reset\"})]})]}),/*#__PURE__*/_jsx(CanvasContainer,{children:/*#__PURE__*/_jsx(Canvas,{ref:canvasRef,onMouseMove:handleCanvasMouseMove,onMouseDown:handleCanvasMouseDown,onMouseUp:handleCanvasMouseUp,onWheel:handleCanvasWheel})}),/*#__PURE__*/_jsxs(Legend,{children:[/*#__PURE__*/_jsxs(LegendItem,{children:[/*#__PURE__*/_jsx(LegendColor,{color:\"#00ff00\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Start Position\"})]}),/*#__PURE__*/_jsxs(LegendItem,{children:[/*#__PURE__*/_jsx(LegendColor,{color:\"#00ffff\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Feasible Debris\"})]}),/*#__PURE__*/_jsxs(LegendItem,{children:[/*#__PURE__*/_jsx(LegendColor,{color:\"#ffaa00\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Non-feasible\"})]}),/*#__PURE__*/_jsxs(LegendItem,{children:[/*#__PURE__*/_jsx(LegendColor,{color:\"#ff0000\"}),/*#__PURE__*/_jsx(\"span\",{children:\"End Position\"})]}),/*#__PURE__*/_jsxs(LegendItem,{children:[/*#__PURE__*/_jsx(\"div\",{style:{width:'12px',height:'2px',background:'rgba(0, 255, 255, 0.6)',margin:'5px 0'}}),/*#__PURE__*/_jsx(\"span\",{children:\"Path Connection\"})]}),/*#__PURE__*/_jsx(LegendItem,{children:/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uD83D\\uDD0D Zoom: \",Math.round(zoom*100),\"%\"]})}),/*#__PURE__*/_jsx(LegendItem,{children:/*#__PURE__*/_jsx(\"span\",{children:\"Controls: Scroll=Zoom, Ctrl+Drag=Pan, Drag=Rotate(3D)\"})}),showOnImage&&/*#__PURE__*/_jsx(LegendItem,{children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDCF8 Image Mode: Zoom and pan work with the image\"})})]}),/*#__PURE__*/_jsxs(PathInfo,{children:[/*#__PURE__*/_jsxs(InfoCard,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"Path Length\"}),/*#__PURE__*/_jsxs(InfoValue,{children:[pathData.path_length||0,\" steps\"]})]}),/*#__PURE__*/_jsxs(InfoCard,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"Total Distance\"}),/*#__PURE__*/_jsx(InfoValue,{children:metrics.total_distance?\"\".concat((metrics.total_distance/1000).toFixed(1),\" km\"):'0 km'})]}),/*#__PURE__*/_jsxs(InfoCard,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"Mission Time\"}),/*#__PURE__*/_jsx(InfoValue,{children:metrics.total_time?\"\".concat((metrics.total_time/3600).toFixed(1),\" hours\"):'0 hours'})]}),/*#__PURE__*/_jsxs(InfoCard,{children:[/*#__PURE__*/_jsx(InfoLabel,{children:\"Fuel Required\"}),/*#__PURE__*/_jsx(InfoValue,{children:metrics.total_fuel?\"\".concat(metrics.total_fuel.toFixed(1),\" kg\"):'0 kg'})]})]}),/*#__PURE__*/_jsxs(PathSteps,{children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:'#ffffff',marginBottom:'10px',fontSize:'14px'},children:\"Path Steps:\"}),(_pathData$path=pathData.path)===null||_pathData$path===void 0?void 0:_pathData$path.map((step,index)=>/*#__PURE__*/_jsxs(StepItem,{color:index===0?'#00ff00':index===pathData.path.length-1?'#ff0000':'#00ffff',children:[/*#__PURE__*/_jsxs(\"strong\",{children:[\"Step \",step.step,\":\"]}),\" \",index===0?'Start':\"Debris \".concat(step.debris_id),step.distance_from_previous&&/*#__PURE__*/_jsxs(\"span\",{style:{float:'right',color:'rgba(255, 255, 255, 0.6)'},children:[step.distance_from_previous.toFixed(1),\"m\"]})]},index))]})]});}export default PathVisualization;","map":{"version":3,"names":["React","useRef","useEffect","useState","styled","jsx","_jsx","jsxs","_jsxs","VisualizationContainer","div","_templateObject","_taggedTemplateLiteral","VisualizationHeader","_templateObject2","VisualizationTitle","h3","_templateObject3","ViewControls","_templateObject4","ViewButton","button","_templateObject5","props","active","CanvasContainer","_templateObject6","Canvas","canvas","_templateObject7","PathInfo","_templateObject8","InfoCard","_templateObject9","InfoLabel","_templateObject0","InfoValue","_templateObject1","Legend","_templateObject10","LegendItem","_templateObject11","LegendColor","_templateObject12","color","PathSteps","_templateObject13","StepItem","_templateObject14","PathVisualization","_ref","_pathData$path","pathData","analysisResult","canvasRef","viewMode","setViewMode","rotation","setRotation","x","y","showOnImage","setShowOnImage","zoom","setZoom","pan","setPan","isPanning","setIsPanning","lastPanPos","setLastPanPos","isDragging","setIsDragging","lastMousePos","setLastMousePos","visualization","drawPath","current","ctx","getContext","rect","getBoundingClientRect","dpr","window","devicePixelRatio","width","height","scale","style","image_url","img","Image","onload","imgWidth","imgHeight","imgX","imgY","fillStyle","fillRect","drawImage","drawPathOverlay","src","arguments","length","undefined","points","connections","bounds","calculateBounds","Math","min","max","centerX","centerY","projectedPoints","map","point","z","_analysisResult$metad","_analysisResult$metad2","_analysisResult$metad3","_analysisResult$metad4","originalWidth","metadata","image_size","originalHeight","scaleX","scaleY","imageX","imageY","projectedX","projectedY","cosX","cos","sinX","sin","cosY","sinY","rotatedX","rotatedY","rotatedZ","perspective","depth","strokeStyle","lineWidth","setLineDash","connection","startIdx","endIdx","start","end","beginPath","moveTo","lineTo","stroke","forEach","index","_pathData$visualizati","isStart","isEnd","radius","feasible","size","arc","PI","fill","font","textAlign","label","concat","debris_id","fillText","drawAxes","minX","maxX","minY","maxY","xCoords","p","yCoords","handleCanvasMouseMove","e","deltaX","clientX","deltaY","clientY","prev","left","top","handleCanvasMouseDown","ctrlKey","preventDefault","handleCanvasMouseUp","handleCanvasWheel","delta","resetView","children","padding","metrics","onClick","title","ref","onMouseMove","onMouseDown","onMouseUp","onWheel","background","margin","round","path_length","total_distance","toFixed","total_time","total_fuel","marginBottom","fontSize","path","step","distance_from_previous","float"],"sources":["/Users/parthzanwar/Desktop/Space Apps/public/src/components/PathVisualization.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nconst VisualizationContainer = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 15px;\n  padding: 25px;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nconst VisualizationHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n\nconst VisualizationTitle = styled.h3`\n  font-size: 18px;\n  font-weight: 600;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst ViewControls = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nconst ViewButton = styled.button`\n  background: ${props => props.active ? 'rgba(0, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)'};\n  border: 1px solid ${props => props.active ? '#00ffff' : 'rgba(255, 255, 255, 0.3)'};\n  padding: 6px 12px;\n  border-radius: 15px;\n  color: #ffffff;\n  font-size: 11px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background: rgba(0, 255, 255, 0.2);\n    border-color: #00ffff;\n  }\n`;\n\nconst CanvasContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 400px;\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 10px;\n  overflow: hidden;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nconst Canvas = styled.canvas`\n  width: 100%;\n  height: 100%;\n  cursor: grab;\n  \n  &:active {\n    cursor: grabbing;\n  }\n`;\n\nconst PathInfo = styled.div`\n  margin-top: 20px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 15px;\n`;\n\nconst InfoCard = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  padding: 12px;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nconst InfoLabel = styled.div`\n  font-size: 11px;\n  color: rgba(255, 255, 255, 0.7);\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  margin-bottom: 5px;\n`;\n\nconst InfoValue = styled.div`\n  font-size: 14px;\n  font-weight: 600;\n  color: #ffffff;\n`;\n\nconst Legend = styled.div`\n  margin-top: 15px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.8);\n`;\n\nconst LegendColor = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: ${props => props.color};\n`;\n\nconst PathSteps = styled.div`\n  margin-top: 20px;\n  max-height: 200px;\n  overflow-y: auto;\n`;\n\nconst StepItem = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 8px;\n  padding: 10px;\n  margin-bottom: 8px;\n  border-left: 3px solid ${props => props.color};\n  font-size: 12px;\n  color: rgba(255, 255, 255, 0.8);\n`;\n\nfunction PathVisualization({ pathData, analysisResult }) {\n  const canvasRef = useRef(null);\n  const [viewMode, setViewMode] = useState('3d');\n  const [rotation, setRotation] = useState({ x: 0, y: 0 });\n  const [showOnImage, setShowOnImage] = useState(false);\n  const [zoom, setZoom] = useState(1.0);\n  const [pan, setPan] = useState({ x: 0, y: 0 });\n  const [isPanning, setIsPanning] = useState(false);\n  const [lastPanPos, setLastPanPos] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n  const [lastMousePos, setLastMousePos] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    if (pathData && pathData.visualization) {\n      drawPath();\n    }\n  }, [pathData, viewMode, rotation, showOnImage, zoom, pan]);\n\n  const drawPath = () => {\n    const canvas = canvasRef.current;\n    if (!canvas || !pathData.visualization) return;\n\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    const dpr = window.devicePixelRatio || 1;\n    canvas.width = rect.width * dpr;\n    canvas.height = rect.height * dpr;\n    ctx.scale(dpr, dpr);\n    canvas.style.width = rect.width + 'px';\n    canvas.style.height = rect.height + 'px';\n\n        // Clear canvas or draw background image\n        if (showOnImage && analysisResult && analysisResult.image_url) {\n          // Draw the original image as background with zoom and pan\n          const img = new Image();\n          img.onload = () => {\n            // Calculate image dimensions with zoom\n            const imgWidth = img.width * zoom;\n            const imgHeight = img.height * zoom;\n            \n            // Calculate image position with pan\n            const imgX = (rect.width - imgWidth) / 2 + pan.x;\n            const imgY = (rect.height - imgHeight) / 2 + pan.y;\n            \n            // Clear canvas\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\n            ctx.fillRect(0, 0, rect.width, rect.height);\n            \n            // Draw image with zoom and pan\n            ctx.drawImage(img, imgX, imgY, imgWidth, imgHeight);\n            \n            // Draw path overlay with same zoom and pan\n            drawPathOverlay(ctx, rect, imgX, imgY, imgWidth, imgHeight);\n          };\n          img.src = analysisResult.image_url;\n          return;\n        } else {\n          // Clear canvas with background\n          ctx.fillStyle = viewMode === '3d' ? 'rgba(0, 0, 20, 0.3)' : 'rgba(0, 0, 0, 0.1)';\n          ctx.fillRect(0, 0, rect.width, rect.height);\n        }\n\n    drawPathOverlay(ctx, rect);\n  };\n\n  const drawPathOverlay = (ctx, rect, imgX = 0, imgY = 0, imgWidth = 0, imgHeight = 0) => {\n\n    const points = pathData.visualization.points;\n    const connections = pathData.visualization.connections;\n\n    if (!points || points.length === 0) return;\n\n    // Calculate bounds\n    const bounds = calculateBounds(points);\n    const scale = Math.min(rect.width, rect.height) / Math.max(bounds.width, bounds.height) * 0.8;\n    const centerX = rect.width / 2;\n    const centerY = rect.height / 2;\n\n    // Project 3D points to 2D with view mode consideration\n    const projectedPoints = points.map(point => {\n      const [x, y, z] = point;\n      \n      if (showOnImage && analysisResult && analysisResult.image_url) {\n        // When showing on image, map path coordinates to image space\n        // Path coordinates are in image pixel space (x, y, z=0)\n        // We need to scale them to match the displayed image size\n        \n        // Get the original image dimensions from the analysis result\n        const originalWidth = analysisResult.metadata?.image_size?.[1] || bounds.width;\n        const originalHeight = analysisResult.metadata?.image_size?.[0] || bounds.height;\n        \n        // Scale the path coordinates to match the displayed image\n        const scaleX = imgWidth / originalWidth;\n        const scaleY = imgHeight / originalHeight;\n        \n        // Apply scaling and positioning\n        const imageX = imgX + x * scaleX;\n        const imageY = imgY + y * scaleY;\n        \n        return { x: imageX, y: imageY, z: 0 };\n      }\n      \n      if (viewMode === '2d') {\n        // Simple 2D projection (ignore Z) with zoom and pan\n        const projectedX = centerX + (x - bounds.centerX) * scale * zoom + pan.x;\n        const projectedY = centerY + (y - bounds.centerY) * scale * zoom + pan.y;\n        return { x: projectedX, y: projectedY, z: 0 };\n      } else {\n        // 3D perspective projection with rotation (improved) and zoom\n        const cosX = Math.cos(rotation.x * 0.5);\n        const sinX = Math.sin(rotation.x * 0.5);\n        const cosY = Math.cos(rotation.y * 0.5);\n        const sinY = Math.sin(rotation.y * 0.5);\n        \n        // Apply rotation with better scaling\n        const rotatedX = x * cosY - z * sinY;\n        const rotatedY = y * cosX + (x * sinY + z * cosY) * sinX;\n        const rotatedZ = (x * sinY + z * cosY) * cosX - y * sinX;\n        \n        // Perspective projection with better depth handling and zoom\n        const perspective = 1000;\n        const depth = Math.max(1, rotatedZ + perspective);\n        const projectedX = centerX + (rotatedX / depth) * scale * 200 * zoom + pan.x;\n        const projectedY = centerY + (rotatedY / depth) * scale * 200 * zoom + pan.y;\n        \n        return { x: projectedX, y: projectedY, z: rotatedZ };\n      }\n    });\n\n    // Draw connections\n    ctx.strokeStyle = 'rgba(0, 255, 255, 0.6)';\n    ctx.lineWidth = 2;\n    ctx.setLineDash([5, 5]);\n    \n    for (const connection of connections) {\n      const [startIdx, endIdx] = connection;\n      if (startIdx < projectedPoints.length && endIdx < projectedPoints.length) {\n        const start = projectedPoints[startIdx];\n        const end = projectedPoints[endIdx];\n        \n        ctx.beginPath();\n        ctx.moveTo(start.x, start.y);\n        ctx.lineTo(end.x, end.y);\n        ctx.stroke();\n      }\n    }\n\n    // Reset line dash\n    ctx.setLineDash([]);\n\n    // Draw points\n    projectedPoints.forEach((point, index) => {\n      const isStart = index === 0;\n      const isEnd = index === projectedPoints.length - 1;\n      const metadata = pathData.visualization.metadata?.[index - 1]; // -1 because start point has no metadata\n      \n\n      let color, radius;\n      \n      if (isStart) {\n        color = '#00ff00';\n        radius = 8;\n      } else if (isEnd && projectedPoints.length > 2) {\n        color = '#ff0000';\n        radius = 8;\n      } else if (metadata) {\n        color = metadata.feasible ? '#00ffff' : '#ffaa00';\n        radius = Math.max(4, Math.min(12, metadata.size * 2));\n      } else {\n        // Default for intermediate points without metadata\n        color = '#00ffff';\n        radius = 6;\n      }\n\n      // Draw point\n      ctx.fillStyle = color;\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, radius, 0, 2 * Math.PI);\n      ctx.fill();\n\n      // Draw border\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.8)';\n      ctx.lineWidth = 1;\n      ctx.stroke();\n\n      // Draw labels\n      if (metadata || isStart || isEnd) {\n        ctx.fillStyle = '#ffffff';\n        ctx.font = '10px Inter, sans-serif';\n        ctx.textAlign = 'center';\n        \n        const label = isStart ? 'START' : \n                     (isEnd && projectedPoints.length > 2) ? 'END' : \n                     metadata ? `D${metadata.debris_id || index}` :\n                     `D${index}`;\n        \n        ctx.fillText(label, point.x, point.y - radius - 10);\n      }\n    });\n\n    // Draw coordinate axes (only in 3D mode and not on image)\n    if (viewMode === '3d' && !showOnImage) {\n      drawAxes(ctx, centerX, centerY, scale);\n    }\n  };\n\n  const calculateBounds = (points) => {\n    if (points.length === 0) return { minX: 0, maxX: 0, minY: 0, maxY: 0, centerX: 0, centerY: 0, width: 0, height: 0 };\n\n    const xCoords = points.map(p => p[0]);\n    const yCoords = points.map(p => p[1]);\n    \n    const minX = Math.min(...xCoords);\n    const maxX = Math.max(...xCoords);\n    const minY = Math.min(...yCoords);\n    const maxY = Math.max(...yCoords);\n    \n    return {\n      minX, maxX, minY, maxY,\n      centerX: (minX + maxX) / 2,\n      centerY: (minY + maxY) / 2,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  };\n\n  const drawAxes = (ctx, centerX, centerY, scale) => {\n    ctx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n    ctx.lineWidth = 1;\n    \n    // X axis\n    ctx.beginPath();\n    ctx.moveTo(centerX - 50, centerY);\n    ctx.lineTo(centerX + 50, centerY);\n    ctx.stroke();\n    \n    // Y axis\n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY - 50);\n    ctx.lineTo(centerX, centerY + 50);\n    ctx.stroke();\n    \n    // Labels\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.6)';\n    ctx.font = '8px Inter, sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText('X', centerX + 55, centerY + 3);\n    ctx.fillText('Y', centerX + 3, centerY - 55);\n  };\n\n  const handleCanvasMouseMove = (e) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const rect = canvas.getBoundingClientRect();\n    \n    if (isPanning) {\n      // Handle panning\n      const deltaX = e.clientX - lastPanPos.x;\n      const deltaY = e.clientY - lastPanPos.y;\n      \n      setPan(prev => ({\n        x: prev.x + deltaX,\n        y: prev.y + deltaY\n      }));\n      \n      setLastPanPos({ x: e.clientX, y: e.clientY });\n    } else if (viewMode === '3d' && !showOnImage) {\n      // Handle 3D rotation\n      const x = (e.clientX - rect.left) / rect.width;\n      const y = (e.clientY - rect.top) / rect.height;\n      \n      setRotation({\n        x: (y - 0.5) * Math.PI,\n        y: (x - 0.5) * Math.PI\n      });\n    }\n  };\n\n  const handleCanvasMouseDown = (e) => {\n    if (e.button === 1 || (e.button === 0 && e.ctrlKey)) {\n      // Middle mouse or Ctrl+left click for panning\n      setIsPanning(true);\n      setLastPanPos({ x: e.clientX, y: e.clientY });\n      e.preventDefault();\n    } else if (e.button === 0 && viewMode === '3d' && !showOnImage) {\n      // Left click for 3D rotation\n      setIsDragging(true);\n      setLastMousePos({ x: e.clientX, y: e.clientY });\n    }\n  };\n\n  const handleCanvasMouseUp = () => {\n    setIsDragging(false);\n    setIsPanning(false);\n  };\n\n  const handleCanvasWheel = (e) => {\n    e.preventDefault();\n    const delta = e.deltaY > 0 ? 0.9 : 1.1;\n    setZoom(prev => Math.max(0.1, Math.min(10, prev * delta)));\n  };\n\n  const resetView = () => {\n    setZoom(1.0);\n    setPan({ x: 0, y: 0 });\n    setRotation({ x: 0, y: 0 });\n  };\n\n  if (!pathData || !pathData.visualization) {\n    return (\n      <VisualizationContainer>\n        <VisualizationHeader>\n          <VisualizationTitle>🗺️ Path Visualization</VisualizationTitle>\n        </VisualizationHeader>\n        <div style={{ textAlign: 'center', padding: '40px', color: 'rgba(255, 255, 255, 0.5)' }}>\n          No path data available\n        </div>\n      </VisualizationContainer>\n    );\n  }\n\n  const metrics = pathData.metrics || {};\n\n  return (\n    <VisualizationContainer>\n      <VisualizationHeader>\n        <VisualizationTitle>🗺️ Path Visualization</VisualizationTitle>\n        <ViewControls>\n          <ViewButton \n            active={viewMode === '3d'} \n            onClick={() => setViewMode('3d')}\n          >\n            3D View\n          </ViewButton>\n          <ViewButton \n            active={viewMode === '2d'} \n            onClick={() => setViewMode('2d')}\n          >\n            2D View\n          </ViewButton>\n          <ViewButton \n            active={showOnImage} \n            onClick={() => setShowOnImage(!showOnImage)}\n          >\n            📸 On Image\n          </ViewButton>\n          <ViewButton \n            onClick={() => setZoom(prev => Math.min(10, prev * 1.2))}\n            title=\"Zoom In\"\n          >\n            🔍+\n          </ViewButton>\n          <ViewButton \n            onClick={() => setZoom(prev => Math.max(0.1, prev * 0.8))}\n            title=\"Zoom Out\"\n          >\n            🔍-\n          </ViewButton>\n          <ViewButton \n            onClick={resetView}\n            title=\"Reset View\"\n          >\n            🏠 Reset\n          </ViewButton>\n        </ViewControls>\n      </VisualizationHeader>\n\n      <CanvasContainer>\n        <Canvas\n          ref={canvasRef}\n          onMouseMove={handleCanvasMouseMove}\n          onMouseDown={handleCanvasMouseDown}\n          onMouseUp={handleCanvasMouseUp}\n          onWheel={handleCanvasWheel}\n        />\n      </CanvasContainer>\n\n      <Legend>\n        <LegendItem>\n          <LegendColor color=\"#00ff00\" />\n          <span>Start Position</span>\n        </LegendItem>\n        <LegendItem>\n          <LegendColor color=\"#00ffff\" />\n          <span>Feasible Debris</span>\n        </LegendItem>\n        <LegendItem>\n          <LegendColor color=\"#ffaa00\" />\n          <span>Non-feasible</span>\n        </LegendItem>\n        <LegendItem>\n          <LegendColor color=\"#ff0000\" />\n          <span>End Position</span>\n        </LegendItem>\n        <LegendItem>\n          <div style={{ width: '12px', height: '2px', background: 'rgba(0, 255, 255, 0.6)', margin: '5px 0' }}></div>\n          <span>Path Connection</span>\n        </LegendItem>\n        <LegendItem>\n          <span>🔍 Zoom: {Math.round(zoom * 100)}%</span>\n        </LegendItem>\n        <LegendItem>\n          <span>Controls: Scroll=Zoom, Ctrl+Drag=Pan, Drag=Rotate(3D)</span>\n        </LegendItem>\n        {showOnImage && (\n          <LegendItem>\n            <span>📸 Image Mode: Zoom and pan work with the image</span>\n          </LegendItem>\n        )}\n      </Legend>\n\n      <PathInfo>\n        <InfoCard>\n          <InfoLabel>Path Length</InfoLabel>\n          <InfoValue>{pathData.path_length || 0} steps</InfoValue>\n        </InfoCard>\n        \n        <InfoCard>\n          <InfoLabel>Total Distance</InfoLabel>\n          <InfoValue>{metrics.total_distance ? `${(metrics.total_distance / 1000).toFixed(1)} km` : '0 km'}</InfoValue>\n        </InfoCard>\n        \n        <InfoCard>\n          <InfoLabel>Mission Time</InfoLabel>\n          <InfoValue>{metrics.total_time ? `${(metrics.total_time / 3600).toFixed(1)} hours` : '0 hours'}</InfoValue>\n        </InfoCard>\n        \n        <InfoCard>\n          <InfoLabel>Fuel Required</InfoLabel>\n          <InfoValue>{metrics.total_fuel ? `${metrics.total_fuel.toFixed(1)} kg` : '0 kg'}</InfoValue>\n        </InfoCard>\n      </PathInfo>\n\n      <PathSteps>\n        <h4 style={{ color: '#ffffff', marginBottom: '10px', fontSize: '14px' }}>\n          Path Steps:\n        </h4>\n        \n        {pathData.path?.map((step, index) => (\n          <StepItem \n            key={index}\n            color={index === 0 ? '#00ff00' : index === pathData.path.length - 1 ? '#ff0000' : '#00ffff'}\n          >\n            <strong>Step {step.step}:</strong> {index === 0 ? 'Start' : `Debris ${step.debris_id}`} \n            {step.distance_from_previous && (\n              <span style={{ float: 'right', color: 'rgba(255, 255, 255, 0.6)' }}>\n                {step.distance_from_previous.toFixed(1)}m\n              </span>\n            )}\n          </StepItem>\n        ))}\n      </PathSteps>\n    </VisualizationContainer>\n  );\n}\n\nexport default PathVisualization;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}